import{ax as p,d as a,a0 as o,r as g,e as s,y as m,j as l}from"./index.js";import{f as c,u as n}from"./LayerView.js";import{i as d}from"./GraphicContainer.js";import{a as u}from"./BaseGraphicContainer.js";import"./Container.js";import"./definitions.js";import"./enums.js";import"./Texture.js";import"./color.js";import"./enums2.js";import"./VertexElementDescriptor.js";import"./ExpandedCIM.js";import"./BidiEngine.js";import"./GeometryUtils.js";import"./MaterialKey.js";import"./Rect.js";import"./floatRGBA.js";import"./normalizeUtilsSync.js";import"./projectionSupport.js";import"./json.js";import"./VertexArrayObject.js";import"./FeatureContainer.js";import"./TileContainer.js";import"./WGLContainer.js";import"./ProgramTemplate.js";import"./utils.js";import"./StyleDefinition.js";import"./config.js";import"./GeometryUtils2.js";import"./earcut.js";import"./visualVariablesUtils.js";import"./visualVariablesUtils2.js";import"./Matcher.js";import"./tileUtils.js";import"./TurboLine.js";import"./devEnvironmentUtils.js";import"./schemaUtils.js";import"./createSymbolSchema.js";import"./util.js";import"./ComputedAttributeStorage.js";import"./ArcadeDate.js";import"./executionError.js";import"./arcadeTimeUtils.js";import"./centroid.js";import"./vec3f32.js";const w={remove(){},pause(){},resume(){}};let e=class extends c(n){constructor(){super(...arguments),this._highlightIds=new Map}attach(){this.graphicsView=new u({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new d(this.view.featuresTilingScheme)}),this._updateHighlight(),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler))}detach(){this.container.removeAllChildren(),this.graphicsView=p(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}async fetchPopupFeatures(i){return this.graphicsView?this.graphicsView.hitTest(i).filter(t=>!!t.popupTemplate):[]}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}moveStart(){}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i){let t;typeof i=="number"?t=[i]:i instanceof a?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(h=>h&&h.uid):o.isCollection(i)&&i.length>0&&(t=i.map(h=>h&&h.uid).toArray());const r=t==null?void 0:t.filter(g);return r!=null&&r.length?(this._addHighlight(r),{remove:()=>this._removeHighlight(r)}):w}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t);this._highlightIds.set(t,r+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t)-1;r===0?this._highlightIds.delete(t):this._highlightIds.set(t,r)}this._updateHighlight()}_updateHighlight(){var i;(i=this.graphicsView)==null||i.setHighlight(Array.from(this._highlightIds.keys()))}};s([m()],e.prototype,"graphicsView",void 0),e=s([l("esri.views.2d.layers.GraphicsLayerView2D")],e);const oi=e;export{oi as default};
