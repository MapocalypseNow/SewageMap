import{cD as z,bS as A,s as N,r as U,c as D,L as u,cH as $,cI as C,fw as P,cF as x,cG as E,fx as O,fy as G,fz as g,fA as S,cE as H}from"./index.js";import{c as I,a as w}from"./devEnvironmentUtils.js";function W(e,t,a,l){return e.name?e.styleName&&e.styleName==="Esri2DPointSymbolsStyle"?M(e,t,l):z(e,t,l).then(r=>L(A(r),e.name,t,a,l)):Promise.reject(new N("symbolstyleutils:style-symbol-reference-name-missing","Missing name in style symbol reference"))}function L(e,t,a,l,r){var f,h,d;const y=e.data,m=a&&U(a.portal)?a.portal:D.getDefault(),b={portal:m,url:u(e.baseUrl),origin:"portal-item"},o=y.items.find(n=>n.name===t);if(!o){const n=`The symbol name '${t}' could not be found`;return Promise.reject(new N("symbolstyleutils:symbol-name-not-found",n,{symbolName:t}))}let i=$(C(o,l),b),c=(h=(f=o.thumbnail)==null?void 0:f.href)!=null?h:null;const p=o.thumbnail&&o.thumbnail.imageData;I()&&(i=(d=w(i))!=null?d:"",c=w(c));const j={portal:m,url:u(P(i)),origin:"portal-item"};return x(i,r).then(n=>{const F=l==="cimRef"?E(n.data):n.data,s=O(F,j);if(s&&G(s)){if(c){const v=$(c,b);s.thumbnail=new g({url:v})}else p&&(s.thumbnail=new g({url:`data:image/png;base64,${p}`}));e.styleUrl?s.styleOrigin=new S({portal:a.portal,styleUrl:e.styleUrl,name:t}):e.styleName&&(s.styleOrigin=new S({portal:a.portal,styleName:e.styleName,name:t}))}return s})}function M(e,t,a){const l=H.replace(/\{SymbolName\}/gi,e.name),r=U(t.portal)?t.portal:D.getDefault();return x(l,a).then(y=>{const m=E(y.data);return O(m,{portal:r,url:u(P(l)),origin:"portal-item"})})}export{L as fetchSymbolFromStyle,W as resolveWebStyleSymbol};
