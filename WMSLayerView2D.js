import{e as s,y as m,er as M,j as I,ax as S,b as g,ae as E,D as $,az as R,w as q}from"./index.js";import{a as b}from"./BitmapContainer.js";import{f as U,u as V}from"./LayerView.js";import{v as W}from"./ExportStrategy.js";import{i as j}from"./RefreshableLayerView.js";import{l as L}from"./ExportWMSImageParameters.js";import"./WGLContainer.js";import"./definitions.js";import"./VertexArrayObject.js";import"./Texture.js";import"./enums.js";import"./VertexElementDescriptor.js";import"./color.js";import"./enums2.js";import"./ProgramTemplate.js";import"./MaterialKey.js";import"./utils.js";import"./StyleDefinition.js";import"./config.js";import"./GeometryUtils2.js";import"./Container.js";import"./earcut.js";import"./Bitmap.js";const z=t=>{let e=class extends t{initialize(){this.exportImageParameters=new L({layer:this.layer})}destroy(){this.exportImageParameters=S(this.exportImageParameters)}get exportImageVersion(){var r;return(r=this.exportImageParameters)==null||r.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}fetchPopupFeatures(r){const{layer:a}=this;if(!r)return Promise.reject(new g("wmslayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:a}));const{popupEnabled:p}=a;if(!p)return Promise.reject(new g("wmslayerview:fetchPopupFeatures","popupEnabled should be true",{popupEnabled:p}));const u=this.createFetchPopupFeaturesQuery(r);if(!u)return Promise.resolve([]);const{extent:i,width:o,height:n,x:d,y:c}=u;if(!(i&&o&&n))throw new g("wmslayerview:fetchPopupFeatures","WMSLayer does not support fetching features.",{extent:i,width:o,height:n});return a.fetchFeatureInfo(i,o,n,d,c)}};return s([m()],e.prototype,"exportImageParameters",void 0),s([m({readOnly:!0})],e.prototype,"exportImageVersion",null),s([m()],e.prototype,"layer",void 0),s([m(M)],e.prototype,"timeExtent",void 0),e=s([I("esri.layers.mixins.WMSLayerView")],e),e};let h=class extends z(j(U(V))){constructor(){super(...arguments),this.bitmapContainer=new b}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}update(t){this.strategy.update(t).catch(e=>{E(e)||$.getLogger(this.declaredClass).error(e)})}attach(){const{layer:t}=this,{imageMaxHeight:e,imageMaxWidth:r}=t;this.bitmapContainer=new b,this.container.addChild(this.bitmapContainer),this.strategy=new W({container:this.bitmapContainer,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxHeight:e,imageMaxWidth:r,imageRotationSupported:!1,imageNormalizationSupported:!1,hidpi:!1}),this.addAttachHandles(R(()=>this.exportImageVersion,()=>this.requestUpdate()))}detach(){this.strategy=S(this.strategy),this.container.removeAllChildren()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQuery(t){const{view:e,bitmapContainer:r}=this,{x:a,y:p}=t,{spatialReference:u}=e;let i,o=0,n=0;if(r.children.some(F=>{const{width:x,height:f,resolution:w,x:l,y}=F,v=l+w*x,P=y-w*f;return a>=l&&a<=v&&p<=y&&p>=P&&(i=new q({xmin:l,ymin:P,xmax:v,ymax:y,spatialReference:u}),o=x,n=f,!0)}),!i)return null;const d=i.width/o,c=Math.round((a-i.xmin)/d),C=Math.round((i.ymax-p)/d);return{extent:i,width:o,height:n,x:c,y:C}}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,e,r,a){return this.layer.fetchImageBitmap(t,e,r,{timeExtent:this.timeExtent,...a})}};s([m()],h.prototype,"strategy",void 0),s([m()],h.prototype,"updating",void 0),h=s([I("esri.views.2d.layers.WMSLayerView2D")],h);const pe=h;export{pe as default};
