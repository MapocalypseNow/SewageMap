import{l as y,n as V,p as _,w as E,e as a,y as u,K as D,j as R,q as v,L as I,h as T,u as A,z as w,t as f,A as Q,B as l,_ as n,r as p,b as P}from"./index.js";import{n as q,s as j}from"./executeForIds.js";async function L(e,t,r){const i=y(e);return V(i,_.from(t),{...r}).then(o=>({count:o.data.count,extent:E.fromJSON(o.data.extent)}))}let s=class extends v{constructor(e){super(e),this.dynamicDataSource=null,this.fieldsIndex=null,this.gdbVersion=null,this.infoFor3D=null,this.pbfSupported=!1,this.queryAttachmentsSupported=!1,this.sourceSpatialReference=null,this.url=null}get parsedUrl(){return I(this.url)}async execute(e,t){const r=await this.executeJSON(e,t);return this.featureSetFromJSON(e,r,t)}async executeJSON(e,t){var h;const r=this._normalizeQuery(e),i=((h=e.outStatistics)==null?void 0:h[0])!=null,o=T("featurelayer-pbf-statistics"),c=!i||o;let d;if(this.pbfSupported&&c)try{d=await A(this.url,r,t)}catch(m){if(m.name!=="query:parsing-pbf")throw m;this.pbfSupported=!1}return this.pbfSupported&&c||(d=await w(this.url,r,t)),this._normalizeFields(d.fields),d}async featureSetFromJSON(e,t,r){if(!this._queryIs3DObjectFormat(e)||f(this.infoFor3D)||!t.assetMaps||!t.features||!t.features.length)return Q.fromJSON(t);const{meshFeatureSetFromJSON:i}=await l(n(()=>import("./meshFeatureSet.js").then(o=>o.a),["meshFeatureSet.js","index.js","assets/index.45a801fc.css","georeference.js","mat3f64.js","mat4f64.js","spatialReferenceEllipsoidUtils.js","quat.js","quatf64.js","BufferView.js","vec33.js","imageUtils.js","earcut.js","deduplicate.js","Indices.js"]),r);return i(e,this.infoFor3D,t)}executeForCount(e,t){return q(this.url,this._normalizeQuery(e),t)}executeForExtent(e,t){return L(this.url,this._normalizeQuery(e),t)}executeForIds(e,t){return j(this.url,this._normalizeQuery(e),t)}async executeRelationshipQuery(e,t){const[{default:r},{executeRelationshipQuery:i}]=await l(Promise.all([n(()=>import("./index.js").then(o=>o.m4),["index.js","assets/index.45a801fc.css"]),n(()=>import("./executeRelationshipQuery.js"),["executeRelationshipQuery.js","index.js","assets/index.45a801fc.css"])]),t);return e=r.from(e),(this.gdbVersion||this.dynamicDataSource)&&((e=e.clone()).gdbVersion=e.gdbVersion||this.gdbVersion,e.dynamicDataSource=e.dynamicDataSource||this.dynamicDataSource),i(this.url,e,t)}async executeRelationshipQueryForCount(e,t){const[{default:r},{executeRelationshipQueryForCount:i}]=await l(Promise.all([n(()=>import("./index.js").then(o=>o.m4),["index.js","assets/index.45a801fc.css"]),n(()=>import("./executeRelationshipQuery.js"),["executeRelationshipQuery.js","index.js","assets/index.45a801fc.css"])]),t);return e=r.from(e),(this.gdbVersion||this.dynamicDataSource)&&((e=e.clone()).gdbVersion=e.gdbVersion||this.gdbVersion,e.dynamicDataSource=e.dynamicDataSource||this.dynamicDataSource),i(this.url,e,t)}async executeAttachmentQuery(e,t){const{executeAttachmentQuery:r,fetchAttachments:i,processAttachmentQueryResult:o}=await l(n(()=>import("./queryAttachments.js"),["queryAttachments.js","index.js","assets/index.45a801fc.css"]),t),c=y(this.url);return o(c,await(this.queryAttachmentsSupported?r(c,e,t):i(c,e,t)))}async executeTopFeaturesQuery(e,t){const{executeTopFeaturesQuery:r}=await l(n(()=>import("./executeTopFeaturesQuery.js"),["executeTopFeaturesQuery.js","index.js","assets/index.45a801fc.css","queryTopFeatures.js"]),t);return r(this.parsedUrl,e,this.sourceSpatialReference,t)}async executeForTopIds(e,t){const{executeForTopIds:r}=await l(n(()=>import("./executeForTopIds.js"),["executeForTopIds.js","index.js","assets/index.45a801fc.css","queryTopFeatures.js"]),t);return r(this.parsedUrl,e,t)}async executeForTopExtents(e,t){const{executeForTopExtents:r}=await l(n(()=>import("./executeForTopExtents.js"),["executeForTopExtents.js","index.js","assets/index.45a801fc.css","queryTopFeatures.js"]),t);return r(this.parsedUrl,e,t)}async executeForTopCount(e,t){const{executeForTopCount:r}=await l(n(()=>import("./executeForTopCount.js"),["executeForTopCount.js","index.js","assets/index.45a801fc.css","queryTopFeatures.js"]),t);return r(this.parsedUrl,e,t)}_normalizeQuery(e){let t=_.from(e);if(t.sourceSpatialReference=t.sourceSpatialReference||this.sourceSpatialReference,(this.gdbVersion||this.dynamicDataSource)&&(t=t===e?t.clone():t,t.gdbVersion=e.gdbVersion||this.gdbVersion,t.dynamicDataSource=e.dynamicDataSource?D.from(e.dynamicDataSource):this.dynamicDataSource),p(this.infoFor3D)&&this._queryIs3DObjectFormat(e)){t=t===e?t.clone():t,t.formatOf3DObjects=null;for(const r of this.infoFor3D.queryFormats){if(r==="3D_glb"){t.formatOf3DObjects=r;break}r!=="3D_gltf"||t.formatOf3DObjects||(t.formatOf3DObjects=r)}if(!t.formatOf3DObjects)throw new P("query:unsupported-3d-query-formats","Could not find any supported 3D object query format. Only supported formats are 3D_glb and 3D_gltf");if(f(t.outFields)||!t.outFields.includes("*")){t=t===e?t.clone():t,f(t.outFields)&&(t.outFields=[]);const{originX:r,originY:i,originZ:o,translationX:c,translationY:d,translationZ:h,scaleX:m,scaleY:S,scaleZ:F,rotationX:x,rotationY:b,rotationZ:O,rotationDeg:g}=this.infoFor3D.transformFieldRoles;t.outFields.push(r,i,o,c,d,h,m,S,F,x,b,O,g)}}return t}_normalizeFields(e){if(p(this.fieldsIndex)&&p(e))for(const t of e){const r=this.fieldsIndex.get(t.name);r&&Object.assign(t,r.toJSON())}}_queryIs3DObjectFormat(e){return p(this.infoFor3D)&&p(e.returnGeometry)&&e.multipatchOption!=="xyFootprint"&&!e.outStatistics}};a([u({type:D})],s.prototype,"dynamicDataSource",void 0),a([u()],s.prototype,"fieldsIndex",void 0),a([u()],s.prototype,"gdbVersion",void 0),a([u()],s.prototype,"infoFor3D",void 0),a([u({readOnly:!0})],s.prototype,"parsedUrl",null),a([u()],s.prototype,"pbfSupported",void 0),a([u()],s.prototype,"queryAttachmentsSupported",void 0),a([u()],s.prototype,"sourceSpatialReference",void 0),a([u({type:String})],s.prototype,"url",void 0),s=a([R("esri.tasks.QueryTask")],s);const N=s;export{N as x};
