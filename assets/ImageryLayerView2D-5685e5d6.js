import{e as a,y as o,n as v,m as T}from"./cast-4943406f.js";import{g as f}from"./Graphic-13c64b79.js";import{j as $}from"./Collection-e1ec52f9.js";import{l as g,w as _,U as V}from"./reactiveUtils-3389689f.js";import{r as b,t as E,e as I}from"./typedArrayUtil-bd69bba0.js";import"./ensureType-9613b5f0.js";import{i as U}from"./GraphicsCollection-52190ad0.js";import{y as z,d as A}from"./RasterVFDisplayObject-8a7d284e.js";import{y as M,u as O}from"./LayerView-79a52e98.js";import{o as j}from"./BaseGraphicContainer-fb7701cc.js";import{n as N}from"./HighlightGraphicContainer-38f27c26.js";import{s as P,a as S}from"./Error-8814705f.js";import{j as R,x as J}from"./promiseUtils-ec14a623.js";import{A as L}from"./pixelUtils-46dc1a17.js";import{a as G}from"./BitmapContainer-92a414ad.js";import{i as H}from"./utils-6c2a743f.js";import{i as W}from"./Bitmap-1884319c.js";import{v as K}from"./ExportStrategy-aabd9148.js";import{U as Q}from"./request-9ab300ca.js";import{d as X}from"./HandleOwner-46fb81da.js";import{a as k,w as q}from"./Extent-d21a2637.js";import{J as Y}from"./rasterProjectionHelper-39c95b0c.js";import{x as Z,d as tt}from"./dataUtils-0d9ee7ab.js";import{o as et,d as it}from"./WGLContainer-29833e70.js";import{I as D}from"./enums-4ca4641f.js";import{g as rt}from"./OperationalLayer-620e6022.js";import{x as st}from"./Query-ca5b0d4c.js";import{s as at}from"./popupUtils-4b3e472a.js";import{i as ot}from"./RefreshableLayerView-9b436f42.js";import"./string-cc430a78.js";import"./nextTick-3ee5a785.js";import"./geometry-da69b92c.js";import"./Polyline-98ddf509.js";import"./typeUtils-98cd71e2.js";import"./jsonMap-9318d50f.js";import"./PopupTemplate-9e34fd80.js";import"./Clonable-7eedeb5c.js";import"./fieldUtils-605e1353.js";import"./preload-helper-6c8d3039.js";import"./arcadeOnDemand-5200ab6b.js";import"./enumeration-1740c98c.js";import"./number-d7fe9942.js";import"./locale-30120714.js";import"./Identifiable-28626f77.js";import"./symbols-26ff8002.js";import"./CIMSymbol-fc3b1809.js";import"./Symbol-f543a02b.js";import"./Color-ebbea628.js";import"./colorUtils-639f4d25.js";import"./mathUtils-daf59e84.js";import"./common-701a4199.js";import"./screenUtils-7afeb41c.js";import"./opacityUtils-dc8d0a85.js";import"./aaBoundingBox-58fec4c8.js";import"./persistableUrlUtils-d6987fba.js";import"./collectionUtils-28848f7d.js";import"./Portal-c85307b1.js";import"./Loadable-8b974e55.js";import"./Promise-9613afa4.js";import"./PortalGroup-e30a1480.js";import"./PortalUser-6c405f61.js";import"./jsonUtils-7333a4d1.js";import"./Evented-28d49a6f.js";import"./SimpleObservable-b403cd38.js";import"./VertexArrayObject-d7e1aaa4.js";import"./Texture-48c77062.js";import"./context-util-7d5aeb56.js";import"./enums-64ab819c.js";import"./VertexElementDescriptor-2925c6af.js";import"./mat3-45e3f2eb.js";import"./mat3f32-d3d088e8.js";import"./vec2f32-461e65a9.js";import"./Utils-3e9667e7.js";import"./enums-8bf08d0c.js";import"./ExpandedCIM-eed2255c.js";import"./BidiEngine-836b7ef6.js";import"./aaBoundingRect-647e206b.js";import"./MaterialKey-1f59feb3.js";import"./mat2d-80bd93af.js";import"./vec2-f978aef8.js";import"./Rect-ea14f53a.js";import"./utils-179e89a7.js";import"./generateRendererUtils-717e0562.js";import"./colorRamps-08b6e1ac.js";import"./GeometryUtils-eebff0a0.js";import"./floatRGBA-305df8f3.js";import"./normalizeUtilsSync-0179d35a.js";import"./normalizeUtils-758f8b63.js";import"./projectionSupport-80e82945.js";import"./projection-462aeb9f.js";import"./unitUtils-bc71b997.js";import"./mat4-62d5e6a4.js";import"./assets-2905a8db.js";import"./zscale-3fafe111.js";import"./json-48e3ea08.js";import"./labelingInfo-b488ae0e.js";import"./labelUtils-f67e4fba.js";import"./defaultsJSON-b087dd4d.js";import"./jsonUtils-218ba25d.js";import"./FeatureContainer-785f32e4.js";import"./TileContainer-1bf5c725.js";import"./TileKey-75a33c7e.js";import"./Queue-f6edac75.js";import"./visualVariablesUtils-7a7dd725.js";import"./visualVariablesUtils-ed2679c7.js";import"./lengthUtils-b711b4b2.js";import"./capabilities-8b80f0f1.js";import"./Matcher-5bf6a748.js";import"./TileStrategy-4661211c.js";import"./TileStore-293c55d0.js";import"./rbush-8e36784a.js";import"./quickselect-322ec8e1.js";import"./tileUtils-09d0ab26.js";import"./TileClipper-b584e552.js";import"./Geometry-daada628.js";import"./GeometryUtils-c093d234.js";import"./featureConversionUtils-e981d065.js";import"./OptimizedFeature-ec32193d.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./earcut-58237617.js";import"./LRUCache-4d2d0a4a.js";import"./MemCache-786f3df9.js";import"./devEnvironmentUtils-5002a058.js";import"./styleUtils-e2a5393c.js";import"./schemaUtils-0437e851.js";import"./LayerFloorInfo-b2b66573.js";import"./diffUtils-2ca899cf.js";import"./createSymbolSchema-ead7d58c.js";import"./rendererUtils-6b7c4a91.js";import"./FeatureReductionLayer-c35575f9.js";import"./BlendLayer-8c6b6724.js";import"./parser-da666a95.js";import"./TimeExtent-fd94e986.js";import"./UniqueValueRenderer-e68a70b1.js";import"./ColorStop-5a499504.js";import"./sizeVariableUtils-d4870b0d.js";import"./compilerUtils-527a276b.js";import"./jsonUtils-e7abff59.js";import"./DictionaryLoader-b16ebe69.js";import"./deprecate-bd315c0b.js";import"./heatmapUtils-90a13d85.js";import"./vec4f64-018b3fa6.js";import"./util-9fb47bc4.js";import"./ComputedAttributeStorage-ad7847f7.js";import"./FeatureSetReader-6983c047.js";import"./centroid-1300048c.js";import"./FieldsIndex-e1d877a8.js";import"./vec3f32-4322908d.js";import"./TileInfo-d1c5acd2.js";import"./vec2f64-e0301652.js";import"./ProgramTemplate-81287b8c.js";import"./StyleDefinition-3c6a4c69.js";import"./config-1337d16e.js";import"./ElevationInfo-2dc5cc64.js";import"./Field-27137e22.js";import"./fieldType-ff12d8db.js";let l=class extends T{constructor(){super(...arguments),this.attached=!1,this.container=new H,this.updateRequested=!1,this.type="imagery",this._bitmapView=new G}destroy(){this.attached&&(this.detach(),this.attached=!1),this.updateRequested=!1}get updating(){return!this.attached||this.isUpdating()}update(t){this.strategy.update(t).catch(e=>{R(e)||P.getLogger(this.declaredClass).error(e)})}hitTest(t){return new f({attributes:{},geometry:t.clone(),layer:this.layer})}attach(){this.container.addChild(this._bitmapView);const t=this.layer.version>=10,e=this.layer.version>=10.1?this.layer.imageMaxHeight:2048,i=this.layer.version>=10.1?this.layer.imageMaxWidth:2048;this.strategy=new K({container:this._bitmapView,imageNormalizationSupported:t,imageMaxHeight:e,imageMaxWidth:i,fetchSource:this._fetchImage.bind(this),requestUpdate:()=>this.requestUpdate()})}detach(){this.strategy.destroy(),this._bitmapView.removeAllChildren(),this.container.removeAllChildren(),this.updateRequested=!1}redraw(){this.strategy.updateExports(async t=>{if(t.source instanceof HTMLImageElement)return;const e=await this.layer.applyRenderer({extent:t.source.extent,pixelBlock:t.source.originalPixelBlock??t.source.pixelBlock}),i=t.source;i.filter=r=>this.layer.pixelFilter?this.layer.applyFilter(r):{...e,extent:i.extent}}).catch(t=>{R(t)||P.getLogger(this.declaredClass).error(t)})}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.view.requestUpdate())}isUpdating(){return this.strategy.updating||this.updateRequested}getPixelData(){if(this.updating)return null;const t=this.strategy.bitmaps;if(t.length===1&&t[0].source)return{extent:t[0].source.extent,pixelBlock:t[0].source.originalPixelBlock};if(t.length>1){const e=this.view.extent,i=t.map(s=>s.source).filter(s=>s.extent&&s.extent.intersects(e)).map(s=>({extent:s.extent,pixelBlock:s.originalPixelBlock})),r=L(i,e);return b(r)?{extent:r.extent,pixelBlock:r.pixelBlock}:null}return null}_fetchImage(t,e,i,r){return(r=r||{}).timeExtent=this.timeExtent,r.requestAsImageElement=!0,this.layer.fetchImage(t,e,i,r).then(s=>s.imageOrCanvasElement?s.imageOrCanvasElement:this.layer.applyRenderer(s.pixelData,{signal:r.signal}).then(n=>{const p=new W(n.pixelBlock,n.extent.clone(),s.pixelData.pixelBlock);return p.filter=u=>this.layer.applyFilter(u),p}))}};a([o()],l.prototype,"attached",void 0),a([o()],l.prototype,"container",void 0),a([o()],l.prototype,"layer",void 0),a([o()],l.prototype,"strategy",void 0),a([o()],l.prototype,"timeExtent",void 0),a([o()],l.prototype,"view",void 0),a([o()],l.prototype,"updateRequested",void 0),a([o()],l.prototype,"updating",null),a([o()],l.prototype,"type",void 0),l=a([v("esri.views.2d.layers.imagery.ImageryView2D")],l);const nt=l;class pt extends et{constructor(){super(...arguments),this.symbolTypes=["triangle"]}get requiresDedicatedFBO(){return!1}prepareRenderPasses(e){const i=e.registerRenderPass({name:"imagery (vf)",brushes:[it],target:()=>this.children,drawPhase:D.MAP});return[...super.prepareRenderPasses(e),i]}doRender(e){this.visible&&e.drawPhase===D.MAP&&this.symbolTypes.forEach(i=>{e.renderPass=i,super.doRender(e)})}}let y=class extends T{constructor(t){super(t),this.update=J((e,i)=>this._update(e,i).catch(r=>{R(r)||P.getLogger(this.declaredClass).error(r)}))}get updating(){return!!this._loading}redraw(t){if(!this.container.children.length)return;const e=this.container.children[0];e.symbolizerParameters=t,e.invalidateVAO(),this.container.symbolTypes=t.style==="wind_speed"?["scalar","triangle"]:t.style==="simple_scalar"?["scalar"]:["triangle"],this.container.requestRender()}async _update(t,e,i){if(!t.stationary)return;const{extent:r,spatialReference:s}=t.state,n=new k({xmin:r.xmin,ymin:r.ymin,xmax:r.xmax,ymax:r.ymax,spatialReference:s}),[p,u]=t.state.size;this._loading=this.fetchPixels(n,p,u,i);const h=await this._loading;this._addToDisplay(h,e,t.state),this._loading=null}_addToDisplay(t,e,i){if(E(t.pixelBlock))return this.container.children.forEach(p=>p.destroy()),void this.container.removeAllChildren();const{extent:r,pixelBlock:s}=t,n=new z(s);n.offset=[0,0],n.symbolizerParameters=e,n.rawPixelData=t,n.invalidateVAO(),n.x=r.xmin,n.y=r.ymax,n.pixelRatio=i.pixelRatio,n.rotation=i.rotation,n.resolution=i.resolution,n.width=s.width*e.symbolTileSize,n.height=s.height*e.symbolTileSize,this.container.children.forEach(p=>p.destroy()),this.container.removeAllChildren(),this.container.symbolTypes=e.style==="wind_speed"?["scalar","triangle"]:e.style==="simple_scalar"?["scalar"]:["triangle"],this.container.addChild(n)}};a([o()],y.prototype,"fetchPixels",void 0),a([o()],y.prototype,"container",void 0),a([o()],y.prototype,"_loading",void 0),a([o()],y.prototype,"updating",null),y=a([v("esri.views.2d.layers.imagery.ImageryVFStrategy")],y);const lt=y;let m=class extends X{constructor(){super(...arguments),this.attached=!1,this.container=new pt,this.type="imageryVF",this._dataParameters={exportParametersVersion:0,bbox:"",symbolTileSize:0,time:""},this._fetchpixels=async(t,e,i,r)=>{const s=await this._projectFullExtentPromise,{symbolTileSize:n}=this.layer.renderer,{extent:p,width:u,height:h}=Z(t,e,i,n,s);if(b(s)&&!s.intersects(t))return{extent:p,pixelBlock:null};const d={bbox:`${p.xmin}, ${p.ymin}, ${p.xmax}, ${p.ymax}`,exportParametersVersion:this.layer.exportImageServiceParameters.version,symbolTileSize:n,time:JSON.stringify(this.timeExtent||"")};if(this._canReuseVectorFieldData(d)){const c=this.getPixelData();if(b(c)&&`${c.extent.xmin}, ${c.extent.ymin}, ${c.extent.xmax}, ${c.extent.ymax}`===d.bbox)return c}const{pixelData:w}=await this.layer.fetchImage(p,u,h,{timeExtent:this.timeExtent,requestAsImageElement:!1,signal:r});return this._dataParameters=d,E(w.pixelBlock)?{extent:p,pixelBlock:null}:{extent:p,pixelBlock:this.layer.rasterInfo.dataType==="vector-uv"?I(tt(w.pixelBlock,"vector-uv")):w.pixelBlock}}}get updating(){return!this.attached||this._strategy.updating}attach(){this._projectFullExtentPromise=this._getProjectedFullExtent(this.view.spatialReference),this._strategy=new lt({container:this.container,fetchPixels:this._fetchpixels}),this.handles.add(g(()=>this.layer.renderer,t=>this._updateSymbolizerParams(t),_),"vector-field-view-update")}detach(){this._strategy.destroy(),this.container.children.forEach(t=>t.destroy()),this.container.removeAllChildren(),this.handles.remove("vector-field-view-update"),this._strategy=this.container=this._projectFullExtentPromise=null}getPixelData(){if(this.updating||!this.container.children.length)return null;const{extent:t,pixelBlock:e}=this.container.children[0].rawPixelData;return{extent:t,pixelBlock:e}}hitTest(t){return new f({attributes:{},geometry:t.clone(),layer:this.layer})}update(t){this._strategy.update(t,this._symbolizerParams)}redraw(){this._updateSymbolizerParams(this.layer.renderer),this._strategy.redraw(this._symbolizerParams)}_canReuseVectorFieldData(t){const e=this._dataParameters.exportParametersVersion===t.exportParametersVersion,i=this._dataParameters.time===t.time,r=this._dataParameters.symbolTileSize===t.symbolTileSize,s=this._dataParameters.bbox===t.bbox;return e&&i&&r&&s}async _getProjectedFullExtent(t){try{return await Y(this.layer.fullExtent,t)}catch{try{const i=(await Q(this.layer.url,{query:{option:"footprints",outSR:t.wkid||JSON.stringify(t.toJSON()),f:"json"}})).data.featureCollection.layers[0].layerDefinition.extent;return i?k.fromJSON(i):null}catch{return null}}}_updateSymbolizerParams(t){t.type==="vector-field"&&(this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null}))}};a([o()],m.prototype,"attached",void 0),a([o()],m.prototype,"container",void 0),a([o()],m.prototype,"layer",void 0),a([o()],m.prototype,"timeExtent",void 0),a([o()],m.prototype,"type",void 0),a([o()],m.prototype,"view",void 0),a([o()],m.prototype,"updating",null),m=a([v("esri.views.2d.layers.imagery.VectorFieldView2D")],m);const mt=m,ht=t=>{let e=class extends t{constructor(){super(...arguments),this.view=null}async fetchPopupFeatures(i,r){const{layer:s}=this;if(!i)throw new S("imagerylayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:s});const{popupEnabled:n}=s,p=at(s,r);if(!n||E(p))throw new S("imagerylayerview:fetchPopupFeatures","Missing required popupTemplate or popupEnabled",{popupEnabled:n,popupTemplate:p});const u=await p.getRequiredFields(),h=new st;h.timeExtent=this.timeExtent,h.geometry=i,h.outFields=u,h.outSpatialReference=i.spatialReference;const d=this.view.resolution,w=this.view.type==="2d"?new q(d,d,this.view.spatialReference):new q(.5*d,.5*d,this.view.spatialReference),{returnTopmostRaster:c,showNoDataRecords:B}=p.layerOptions||{returnTopmostRaster:!0,showNoDataRecords:!1},C={returnDomainValues:!0,returnTopmostRaster:c,pixelSize:w,showNoDataRecords:B,signal:b(r)?r.signal:null};return s.queryVisibleRasters(h,C).then(F=>F)}canResume(){var i;return!!super.canResume()&&!((i=this.timeExtent)!=null&&i.isEmpty)}};return a([o()],e.prototype,"layer",void 0),a([o()],e.prototype,"suspended",void 0),a([o(rt)],e.prototype,"timeExtent",void 0),a([o()],e.prototype,"view",void 0),e=a([v("esri.views.layers.ImageryLayerView")],e),e};let x=class extends ht(ot(M(O))){constructor(){super(...arguments),this._exportImageVersion=-1,this._highlightGraphics=new U,this.subview=null}get pixelData(){return this.updating?null:"getPixelData"in this.subview?this.subview.getPixelData():null}async hitTest(t,e){return this.subview?[{type:"graphic",graphic:this.subview.hitTest(t),layer:this.layer,mapPoint:t}]:null}update(t){var e;(e=this.subview)==null||e.update(t)}attach(){this.layer.increaseRasterJobHandlerUsage(),this._setSubView(),this.view&&(this._highlightView=new j({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new N(this.view.featuresTilingScheme)}),this.container.addChild(this._highlightView.container)),this.handles.add([g(()=>this.layer.blendMode??"normal",t=>this.subview.container.blendMode=t,_),g(()=>this.layer.effect??null,t=>this.subview.container.effect=t,_),g(()=>this.layer.exportImageServiceParameters.version,t=>{t&&this._exportImageVersion!==t&&(this._exportImageVersion=t,this.requestUpdate())},V),g(()=>this.timeExtent,t=>{this.subview.timeExtent=t,"redraw"in this.subview?this.requestUpdate():this.subview.redrawOrRefetch()},V),this.layer.on("redraw",()=>{"redraw"in this.subview?this.subview.redraw():this.subview.redrawOrRefetch()}),g(()=>this.layer.renderer,()=>this._setSubView())],"imagerylayerview-update")}detach(){var t,e;this.layer.decreaseRasterJobHandlerUsage(),this.container.removeAllChildren(),this._detachSubview(this.subview),(t=this.subview)==null||t.destroy(),this.handles.remove("imagerylayerview-update"),this.subview=null,(e=this._highlightView)==null||e.destroy(),this._exportImageVersion=-1}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}highlight(t,e){if(!((Array.isArray(t)?t[0]:$.isCollection(t)?t.getItemAt(0):t)instanceof f))return{remove:()=>{}};let i=[];return Array.isArray(t)||$.isCollection(t)?i=t.map(r=>r.clone()):t instanceof f&&(i=[t.clone()]),this._highlightGraphics.addMany(i),{remove:()=>{this._highlightGraphics.removeMany(i)}}}async doRefresh(){this.requestUpdate()}isUpdating(){return!this.subview||this.subview.updating}_setSubView(){var i,r;if(!this.view)return;const t=(i=this.layer.renderer)==null?void 0:i.type;let e="imagery";if(t==="vector-field"?e="imageryVF":t==="flow"&&(e="flow"),this.subview){const{type:s}=this.subview;if(s===e)return this._attachSubview(this.subview),void(s==="flow"?this.subview.redrawOrRefetch():s==="imagery"&&this.layer.format==="lerc"?this.subview.redraw():this.requestUpdate());this._detachSubview(this.subview),(r=this.subview)==null||r.destroy()}this.subview=e==="imagery"?new nt({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):e==="imageryVF"?new mt({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):new A({layer:this.layer,layerView:this}),this._attachSubview(this.subview),this.requestUpdate()}_attachSubview(t){t&&!t.attached&&(t.attach(),t.attached=!0,this.container.addChildAt(t.container,0),t.container.blendMode=this.layer.blendMode,t.container.effect=this.layer.effect)}_detachSubview(t){t!=null&&t.attached&&(this.container.removeChild(t.container),t.detach(),t.attached=!1)}};a([o()],x.prototype,"pixelData",null),a([o()],x.prototype,"subview",void 0),x=a([v("esri.views.2d.layers.ImageryLayerView2D")],x);const or=x;export{or as default};
