import{bq as k,e2 as re,cw as ae,e3 as ne,cP as oe,cR as he,a3 as _,I as c,ax as de,dX as L,cD as f,ad as D,ak as l,r as j,aO as X,dY as ue,e4 as x,cE as O,cj as le,bm as m,e5 as ce,bF as _e,e6 as pe}from"./vendor-445d19db.js";import{Q as A,L as H,aa as N,B as I,C as $,ad as U,ae as B,af as z,ag as C,am as q,an as Ee,O as xe,N as fe,ao as Re}from"./enums-8bf08d0c.js";import{r as me,i as ve}from"./TileContainer-9841958d.js";import{n as ge,l as Te,f as Y}from"./visualVariablesUtils-bd2b2199.js";import{m as T,l as be,J as K,Q as G}from"./Utils-cdacad72.js";import{D as Z,P as J,G as W,L as ee,M as ye,Y as Se,V as ke}from"./enums-64ab819c.js";import{x as ze}from"./VertexArrayObject-2a5c5453.js";import{E as te}from"./Texture-a2352f23.js";import{e as Ce,c as we}from"./utils-6396d15b.js";let Me=class{acquire(e){return{refCount:1,version:-1,labelMat2d:k(),tileMat3:k(),dvs:k()}}release(e){}};class y extends me{constructor(e,t,s,i){super(e,t,s,i,A,A)}destroy(){super.destroy(),this._transforms&&y.TransformCache.release(this.key.hash)}setTransform(e){const t=this.resolution/e.resolution,s=this.transforms.tileMat3,[i,r]=e.toScreenNoRotation([0,0],[this.x,this.y]),a=this.width/this.rangeX*t,n=this.height/this.rangeY*t;re(s,a,0,0,0,n,0,i,r,1),ae(this.transforms.dvs,e.displayViewMat3,s);const o=this.transforms.labelMat2d,d=window.devicePixelRatio,u=ne(oe(),a*d,0,0,n*d,i*d,r*d);he(o,e.viewMat2d,u)}_createTransforms(){return y.TransformCache.acquire(this.key.hash)}}y.TransformCache=new Me;const b=2147483647;class R{constructor(e){this._head=e,this._cursor=e}static from(e,t=0,s=e.byteLength/h.BYTES_PER_RECORD-t){const i=new h(new Int32Array(e,t*h.BYTES_PER_RECORD,s*h.ELEMENTS_PER_RECORD));return new R(i)}size(){let e=this._cursor,t=0;for(;e;)t+=e.size(),e=e._link;return t}get id(){return this._cursor.id}set id(e){this._cursor.id=e}get materialKey(){return this._cursor.materialKey}set materialKey(e){this._cursor.materialKey=e}get insertAfter(){return this._cursor.insertAfter}get indexFrom(){return this._cursor.indexFrom}set indexFrom(e){this._cursor.indexFrom=e}get indexCount(){return this._cursor.indexCount}set indexCount(e){this._cursor.indexCount=e}get vertexFrom(){return this._cursor.vertexFrom}set vertexFrom(e){this._cursor.vertexFrom=e}get vertexCount(){return this._cursor.vertexCount}set vertexCount(e){this._cursor.vertexCount=e}get sortKey(){return this._cursor.sortKey}set sortKey(e){this._cursor.sortKey=e}get index(){return this._cursor._indexStart+this._cursor._index}seekIndex(e){let t=e;for(this._cursor=this._head;this._cursor;){const s=this._cursor.size();if(t<s)return this._cursor._index=t,!0;t-=s,this._cursor=this._cursor._link}return!1}forEach(e){const t=this.getCursor();for(;t.next();)e(t)}link(e){if(!this._head)return void(this._head=e._head);let t=this._head;for(;t._link;)t=t._link;t._link=e._head,t._link._indexStart=t._indexStart+t.size()}getCursor(){return this.copy()}lookup(e){for(this._cursor=this._head;this._cursor&&!this._cursor.lookup(e);){if(!this._cursor._link)return!1;this._cursor=this._cursor._link}return!!this._cursor}copy(){var i;const e=new R((i=this._head)==null?void 0:i.copy());if(!e._head)return e;let t=e._head,s=e._head._link;for(;s;)t._link=s.copy(),t=s,s=t._link;return e}next(){return!!this._cursor&&(!!this._cursor.next()||!!this._cursor._link&&(this._cursor=this._cursor._link,this.next()))}peekId(){return this._cursor.peekId()??this._cursor._link.peekId()}delete(e){let t=this._head,s=null;for(;t;){if(t.delete(e))return t.isEmpty()&&(_(s)&&(s._link=t._link),t===this._head&&(this._head=t._link),t===this._cursor&&(this._cursor=t._link)),!0;s=t,t=t._link}return!1}}R.ELEMENTS_PER_RECORD=H,R.BYTES_PER_RECORD=R.ELEMENTS_PER_RECORD*Int32Array.BYTES_PER_ELEMENT;class h{constructor(e){this._link=null,this._index=-1,this._indexStart=0,this._packedRecordsF32=null,this._deletedCount=0,this._offsets={instance:null},this._packedRecords=e}static from(e,t=0,s=e.byteLength/this.BYTES_PER_RECORD-t){return new h(new Int32Array(e,t*this.BYTES_PER_RECORD,s*this.ELEMENTS_PER_RECORD))}delete(e){const t=this._index,s=this.lookup(e);if(s)for(this.id=b,++this._deletedCount;this.next()&&this.id===e;)this.id=b,++this._deletedCount;return this._index=t,s}isEmpty(){return this._deletedCount===this.size()}link(e){this._link?this._link.link(e):this._link=e}lookup(e){if(c(this._offsets.instance)){this._offsets.instance=new Map;const s=this.copy();s._index=-1;let i=0;for(;s.next();)s.id!==i&&(this._offsets.instance.set(s.id,s._index),i=s.id)}if(!this._offsets.instance.has(e))return!1;const t=this._index;return this._index=this._offsets.instance.get(e),this.id!==b||(this._index=t,!1)}get id(){return this._packedRecords[this._index*h.ELEMENTS_PER_RECORD]}set id(e){this._packedRecords[this._index*h.ELEMENTS_PER_RECORD]=e}get materialKey(){return this._packedRecords[this._index*h.ELEMENTS_PER_RECORD+1]}set materialKey(e){this._packedRecords[this._index*h.ELEMENTS_PER_RECORD+1]=e}get insertAfter(){return this._packedRecords[this._index*h.ELEMENTS_PER_RECORD+2]}get indexFrom(){return this._packedRecords[this._index*h.ELEMENTS_PER_RECORD+3]}set indexFrom(e){this._packedRecords[this._index*h.ELEMENTS_PER_RECORD+3]=e}get indexCount(){return this._packedRecords[this._index*h.ELEMENTS_PER_RECORD+4]}set indexCount(e){this._packedRecords[this._index*h.ELEMENTS_PER_RECORD+4]=e}get vertexFrom(){return this._packedRecords[this._index*h.ELEMENTS_PER_RECORD+5]}set vertexFrom(e){this._packedRecords[this._index*h.ELEMENTS_PER_RECORD+5]=e}get vertexCount(){return this._packedRecords[this._index*h.ELEMENTS_PER_RECORD+6]}set vertexCount(e){this._packedRecords[this._index*h.ELEMENTS_PER_RECORD+6]=e}get sortKey(){return this._packedRecordsF32||(this._packedRecordsF32=new Float32Array(this._packedRecords.buffer)),this._packedRecordsF32[this._index*h.ELEMENTS_PER_RECORD+7]}set sortKey(e){this._packedRecordsF32||(this._packedRecordsF32=new Float32Array(this._packedRecords.buffer)),this._packedRecordsF32[this._index*h.ELEMENTS_PER_RECORD+7]=e}get index(){return this._index}size(){return this._packedRecords.length/h.ELEMENTS_PER_RECORD}next(){for(;++this._index<this.size()&&this.id===b;);return this._index<this.size()}peekId(){const e=(this._index+1)*h.ELEMENTS_PER_RECORD;return e>=this._packedRecords.length?0:this._packedRecords[e]}getCursor(){return this.copy()}copy(){const e=new h(this._packedRecords);return e._indexStart=this._indexStart,e._link=this._link,e._index=this._index,e._offsets=this._offsets,e._deletedCount=this._deletedCount,e}}h.ELEMENTS_PER_RECORD=H,h.BYTES_PER_RECORD=h.ELEMENTS_PER_RECORD*Int32Array.BYTES_PER_ELEMENT;const P=de.getLogger("esri.views.2d.engine.webgl.AttributeStoreView"),w=ge(Te,P);class Q{constructor(e,t,s){this._texture=null,this._lastTexture=null,this._fbos={},this.texelSize=4;const{buffer:i,pixelType:r,textureOnly:a}=e,n=T(r);this.shared=s,this.pixelType=r,this.size=t,this.textureOnly=a,a||(this.data=new n(l(i))),this._resetRange()}destroy(){f(this._texture,e=>e.dispose());for(const e in this._fbos)f(this._fbos[e],t=>{e==="0"&&t.detachColorTexture(),t.dispose()}),this._fbos[e]=null;this._texture=null}get _textureDesc(){return{target:ye.TEXTURE_2D,wrapMode:Z.CLAMP_TO_EDGE,pixelFormat:J.RGBA,dataType:this.pixelType,samplingMode:ee.NEAREST,width:this.size,height:this.size}}setData(e,t,s){const i=Y(e),r=l(this.data),a=i*this.texelSize+t;!r||a>=r.length||(r[a]=s,this.dirtyStart=Math.min(this.dirtyStart,i),this.dirtyEnd=Math.max(this.dirtyEnd,i))}getData(e,t){if(c(this.data))return null;const s=Y(e)*this.texelSize+t;return!this.data||s>=this.data.length?null:this.data[s]}getTexture(e){return O(this._texture,()=>this._initTexture(e))}getFBO(e,t=0){if(c(this._fbos[t])){const s={colorTarget:Se.TEXTURE,depthStencilTarget:ke.NONE},i=t===0?this.getTexture(e):this._textureDesc;this._fbos[t]=new ze(e,s,i)}return this._fbos[t]}get locked(){return!(this.pixelType!==W.UNSIGNED_BYTE||!this.shared||this.textureOnly||!D("esri-atomics")||!this.data)&&Atomics.load(this.data,0)===1}get hasDirty(){const e=this.dirtyStart;return this.dirtyEnd>=e}updateTexture(e,t){if(!this.locked){try{const s=this.dirtyStart,i=this.dirtyEnd;if(!this.hasDirty)return;this._resetRange();const r=l(this.data).buffer,a=this.getTexture(e),n=4,o=(s-s%this.size)/this.size,d=(i-i%this.size)/this.size,u=o,E=this.size,v=d,g=o*this.size*n,S=(E+v*this.size)*n-g,F=T(this.pixelType),se=new F(r,g*F.BYTES_PER_ELEMENT,S),ie=this.size,V=v-u+1;if(V>this.size)return void P.error(new j("mapview-webgl","Out-of-bounds index when updating AttributeData"));a.updateData(0,0,u,ie,V,se)}catch{}t()}}update(e){const{data:t,start:s,end:i}=e;if(_(t)){const r=this.data,a=s*this.texelSize;for(let n=0;n<t.length;n++){const o=1<<n%this.texelSize;e.layout&o&&(r[a+n]=t[n])}}this.dirtyStart=Math.min(this.dirtyStart,s),this.dirtyEnd=Math.max(this.dirtyEnd,i)}resize(e,t){const s=this.size;if(this.size=t,this.textureOnly)return void(s!==this.size&&(this._lastTexture=this._texture,this._texture=null));const i=T(this.pixelType);this.destroy(),this.data=new i(l(e.buffer))}_resetRange(){this.dirtyStart=2147483647,this.dirtyEnd=0}_initTexture(e){const t=new te(e,this._textureDesc,O(this.data,void 0));if(_(this._lastTexture)&&this._fbos[0]){const s=this._lastTexture.descriptor.width,i=this._lastTexture.descriptor.height,r=this._lastTexture.descriptor.dataType,a=this._lastTexture.descriptor.pixelFormat,n=this.getFBO(e),o=be(r),d=new(T(r))(new ArrayBuffer(s*i*o*this.texelSize)),u=e.getBoundFramebufferObject(),{x:E,y:v,width:g,height:S}=e.getViewport();e.bindFramebuffer(n),n.readPixels(0,0,s,i,a,r,d),t.updateData(0,0,0,2*s,i/2,d),e.setViewport(E,v,g,S),e.bindFramebuffer(u)}return this.destroy(),this._texture=t,this._texture}}class De{constructor(e){this._onUpdate=e,this._initialized=!1,this._forceNextUpload=!1,this._locked=!1}initialize(e){const{blocks:t,shared:s,size:i}=e;if(this.shared=s,this.size=i,w("Initializing AttributeStoreView",e),c(this._data))this._data=L(t,r=>new Q(r,i,s));else for(let r=0;r<this._data.length;r++){const a=this._data[r],n=t[r];_(n)&&(c(a)?this._data[r]=new Q(n,i,s):a.resize(n,i))}this._initialized=!0}destroy(){f(this._data,e=>L(e,t=>t.destroy())),f(this._defaultTexture,e=>e.dispose())}isEmpty(){const e=this._data;return c(e)}isUpdating(){const e=_(this._pendingAttributeUpdate),t=e;return D("esri-2d-log-updating")&&console.log(`Updating AttributeStoreView ${t}
  -> hasPendingUpdate ${e}`),t}getBlock(e){return c(this._data)?null:this._data[e]}setLabelMinZoom(e,t){this.setData(e,0,1,t)}getLabelMinZoom(e){return this.getData(e,0,1,255)}getFilterFlags(e){return this.getData(e,0,0,0)}getVVSize(e){return this.getData(e,N,0,0)}getData(e,t,s,i){if(!this._data)return 0;const r=l(this._data)[t];if(c(r))return 0;const a=r.getData(e,s);return _(a)?a:i}setData(e,t,s,i){const r=l(this._data)[t];l(r).setData(e,s,i)}lockTextureUpload(){this._locked=!0}unlockTextureUpload(){this._locked=!1}forceTextureUpload(){this._forceNextUpload=!0}async requestUpdate(e){if(this._pendingAttributeUpdate)return void P.error(new j("mapview-webgl","Tried to update attribute data with a pending update"));const t=X();return w("AttributeStoreView Update Requested",e),this._pendingAttributeUpdate={data:e,resolver:t},this._onUpdate(),t.promise}update(){if(this._initialized&&_(this._pendingAttributeUpdate)){D("esri-2d-update-debug")&&console.debug("AttributeStoreView::update");const{data:e,resolver:t}=this._pendingAttributeUpdate,s=l(this._data);for(let i=0;i<e.blocks.length;i++){const r=e.blocks[i],a=s[i];f(a,n=>f(r,o=>{w(`Updating block ${i}`,o),n.update(o)}))}this._pendingAttributeUpdate=null,t(),this._onUpdate()}}bindTextures(e,t=!0){const s=this._getDefaultTexture(e);if(!this._initialized)return e.bindTexture(s,I),void(t&&(e.bindTexture(s,$),e.bindTexture(s,U),e.bindTexture(s,B),e.bindTexture(s,z),e.bindTexture(s,C),e.bindTexture(s,q)));const i=l(this._data);this._locked&&!this._forceNextUpload||(ue(i,r=>r.updateTexture(e,()=>this._onUpdate())),this._forceNextUpload=!1),e.bindTexture(x(i[Ee],s,r=>r.getTexture(e)),I),t&&(e.bindTexture(x(i[xe],s,r=>r.getTexture(e)),q),e.bindTexture(x(i[fe],s,r=>r.getTexture(e)),$),e.bindTexture(x(i[N],s,r=>r.getTexture(e)),U),e.bindTexture(x(i[Re],s,r=>r.getTexture(e)),B),e.bindTexture(x(i[z],s,r=>r.getTexture(e)),z),e.bindTexture(x(i[C],s,r=>r.getTexture(e)),C))}_getDefaultTexture(e){if(c(this._defaultTexture)){const t={wrapMode:Z.CLAMP_TO_EDGE,pixelFormat:J.RGBA,dataType:W.UNSIGNED_BYTE,samplingMode:ee.NEAREST,width:1,height:1};this._defaultTexture=new te(e,t,new Uint8Array(4))}return this._defaultTexture}}function M(p,e){const t=e.length;if(p<e[0].value||t===1)return e[0].size;for(let s=1;s<t;s++)if(p<e[s].value){const i=(p-e[s-1].value)/(e[s].value-e[s-1].value);return e[s-1].size+i*(e[s].size-e[s-1].size)}return e[t-1].size}class Oe{constructor(){this.symbolLevels=[],this.vvColorValues=new Float32Array(8),this.vvColors=new Float32Array(32),this.vvOpacityValues=new Float32Array(8),this.vvOpacities=new Float32Array(8),this.vvSizeMinMaxValue=new Float32Array(4),this._vvMaterialParameters={vvSizeEnabled:!1,vvColorEnabled:!1,vvRotationEnabled:!1,vvRotationType:"geographic",vvOpacityEnabled:!1},this._technique=Ce}getSizeVVFieldStops(e){const t=this._vvSizeFieldStops;switch(t.type){case"static":return t;case"level-dependent":return O(t.levels[e],()=>{let s=1/0,i=0;for(const o in t.levels){const d=parseFloat(o),u=Math.abs(e-d);u<s&&(s=u,i=d)}if(s===1/0)return{sizes:new Float32Array([0,0,0,0,0,0]),values:new Float32Array([0,0,0,0,0,0])};const r=2**((e-i)/2),a=l(t.levels[i]),n=new Float32Array(a.values);return n[2]*=r,n[3]*=r,{sizes:l(a.sizes),values:n}})}}get vvMaterialParameters(){return this._vvMaterialParameters}update(e){_(this._vvInfo)&&this._updateVisualVariables(this._vvInfo.vvRanges,e)}setInfo(e,t,s){this._updateEffects(s),this._vvInfo=t,this._technique=we(e),this.rendererSchema=this._technique.createOrUpdateRendererSchema(this.rendererSchema,e)}getVariation(){return{...this._technique.getVariation(this.rendererSchema),outsideLabelsVisible:this.outsideLabelsVisible,supportsTextureFloat:le("2d").supportsTextureFloat}}getVariationHash(){return this._technique.getVariationHash(this.rendererSchema)<<1|(this.outsideLabelsVisible?1:0)}_updateEffects(e){_(e)?this.outsideLabelsVisible=e.excludedLabelsVisible:this.outsideLabelsVisible=!1}_updateVisualVariables(e,t){const s=this._vvMaterialParameters;if(s.vvOpacityEnabled=!1,s.vvSizeEnabled=!1,s.vvColorEnabled=!1,s.vvRotationEnabled=!1,!e)return;const i=e.size;if(i){if(s.vvSizeEnabled=!0,i.minMaxValue){const o=i.minMaxValue;let d,u;if(K(o.minSize)&&K(o.maxSize))if(G(o.minSize)&&G(o.maxSize))d=m(o.minSize),u=m(o.maxSize);else{const E=t.scale;d=m(M(E,o.minSize.stops)),u=m(M(E,o.maxSize.stops))}this.vvSizeMinMaxValue.set([o.minDataValue,o.maxDataValue,d,u])}if(i.scaleStops&&(this.vvSizeScaleStopsValue=m(M(t.scale,i.scaleStops.stops))),i.unitValue){const o=ce(t.spatialReference)/_e[i.unitValue.unit];this.vvSizeUnitValueToPixelsRatio=o/t.resolution}i.fieldStops&&(this._vvSizeFieldStops=i.fieldStops)}const r=e.color;r&&(s.vvColorEnabled=!0,this.vvColorValues.set(r.values),this.vvColors.set(r.colors));const a=e.opacity;a&&(s.vvOpacityEnabled=!0,this.vvOpacityValues.set(a.values),this.vvOpacities.set(a.opacities));const n=e.rotation;n&&(s.vvRotationEnabled=!0,s.vvRotationType=n.type)}}class qe extends ve{constructor(e){super(e),this._rendererInfo=new Oe,this._materialItemsRequestQueue=new pe,this.attributeView=new De(()=>this.onAttributeStoreUpdate())}destroy(){this.children.forEach(e=>e.destroy()),this.removeAllChildren(),this.attributeView.destroy(),this._materialItemsRequestQueue.clear()}setRendererInfo(e,t,s){this._rendererInfo.setInfo(e,t,s),this.requestRender()}async getMaterialItems(e,t){if(!e||e.length===0)return null;const s=X();return this._materialItemsRequestQueue.push({items:e,abortOptions:t,resolver:s}),this.requestRender(),s.promise}doRender(e){if(e.context.capabilities.enable("textureFloat"),e.context.capabilities.enable("vao"),this._materialItemsRequestQueue.length>0){let t=this._materialItemsRequestQueue.pop();for(;t;)this._processMaterialItemRequest(e,t),t=this._materialItemsRequestQueue.pop()}super.doRender(e)}renderChildren(e){for(const t of this.children)t.commit(e);this._rendererInfo.update(e.state),super.renderChildren(e)}updateTransforms(e){if(this.children.some(t=>t.hasData))for(const t of this.children)t.setTransform(e)}createRenderParams(e){const t=super.createRenderParams(e);return t.rendererInfo=this._rendererInfo,t.attributeView=this.attributeView,t}onAttributeStoreUpdate(){}_processMaterialItemRequest(e,{items:t,abortOptions:s,resolver:i}){const{painter:r,pixelRatio:a}=e,n=t.map(o=>r.textureManager.rasterizeItem(o.symbol,a,o.glyphIds,s));Promise.all(n).then(o=>{if(!this.stage)return void i.reject();const d=o.map((u,E)=>({id:t[E].id,mosaicItem:u}));i.resolve(d)},i.reject)}}export{R as i,y as m,qe as o};
