import{aC as l,aE as n,at as p,au as y,M as m,eh as u}from"./vendor-8855e047.js";import d from"./FeatureLayerView2D-b52c909a.js";import"./utils-8ee526e4.js";import"./enums-4ca4641f.js";import"./MaterialKey-70f1285d.js";import"./Utils-d4b93383.js";import"./definitions-315e9606.js";import"./enums-64ab819c.js";import"./Texture-a453d16b.js";import"./VertexElementDescriptor-2925c6af.js";import"./LayerView-c0e4871a.js";import"./schemaUtils-0a330120.js";import"./visualVariablesUtils-50395d49.js";import"./createSymbolSchema-b76ad5ea.js";import"./ExpandedCIM-b3066f4d.js";import"./BidiEngine-836b7ef6.js";import"./Rect-ea14f53a.js";import"./GeometryUtils-eebff0a0.js";import"./floatRGBA-7e7ca4e5.js";import"./rendererUtils-5cf9121b.js";import"./util-7ba604f1.js";import"./floorFilterUtils-080a7cd2.js";import"./popupUtils-1cb728f8.js";import"./RefreshableLayerView-c4301415.js";function h(e,r){return!e.visible||e.minScale!==0&&r>e.minScale||e.maxScale!==0&&r<e.maxScale}let o=class extends d{initialize(){this.handles.add([p(()=>{var e;return(e=this.view)==null?void 0:e.viewpoint},()=>this._update(),y)])}_injectOverrides(e){let r=super._injectOverrides(e);const s=this.view.scale,i=this.layer.sublayers.filter(a=>h(a,s)).map(a=>a.subtypeCode);if(!i.length)return r;r=m(r)?r:new u().toJSON();const t=`NOT ${this.layer.subtypeField} IN (${i.join(",")})`;return r.where=r.where?`(${r.where}) AND (${t})`:t,r}_setLayersForFeature(e){const r=this.layer.fieldsIndex.get(this.layer.subtypeField),s=e.attributes[r.name],i=this.layer.sublayers.find(t=>t.subtypeCode===s);e.layer=i,e.sourceLayer=this.layer}_createSchemaConfig(){const e={subtypeField:this.layer.subtypeField,sublayers:Array.from(this.layer.sublayers).map(t=>({featureReduction:null,geometryType:this.layer.geometryType,labelingInfo:t.labelingInfo,labelsVisible:t.labelsVisible,renderer:t.renderer,subtypeCode:t.subtypeCode,orderBy:null}))},r=this.layer.sublayers.map(t=>t.subtypeCode).join(","),s=this.layer.sublayers.length?`${this.layer.subtypeField} IN (${r})`:"1=2";let i=this.layer.definitionExpression?this.layer.definitionExpression+" AND ":"";return i+=s,{...super._createSchemaConfig(),...e,definitionExpression:i}}};o=l([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],o);const G=o;export{G as default};
