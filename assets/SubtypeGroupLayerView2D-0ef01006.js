import{a8 as l,aa as p,aH as n,bA as y,a3 as m,fw as u}from"./vendor-445d19db.js";import d from"./FeatureLayerView2D-bf3b2cb7.js";import"./utils-6396d15b.js";import"./enums-4ca4641f.js";import"./MaterialKey-5504317a.js";import"./Utils-cdacad72.js";import"./enums-8bf08d0c.js";import"./enums-64ab819c.js";import"./Texture-a2352f23.js";import"./VertexElementDescriptor-2925c6af.js";import"./LayerView-2f4bfb36.js";import"./schemaUtils-c8c76855.js";import"./visualVariablesUtils-e0bd40c0.js";import"./createSymbolSchema-15243994.js";import"./ExpandedCIM-1bd63987.js";import"./BidiEngine-836b7ef6.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-ad21a9c2.js";import"./GeometryUtils-eebff0a0.js";import"./floatRGBA-02bd94bd.js";import"./rendererUtils-d69d5f00.js";import"./util-40ea0c97.js";import"./floorFilterUtils-080a7cd2.js";import"./popupUtils-feede9e6.js";import"./RefreshableLayerView-10331e5a.js";function h(e,r){return!e.visible||e.minScale!==0&&r>e.minScale||e.maxScale!==0&&r<e.maxScale}let o=class extends d{initialize(){this.handles.add([n(()=>{var e;return(e=this.view)==null?void 0:e.viewpoint},()=>this._update(),y)])}_injectOverrides(e){let r=super._injectOverrides(e);const s=this.view.scale,t=this.layer.sublayers.filter(a=>h(a,s)).map(a=>a.subtypeCode);if(!t.length)return r;r=m(r)?r:new u().toJSON();const i=`NOT ${this.layer.subtypeField} IN (${t.join(",")})`;return r.where=r.where?`(${r.where}) AND (${i})`:i,r}_setLayersForFeature(e){const r=this.layer.fieldsIndex.get(this.layer.subtypeField),s=e.attributes[r.name],t=this.layer.sublayers.find(i=>i.subtypeCode===s);e.layer=t,e.sourceLayer=this.layer}_createSchemaConfig(){const e={subtypeField:this.layer.subtypeField,sublayers:Array.from(this.layer.sublayers).map(i=>({featureReduction:null,geometryType:this.layer.geometryType,labelingInfo:i.labelingInfo,labelsVisible:i.labelsVisible,renderer:i.renderer,subtypeCode:i.subtypeCode,orderBy:null}))},r=this.layer.sublayers.map(i=>i.subtypeCode).join(","),s=this.layer.sublayers.length?`${this.layer.subtypeField} IN (${r})`:"1=2";let t=this.layer.definitionExpression?this.layer.definitionExpression+" AND ":"";return t+=s,{...super._createSchemaConfig(),...e,definitionExpression:t}}};o=l([p("esri.views.2d.layers.SubtypeGroupLayerView2D")],o);const H=o;export{H as default};
