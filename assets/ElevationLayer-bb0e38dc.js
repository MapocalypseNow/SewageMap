import{_ as y}from"./preload-helper-6c8d3039.js";import{c as f,e as s,y as a,n as g}from"./cast-4943406f.js";import{U as v,g as w}from"./request-9ab300ca.js";import{s as $,a as T}from"./Error-8814705f.js";import{C as b,r as m,e as S,O as L}from"./typedArrayUtil-bd69bba0.js";import{O as I}from"./MultiOriginJSONSupport-1415ac8d.js";import{f as c,w as k}from"./promiseUtils-ec14a623.js";import"./ensureType-9613b5f0.js";import{o as D}from"./Extent-d21a2637.js";import{v as E}from"./HeightModelInfo-224c60b3.js";import{b as O}from"./Layer-df88343f.js";import{s as x}from"./ArcGISCachedService-3f24e412.js";import{p as V}from"./ArcGISService-ae190e7c.js";import{c as j,f as P}from"./OperationalLayer-620e6022.js";import{v as A}from"./PortalLayer-92819795.js";import{u as M}from"./workers-a88acec1.js";import"./string-cc430a78.js";import"./nextTick-3ee5a785.js";import"./jsonMap-9318d50f.js";import"./unitUtils-bc71b997.js";import"./geometry-da69b92c.js";import"./Polyline-98ddf509.js";import"./typeUtils-98cd71e2.js";import"./Evented-28d49a6f.js";import"./Identifiable-28626f77.js";import"./Loadable-8b974e55.js";import"./Promise-9613afa4.js";import"./TilemapCache-95e17fc8.js";import"./TileInfo-d1c5acd2.js";import"./aaBoundingRect-647e206b.js";import"./mathUtils-daf59e84.js";import"./common-701a4199.js";import"./byteSizeEstimations-90c5a50d.js";import"./HandleOwner-46fb81da.js";import"./reactiveUtils-3389689f.js";import"./LRUCache-4d2d0a4a.js";import"./MemCache-786f3df9.js";import"./arcgisLayerUrl-32f60088.js";import"./persistableUrlUtils-d6987fba.js";import"./TimeExtent-fd94e986.js";import"./ElevationInfo-2dc5cc64.js";import"./fieldUtils-605e1353.js";import"./arcadeOnDemand-5200ab6b.js";import"./lengthUtils-b711b4b2.js";import"./opacityUtils-dc8d0a85.js";import"./asyncUtils-b47bdec8.js";import"./Portal-c85307b1.js";import"./locale-30120714.js";import"./PortalGroup-e30a1480.js";import"./PortalUser-6c405f61.js";import"./PortalItem-0e5c0cbb.js";import"./assets-2905a8db.js";import"./Connection-2ff63c33.js";import"./Queue-f6edac75.js";import"./intl-e6f005e0.js";import"./number-d7fe9942.js";import"./messages-d8933302.js";class U{constructor(e,t,r,l,p={}){this._mainMethod=t,this._transferLists=r,this._listeners=[],this._promise=M(e,{...p,schedule:l}).then(h=>{if(this._thread===void 0){this._thread=h,this._promise=null,p.hasInitialize&&this.broadcast({},"initialize");for(const n of this._listeners)this._connectListener(n)}else h.close()}),this._promise.catch(h=>$.getLogger("esri.core.workers.WorkerHandle").error(`Failed to initialize ${e} worker: ${h}`))}on(e,t){const r={removed:!1,eventName:e,callback:t,threadHandle:null};return this._listeners.push(r),this._connectListener(r),f(()=>{r.removed=!0,b(this._listeners,r),this._thread&&m(r.threadHandle)&&r.threadHandle.remove()})}destroy(){this._thread&&(this._thread.close(),this._thread=null),this._promise=null}invoke(e,t){return this.invokeMethod(this._mainMethod,e,t)}invokeMethod(e,t,r){if(this._thread){const l=this._transferLists[e],p=l?l(t):[];return this._thread.invoke(e,t,{transferList:p,signal:r})}return this._promise?this._promise.then(()=>(c(r),this.invokeMethod(e,t,r))):Promise.reject(null)}broadcast(e,t){return this._thread?Promise.all(this._thread.broadcast(t,e)).then(()=>{}):this._promise?this._promise.then(()=>this.broadcast(e,t)):Promise.reject()}get promise(){return this._promise}_connectListener(e){this._thread&&this._thread.on(e.eventName,e.callback).then(t=>{e.removed||(e.threadHandle=t)})}}class _ extends U{constructor(e=null){super("LercWorker","_decode",{_decode:t=>[t.buffer]},e,{strategy:"dedicated"}),this.schedule=e,this.ref=0}decode(e,t,r){return e&&e.byteLength!==0?this.invoke({buffer:e,options:t},r):Promise.resolve(null)}release(){--this.ref<=0&&(d.forEach((e,t)=>{e===this&&d.delete(t)}),this.destroy())}}const d=new Map;function C(i=null){let e=d.get(S(i));return e||(m(i)?(e=new _(t=>i.schedule(t)),d.set(i,e)):(e=new _,d.set(null,e))),++e.ref,e}let o=class extends x(V(j(A(I(O))))){constructor(...i){super(...i),this.copyright=null,this.heightModelInfo=null,this.path=null,this.minScale=void 0,this.maxScale=void 0,this.opacity=1,this.operationalLayerType="ArcGISTiledElevationServiceLayer",this.sourceJSON=null,this.type="elevation",this.url=null,this.version=null,this._lercDecoder=C()}normalizeCtorArgs(i,e){return typeof i=="string"?{url:i,...e}:i}destroy(){this._lercDecoder=L(this._lercDecoder)}readVersion(i,e){let t=e.currentVersion;return t||(t=9.3),t}load(i){const e=m(i)?i.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:t=>{for(let r=0;r<t.typeKeywords.length;r++)if(t.typeKeywords[r].toLowerCase()==="elevation 3d layer")return!0;throw new T("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"})}},i).catch(k).then(()=>this._fetchImageService(e))),Promise.resolve(this)}fetchTile(i,e,t,r){const l=m((r=r||{signal:null}).signal)?r.signal:r.signal=new AbortController().signal,p={responseType:"array-buffer",signal:l},h={noDataValue:r.noDataValue,returnFileInfo:!0};return this.load().then(()=>this._fetchTileAvailability(i,e,t,r)).then(()=>v(this.getTileUrl(i,e,t),p)).then(n=>this._lercDecoder.decode(n.data,h,l)).then(n=>{var u;return{values:n.pixelData,width:n.width,height:n.height,maxZError:(u=n.fileInfo)==null?void 0:u.maxZError,noDataValue:n.noDataValue,minValue:n.minValue,maxValue:n.maxValue}})}getTileUrl(i,e,t){const r=!this.tilemapCache&&this.supportsBlankTile,l=w({...this.parsedUrl.query,blankTile:!r&&null});return`${this.parsedUrl.path}/tile/${i}/${e}/${t}${l?"?"+l:""}`}async queryElevation(i,e){const{ElevationQuery:t}=await y(()=>import("./ElevationQuery-b79513d8.js"),["assets/ElevationQuery-b79513d8.js","assets/asyncUtils-b47bdec8.js","assets/cast-4943406f.js","assets/typedArrayUtil-bd69bba0.js","assets/string-cc430a78.js","assets/Error-8814705f.js","assets/ensureType-9613b5f0.js","assets/nextTick-3ee5a785.js","assets/promiseUtils-ec14a623.js","assets/unitUtils-bc71b997.js","assets/jsonMap-9318d50f.js","assets/Extent-d21a2637.js","assets/Polyline-98ddf509.js","assets/projection-462aeb9f.js","assets/preload-helper-6c8d3039.js","assets/mathUtils-daf59e84.js","assets/common-701a4199.js","assets/SimpleObservable-b403cd38.js","assets/mat4-62d5e6a4.js","assets/assets-2905a8db.js","assets/request-9ab300ca.js","assets/zscale-3fafe111.js","assets/aaBoundingRect-647e206b.js","assets/geometry-da69b92c.js","assets/typeUtils-98cd71e2.js","assets/TileInfo-d1c5acd2.js"]);return c(e),new t().query(this,i,e)}async createElevationSampler(i,e){const{ElevationQuery:t}=await y(()=>import("./ElevationQuery-b79513d8.js"),["assets/ElevationQuery-b79513d8.js","assets/asyncUtils-b47bdec8.js","assets/cast-4943406f.js","assets/typedArrayUtil-bd69bba0.js","assets/string-cc430a78.js","assets/Error-8814705f.js","assets/ensureType-9613b5f0.js","assets/nextTick-3ee5a785.js","assets/promiseUtils-ec14a623.js","assets/unitUtils-bc71b997.js","assets/jsonMap-9318d50f.js","assets/Extent-d21a2637.js","assets/Polyline-98ddf509.js","assets/projection-462aeb9f.js","assets/preload-helper-6c8d3039.js","assets/mathUtils-daf59e84.js","assets/common-701a4199.js","assets/SimpleObservable-b403cd38.js","assets/mat4-62d5e6a4.js","assets/assets-2905a8db.js","assets/request-9ab300ca.js","assets/zscale-3fafe111.js","assets/aaBoundingRect-647e206b.js","assets/geometry-da69b92c.js","assets/typeUtils-98cd71e2.js","assets/TileInfo-d1c5acd2.js"]);return c(e),new t().createSampler(this,i,e)}_fetchTileAvailability(i,e,t,r){return this.tilemapCache?this.tilemapCache.fetchAvailability(i,e,t,r):Promise.resolve("unknown")}async _fetchImageService(i){var r;if(this.sourceJSON)return this.sourceJSON;const e={query:{f:"json",...this.parsedUrl.query},responseType:"json",signal:i},t=await v(this.parsedUrl.path,e);t.ssl&&(this.url=(r=this.url)==null?void 0:r.replace(/^http:/i,"https:")),this.sourceJSON=t.data,this.read(t.data,{origin:"service",url:this.parsedUrl})}get hasOverriddenFetchTile(){return!this.fetchTile.__isDefault__}};s([a({json:{read:{source:"copyrightText"}}})],o.prototype,"copyright",void 0),s([a({readOnly:!0,type:E})],o.prototype,"heightModelInfo",void 0),s([a({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],o.prototype,"path",void 0),s([a({type:["show","hide"]})],o.prototype,"listMode",void 0),s([a({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],o.prototype,"minScale",void 0),s([a({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],o.prototype,"maxScale",void 0),s([a({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],o.prototype,"opacity",void 0),s([a({type:["ArcGISTiledElevationServiceLayer"]})],o.prototype,"operationalLayerType",void 0),s([a()],o.prototype,"sourceJSON",void 0),s([a({json:{read:!1},value:"elevation",readOnly:!0})],o.prototype,"type",void 0),s([a(P)],o.prototype,"url",void 0),s([a()],o.prototype,"version",void 0),s([D("version",["currentVersion"])],o.prototype,"readVersion",null),o=s([g("esri.layers.ElevationLayer")],o),o.prototype.fetchTile.__isDefault__=!0;const Je=o;export{Je as default};
