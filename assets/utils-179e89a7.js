import{r as T,t as w}from"./typedArrayUtil-bd69bba0.js";import{s as P,f as E,y as q,l as G,u as U}from"./jsonUtils-7333a4d1.js";import{l as B,a as L}from"./generateRendererUtils-717e0562.js";const x=(n,t,e)=>[t,e],p=(n,t,e)=>[t,e,n[2]],v=(n,t,e)=>[t,e,n[2],n[3]];function yn(n){return n?{originPosition:n.originPosition==="upper-left"?"upperLeft":n.originPosition==="lower-left"?"lowerLeft":n.originPosition,scale:n.tolerance?[n.tolerance,n.tolerance]:[1,1],translate:T(n.extent)?[n.extent.xmin,n.extent.ymax]:[0,0]}:null}function b({scale:n,translate:t},e){return Math.round((e-t[0])/n[0])}function V({scale:n,translate:t},e){return Math.round((t[1]-e)/n[1])}function z(n,t,e){const i=[];let l,a,o,r;for(let u=0;u<e.length;u++){const s=e[u];u>0?(o=b(n,s[0]),r=V(n,s[1]),o===l&&r===a||(i.push(t(s,o-l,r-a)),l=o,a=r)):(l=b(n,s[0]),a=V(n,s[1]),i.push(t(s,l,a)))}return i.length>0?i:null}function A(n,t,e,i){return z(n,e?i?v:p:i?p:x,t)}function O(n,t,e,i){const l=[],a=e?i?v:p:i?p:x;for(let o=0;o<t.length;o++){const r=z(n,a,t[o]);r&&r.length>=3&&l.push(r)}return l.length?l:null}function Y(n,t,e,i){const l=[],a=e?i?v:p:i?p:x;for(let o=0;o<t.length;o++){const r=z(n,a,t[o]);r&&r.length>=2&&l.push(r)}return l.length?l:null}function N({scale:n,translate:t},e){return e*n[0]+t[0]}function S({scale:n,translate:t},e){return t[1]-e*n[1]}function M(n,t,e){const i=new Array(e.length);if(!e.length)return i;const[l,a]=n.scale;let o=N(n,e[0][0]),r=S(n,e[0][1]);i[0]=t(e[0],o,r);for(let u=1;u<e.length;u++){const s=e[u];o+=s[0]*l,r-=s[1]*a,i[u]=t(s,o,r)}return i}function C(n,t,e){const i=new Array(e.length);for(let l=0;l<e.length;l++)i[l]=M(n,t,e[l]);return i}function _(n,t,e,i){return M(n,e?i?v:p:i?p:x,t)}function Q(n,t,e,i){return C(n,e?i?v:p:i?p:x,t)}function j(n,t,e,i){return C(n,e?i?v:p:i?p:x,t)}function H(n,t,e,i,l){return t.xmin=b(n,e.xmin),t.ymin=V(n,e.ymin),t.xmax=b(n,e.xmax),t.ymax=V(n,e.ymax),t!==e&&(i&&(t.zmin=e.zmin,t.zmax=e.zmax),l&&(t.mmin=e.mmin,t.mmax=e.mmax)),t}function J(n,t,e,i,l){return t.points=A(n,e.points,i,l)??[],t}function K(n,t,e,i,l){return t.x=b(n,e.x),t.y=V(n,e.y),t!==e&&(i&&(t.z=e.z),l&&(t.m=e.m)),t}function R(n,t,e,i,l){const a=O(n,e.rings,i,l);return a?(t.rings=a,t):null}function W(n,t,e,i,l){const a=Y(n,e.paths,i,l);return a?(t.paths=a,t):null}function bn(n,t){return n&&t?P(t)?K(n,{},t,!1,!1):E(t)?W(n,{},t,!1,!1):q(t)?R(n,{},t,!1,!1):G(t)?J(n,{},t,!1,!1):U(t)?H(n,{},t,!1,!1):null:null}function Vn(n,t,e,i,l){return T(e)&&(t.points=_(n,e.points,i,l)),t}function Tn(n,t,e,i,l){return w(e)||(t.x=N(n,e.x),t.y=S(n,e.y),t!==e&&(i&&(t.z=e.z),l&&(t.m=e.m))),t}function $n(n,t,e,i,l){return T(e)&&(t.rings=j(n,e.rings,i,l)),t}function zn(n,t,e,i,l){return T(e)&&(t.paths=Q(n,e.paths,i,l)),t}const X="<Null>",Z="equal-interval",nn=1,tn=5,en=10,ln=/\s*(\+|-)?((\d+(\.\d+)?)|(\.\d+))\s*/gi,F=new Set(["esriFieldTypeInteger","esriFieldTypeSmallInteger","esriFieldTypeSingle","esriFieldTypeDouble"]),an=["min","max","avg","stddev","count","sum","variance","nullcount","median"];function y(n){return n==null||typeof n=="string"&&!n?X:n}function on(n){const t=n.normalizationField!=null||n.normalizationType!=null,e=n.minValue!=null||n.maxValue!=null,i=!!n.sqlExpression&&n.supportsSQLExpression;return!t&&!e&&!i}function Fn(n){const t=n.returnDistinct?[...new Set(n.values)]:n.values,e=t.filter(l=>l!=null).length,i={count:e};return n.supportsNullCount&&(i.nullcount=t.length-e),n.percentileParams&&(i.median=k(t,n.percentileParams)),i}function rn(n){const{values:t,useSampleStdDev:e,supportsNullCount:i}=n;let l=Number.POSITIVE_INFINITY,a=Number.NEGATIVE_INFINITY,o=null,r=null,u=null,s=null,c=0;const m=n.minValue==null?-1/0:n.minValue,d=n.maxValue==null?1/0:n.maxValue;for(const f of t)Number.isFinite(f)?f>=m&&f<=d&&(o+=f,l=Math.min(l,f),a=Math.max(a,f),c++):typeof f=="string"&&c++;if(c&&o!=null){r=o/c;let f=0;for(const g of t)Number.isFinite(g)&&g>=m&&g<=d&&(f+=(g-r)**2);s=e?c>1?f/(c-1):0:c>0?f/c:0,u=Math.sqrt(s)}else l=null,a=null;const h={avg:r,count:c,max:a,min:l,stddev:u,sum:o,variance:s};return i&&(h.nullcount=t.length-c),n.percentileParams&&(h.median=k(t,n.percentileParams)),h}function k(n,t){const{fieldType:e,value:i,orderBy:l,isDiscrete:a}=t,o=un(e,l==="desc");if((n=[...n].filter(h=>h!=null).sort((h,f)=>o(h,f))).length===0)return null;if(i<=0)return n[0];if(i>=1)return n[n.length-1];const r=(n.length-1)*i,u=Math.floor(r),s=u+1,c=r%1,m=n[u],d=n[s];return s>=n.length||a||typeof m=="string"||typeof d=="string"?m:m*(1-c)+d*c}function un(n,t){const e=t?1:-1,i=sn(t),l=D(t);if(!(n&&["esriFieldTypeDate","esriFieldTypeString","esriFieldTypeGUID","esriFieldTypeGlobalID",...F].includes(n)))return(a,o)=>typeof a=="number"&&typeof o=="number"?i(a,o):typeof a=="string"&&typeof o=="string"?l(a,o):e;if(n==="esriFieldTypeDate")return(a,o)=>{const r=new Date(a).getTime(),u=new Date(o).getTime();return isNaN(r)||isNaN(u)?e:i(r,u)};if(F.has(n))return(a,o)=>i(a,o);if(n==="esriFieldTypeString")return(a,o)=>l(a,o);if(n==="esriFieldTypeGUID"||n==="esriFieldTypeGlobalID"){const a=D(t);return(o,r)=>a(I(o),I(r))}return t?(a,o)=>1:(a,o)=>-1}function D(n){return n?(t,e)=>(t=t==null?void 0:t.toUpperCase(),e=e==null?void 0:e.toUpperCase(),t>e?-1:t<e?1:0):(t,e)=>(t=t==null?void 0:t.toUpperCase(),e=e==null?void 0:e.toUpperCase(),t<e?-1:t>e?1:0)}function sn(n){return n?(t,e)=>e-t:(t,e)=>t-e}function I(n){return n.substr(24,12)+n.substr(19,4)+n.substr(16,2)+n.substr(14,2)+n.substr(11,2)+n.substr(9,2)+n.substr(6,2)+n.substr(4,2)+n.substr(2,2)+n.substr(0,2)}function Dn(n,t){let e;for(e in n)an.includes(e)&&(Number.isFinite(n[e])||(n[e]=null));return t&&["avg","stddev","variance"].forEach(i=>{n[i]!=null&&(n[i]=Math.ceil(n[i]))}),n}function In(n){const t={};for(let e of n)(e==null||typeof e=="string"&&e.trim()==="")&&(e=null),t[e]==null?t[e]={count:1,data:e}:t[e].count++;return{count:t}}function $(n){return(n==null?void 0:n.type)!=="coded-value"?[]:n.codedValues.map(t=>t.code)}function Nn(n,t,e,i){const l=n.count,a=[];if(e&&t){const o=[],r=$(t[0]);for(const u of r)if(t[1]){const s=$(t[1]);for(const c of s)if(t[2]){const m=$(t[2]);for(const d of m)o.push(`${y(u)}${i}${y(c)}${i}${y(d)}`)}else o.push(`${y(u)}${i}${y(c)}`)}else o.push(u);for(const u of o)l.hasOwnProperty(u)||(l[u]={data:u,count:0})}for(const o in l){const r=l[o];a.push({value:r.data,count:r.count,label:r.label})}return{uniqueValueInfos:a}}function Sn(n,t,e,i){let l=null;switch(t){case"log":n!==0&&(l=Math.log(n)*Math.LOG10E);break;case"percent-of-total":Number.isFinite(i)&&i!==0&&(l=n/i*100);break;case"field":Number.isFinite(e)&&e!==0&&(l=n/e);break;case"natural-log":n>0&&(l=Math.log(n));break;case"square-root":n>0&&(l=n**.5)}return l}function cn(n,t){const e=fn({field:t.field,normalizationType:t.normalizationType,normalizationField:t.normalizationField,classificationMethod:t.classificationMethod,standardDeviationInterval:t.standardDeviationInterval,breakCount:t.numClasses||tn});return n=mn(n,t.minValue,t.maxValue),L({definition:e,values:n,normalizationTotal:t.normalizationTotal})}function mn(n,t,e){return t=t??-1/0,e=e??1/0,n.filter(i=>Number.isFinite(i)&&i>=t&&i<=e)}function fn(n){const t=n.field,e=n.classificationMethod||Z,i=n.normalizationType,l=n.normalizationField,a=new B;return a.classificationField=t,a.breakCount=n.breakCount,a.classificationMethod=e,a.standardDeviationInterval=e==="standard-deviation"?n.standardDeviationInterval||nn:void 0,a.normalizationType=i,a.normalizationField=i==="field"?l:void 0,a}function Mn(n,t){let e=n.classBreaks;const i=e.length,l=e[0].minValue,a=e[i-1].maxValue,o=t==="standard-deviation",r=ln;return e=e.map(u=>{const s=u.label,c={minValue:u.minValue,maxValue:u.maxValue,label:s};if(o&&s){const m=s.match(r).map(d=>+d.trim());m.length===2?(c.minStdDev=m[0],c.maxStdDev=m[1],m[0]<0&&m[1]>0&&(c.hasAvg=!0)):m.length===1&&(s.includes("<")?(c.minStdDev=null,c.maxStdDev=m[0]):s.includes(">")&&(c.minStdDev=m[0],c.maxStdDev=null))}return c}),{minValue:l,maxValue:a,classBreakInfos:e,normalizationTotal:n.normalizationTotal}}function Cn(n,t){const{min:e,max:i,intervals:l}=dn(n,t),a=l.map((o,r)=>({minValue:l[r][0],maxValue:l[r][1],count:0}));for(const o of n)if(o!=null&&o>=e&&o<=i){const r=pn(l,o);r>-1&&a[r].count++}return{bins:a,minValue:e,maxValue:i,normalizationTotal:t.normalizationTotal}}function dn(n,t){const{field:e,classificationMethod:i,standardDeviationInterval:l,normalizationType:a,normalizationField:o,normalizationTotal:r,minValue:u,maxValue:s}=t,c=t.numBins||en;let m=null,d=null,h=null;if((!i||i==="equal-interval")&&!a){if(u!=null&&s!=null)m=u,d=s;else{const f=rn({values:n,minValue:u,maxValue:s,useSampleStdDev:!a,supportsNullCount:on({normalizationType:a,normalizationField:o,minValue:u,maxValue:s})});m=f.min,d=f.max}h=hn(m,d,c)}else{const{classBreaks:f}=cn(n,{field:e,normalizationType:a,normalizationField:o,normalizationTotal:r,classificationMethod:i,standardDeviationInterval:l,minValue:u,maxValue:s,numClasses:c});m=f[0].minValue,d=f[f.length-1].maxValue,h=f.map(g=>[g.minValue,g.maxValue])}return{min:m,max:d,intervals:h}}function pn(n,t){let e=-1;for(let i=n.length-1;i>=0;i--)if(t>=n[i][0]){e=i;break}return e}function hn(n,t,e){const i=(t-n)/e,l=[];let a,o=n;for(let r=1;r<=e;r++)a=o+i,a=Number(a.toFixed(16)),l.push([o,r===e?t:a]),o=a;return l}export{$n as B,zn as C,cn as D,Nn as F,fn as I,Mn as N,K as O,Cn as S,In as T,bn as U,Dn as V,an as a,un as b,y as c,rn as d,Fn as f,hn as k,on as m,k as p,Vn as q,yn as s,Tn as v,Sn as x};
