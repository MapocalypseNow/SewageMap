import{M as o,eb as f,o as w,at as p,au as n,b as y,Q as _,aC as V,aE as v}from"./vendor-8855e047.js";import{i as C}from"./utils-8ee526e4.js";import{r as b}from"./GroupContainer-2a056274.js";import{y as H,u as M}from"./LayerView-c0e4871a.js";import{i as g}from"./GraphicContainer-c724de0f.js";import{o as m}from"./BaseGraphicContainer-3fd28768.js";import"./enums-4ca4641f.js";import"./MaterialKey-70f1285d.js";import"./Utils-d4b93383.js";import"./definitions-315e9606.js";import"./enums-64ab819c.js";import"./Texture-a453d16b.js";import"./VertexElementDescriptor-2925c6af.js";import"./WGLContainer-ebc02f47.js";import"./pixelUtils-3855591f.js";import"./VertexArrayObject-e5efdca7.js";import"./ProgramTemplate-6b3e4a32.js";import"./StyleDefinition-beb706e3.js";import"./config-1337d16e.js";import"./GeometryUtils-c093d234.js";import"./earcut-58237617.js";import"./ExpandedCIM-b3066f4d.js";import"./BidiEngine-836b7ef6.js";import"./Rect-ea14f53a.js";import"./GeometryUtils-eebff0a0.js";import"./floatRGBA-7e7ca4e5.js";import"./normalizeUtilsSync-49ecedfc.js";import"./projectionSupport-e3191e9a.js";import"./json-48e3ea08.js";import"./FeatureContainer-8b2a11d8.js";import"./TileContainer-c8699d4e.js";import"./visualVariablesUtils-0be3d85f.js";import"./visualVariablesUtils-50395d49.js";import"./Matcher-692375ad.js";import"./tileUtils-34824a75.js";import"./TileClipper-04d2fc45.js";import"./Geometry-daada628.js";import"./devEnvironmentUtils-5002a058.js";import"./schemaUtils-0a330120.js";import"./createSymbolSchema-b76ad5ea.js";import"./rendererUtils-5cf9121b.js";import"./util-7ba604f1.js";import"./ComputedAttributeStorage-82bce8bc.js";import"./FeatureSetReader-1e4ad503.js";import"./centroid-19b48edf.js";import"./vec3f32-4322908d.js";const d="sublayers",l="layerView",T=Object.freeze({remove(){},pause(){},resume(){}});let c=class extends H(M){constructor(){super(...arguments),this._highlightIds=new Map,this.container=new b}async fetchPopupFeatures(i){return Array.from(this.graphicsViews(),t=>t.hitTest(i).filter(e=>!!e.popupTemplate)).flat()}*graphicsViews(){o(this._graphicsViewsFeatureCollectionMap)?yield*this._graphicsViewsFeatureCollectionMap.keys():o(this._graphicsViews)?yield*this._graphicsViews:yield*[]}async hitTest(i,t){return Array.from(this.graphicsViews(),e=>{const r=e.hitTest(i);if(o(this._graphicsViewsFeatureCollectionMap)){const a=this._graphicsViewsFeatureCollectionMap.get(e);for(const s of r)!s.popupTemplate&&a.popupTemplate&&(s.popupTemplate=a.popupTemplate),s.sourceLayer=s.layer=this.layer}return r}).flat().map(e=>({type:"graphic",graphic:e,layer:this.layer,mapPoint:i}))}highlight(i){let t;return typeof i=="number"?t=[i]:i instanceof f?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(e=>e&&e.uid):w.isCollection(i)&&(t=i.map(e=>e&&e.uid).toArray()),t=t.filter(e=>e!=null),t.length?(this._addHighlight(t),{remove:()=>{this._removeHighlight(t)}}):T}update(i){for(const t of this.graphicsViews())t.processUpdate(i)}attach(){const i=this.view,t=()=>this.requestUpdate(),e=this.layer.featureCollections;if(o(e)&&e.length){this._graphicsViewsFeatureCollectionMap=new Map;for(const r of e){const a=new g(this.view.featuresTilingScheme),s=new m({view:i,graphics:r.source,renderer:r.renderer,requestUpdateCallback:t,container:a});this._graphicsViewsFeatureCollectionMap.set(s,r),this.container.addChild(s.container),this.handles.add([p(()=>r.visible,h=>s.container.visible=h,n),p(()=>s.updating,()=>this.notifyChange("updating"),n)],l)}this._updateHighlight()}else o(this.layer.sublayers)&&this.handles.add(y(()=>this.layer.sublayers,"change",()=>this._createGraphicsViews(),{onListenerAdd:()=>this._createGraphicsViews(),onListenerRemove:()=>this._destroyGraphicsViews()}),d)}detach(){this._destroyGraphicsViews(),this.handles.remove(d)}moveStart(){}moveEnd(){}viewChange(){for(const i of this.graphicsViews())i.viewChange()}isUpdating(){for(const i of this.graphicsViews())if(i.updating)return!0;return!1}_destroyGraphicsViews(){this.container.removeAllChildren(),this.handles.remove(l);for(const i of this.graphicsViews())i.destroy();this._graphicsViews=null,this._graphicsViewsFeatureCollectionMap=null}_createGraphicsViews(){if(this._destroyGraphicsViews(),_(this.layer.sublayers))return;const i=[],t=this.view,e=()=>this.requestUpdate();for(const r of this.layer.sublayers){const a=new C,s=new g(this.view.featuresTilingScheme);s.fadeTransitionEnabled=!0;const h=new m({view:t,graphics:r.graphics,requestUpdateCallback:e,container:s});this.handles.add([r.on("graphic-update",h.graphicUpdateHandler),p(()=>r.visible,u=>h.container.visible=u,n),p(()=>h.updating,()=>this.notifyChange("updating"),n)],l),a.addChild(h.container),this.container.addChild(a),i.push(h)}this._graphicsViews=i,this._updateHighlight()}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t);this._highlightIds.set(t,e+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t)-1;e===0?this._highlightIds.delete(t):this._highlightIds.set(t,e)}this._updateHighlight()}_updateHighlight(){const i=Array.from(this._highlightIds.keys());for(const t of this.graphicsViews())t.setHighlight(i)}};c=V([v("esri.views.2d.layers.MapNotesLayerView2D")],c);const _i=c;export{_i as default};
