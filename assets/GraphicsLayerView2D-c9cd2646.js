import{a7 as s,aq as p,D as h,E as a,F as o}from"./vendor-128d427e.js";import{y as g,u as m}from"./LayerView-3a687707.js";import{i as l}from"./GraphicContainer-a741a6e7.js";import{o as c}from"./BaseGraphicContainer-fb9028f1.js";import"./utils-36a4772c.js";import"./enums-4ca4641f.js";import"./MaterialKey-6cf4dcf9.js";import"./Utils-38ea1caf.js";import"./enums-8bf08d0c.js";import"./enums-64ab819c.js";import"./Texture-c00f40b4.js";import"./VertexElementDescriptor-2925c6af.js";import"./ExpandedCIM-5662eeb4.js";import"./BidiEngine-836b7ef6.js";import"./Rect-ea14f53a.js";import"./GeometryUtils-eebff0a0.js";import"./floatRGBA-0febf696.js";import"./normalizeUtilsSync-90a3c456.js";import"./projectionSupport-3d7d1b44.js";import"./json-48e3ea08.js";import"./VertexArrayObject-106f4bc4.js";import"./FeatureContainer-a24d65b3.js";import"./TileContainer-2381ef9a.js";import"./WGLContainer-dae6236a.js";import"./pixelUtils-f34c729f.js";import"./ProgramTemplate-f0a0673c.js";import"./StyleDefinition-3c6a4c69.js";import"./config-1337d16e.js";import"./GeometryUtils-c093d234.js";import"./earcut-58237617.js";import"./visualVariablesUtils-7ec6c5fe.js";import"./visualVariablesUtils-088bebaa.js";import"./Matcher-68a89842.js";import"./tileUtils-47ab3c06.js";import"./TileClipper-d910b474.js";import"./Geometry-daada628.js";import"./devEnvironmentUtils-5002a058.js";import"./schemaUtils-925625ef.js";import"./createSymbolSchema-a1cfc110.js";import"./rendererUtils-632eef8b.js";import"./util-2a9066df.js";import"./ComputedAttributeStorage-c623fcaf.js";import"./FeatureSetReader-1c7fb1fe.js";import"./centroid-629b7ee9.js";import"./vec3f32-4322908d.js";const n={remove(){},pause(){},resume(){}};let r=class extends g(m){constructor(){super(...arguments),this._highlightIds=new Map}attach(){this.graphicsView=new c({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new l(this.view.featuresTilingScheme)}),this._updateHighlight(),this.container.addChild(this.graphicsView.container),this.handles.add(this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),"graphicslayerview2d")}detach(){this.container.removeAllChildren(),this.graphicsView.destroy(),this.graphicsView=null,this.handles.remove("graphicslayerview2d")}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}async fetchPopupFeatures(i){if(this.graphicsView)return this.graphicsView.hitTest(i).filter(t=>!!t.popupTemplate)}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}moveStart(){}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i){let t;return typeof i=="number"?t=[i]:i instanceof s?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(e=>e&&e.uid):p.isCollection(i)&&i.length>0&&(t=i.map(e=>e&&e.uid).toArray()),t=t==null?void 0:t.filter(e=>e!=null),t.length?(this._addHighlight(t),{remove:()=>this._removeHighlight(t)}):n}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t);this._highlightIds.set(t,e+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t)-1;e===0?this._highlightIds.delete(t):this._highlightIds.set(t,e)}this._updateHighlight()}_updateHighlight(){var i;(i=this.graphicsView)==null||i.setHighlight(Array.from(this._highlightIds.keys()))}};h([a()],r.prototype,"graphicsView",void 0),r=h([o("esri.views.2d.layers.GraphicsLayerView2D")],r);const si=r;export{si as default};
