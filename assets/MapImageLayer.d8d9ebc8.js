import{jD as w,ko as I,jE as T,g2 as $,g3 as O,g4 as E,g5 as j,jL as R,jX as M,kp as L,ba as k,r as N,bT as P,kI as v,f1 as g,eO as F,U as f,w as J,v as U,jJ as q,kq as A,A as b,ax as _,f as i,g as p,kT as x,eR as V,eS as z,g8 as D,G,em as B,jN as C}from"./vendor.f8a4aecc.js";import{E as H,y as K,Z as W}from"./SublayersOwner.954ca05c.js";import{c as X}from"./ExportImageParameters.d30e5688.js";import{e as Z}from"./imageBitmapUtils.cbe07ca7.js";import{n as S}from"./sublayerUtils.ac353a39.js";import"./Version.cb16e629.js";import"./QueryTask.5a307c10.js";import"./executeForIds.c88a1679.js";import"./floorFilterUtils.4de71259.js";let r=class extends w(I(T(H(K($(O(E(j(R(M(L(k(B))))))))))))){constructor(...e){super(...e),this.dateFieldsTimeReference=null,this.datesInUnknownTimezone=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.preferredTimeReference=null,this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null}normalizeCtorArgs(e,s){return typeof e=="string"?{url:e,...s}:e}load(e){const s=N(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(P).then(()=>this._fetchService(s))),Promise.resolve(this)}readImageFormat(e,s){const c=s.supportedImageFormatTypes;return c&&c.includes("PNG32")?"png32":"png24"}writeSublayers(e,s,c,t){var h;if(!this.loaded||!e)return;const n=e.slice().reverse().flatten(({sublayers:a})=>a&&a.toArray().reverse()).toArray();let l=!1;if(this.capabilities&&this.capabilities.operations.supportsExportMap&&((h=this.capabilities.exportMap)==null?void 0:h.supportsDynamicLayers)){const a=v(t.origin);if(a===g.PORTAL_ITEM){const o=this.createSublayersForOrigin("service").sublayers;l=S(n,o,g.SERVICE)}else if(a>g.PORTAL_ITEM){const o=this.createSublayersForOrigin("portal-item");l=S(n,o.sublayers,v(o.origin))}}const m=[],d={writeSublayerStructure:l,...t};let y=l;n.forEach(a=>{const o=a.write({},d);m.push(o),y=y||a.originOf("visible")==="user"}),m.some(a=>Object.keys(a).length>1)&&(s.layers=m),y&&(s.visibleLayers=n.filter(a=>a.visible).map(a=>a.id))}createExportImageParameters(e,s,c,t){const n=t&&t.pixelRatio||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian());const l=new X({layer:this,floors:t==null?void 0:t.floors,scale:F({extent:e,width:s})*n}),m=l.toJSON();l.destroy();const d=!t||!t.rotation||this.version<10.3?{}:{rotation:-t.rotation},y=e&&e.spatialReference,h=y.wkid||JSON.stringify(y.toJSON());m.dpi*=n;const a={};if(t!=null&&t.timeExtent){const{start:o,end:u}=t.timeExtent.toJSON();a.time=o&&u&&o===u?""+o:`${o!=null?o:"null"},${u!=null?u:"null"}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(a.time="null,null");return{bbox:e&&e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:h,imageSR:h,size:s+","+c,...m,...d,...a}}async fetchImage(e,s,c,t){const{data:n}=await this._fetchImage("image",e,s,c,t);return n}async fetchImageBitmap(e,s,c,t){const{data:n,url:l}=await this._fetchImage("blob",e,s,c,t);return Z(n,l)}async fetchRecomputedExtents(e={}){const s={...e,query:{returnUpdates:!0,f:"json",...this.customParameters,token:this.apiKey}},{data:c}=await f(this.url,s),{extent:t,fullExtent:n,timeExtent:l}=c,m=t||n;return{fullExtent:m&&J.fromJSON(m),timeExtent:l&&U.fromJSON({start:l[0],end:l[1]})}}loadAll(){return q(this,e=>{e(this.allSublayers)})}serviceSupportsSpatialReference(e){return A(this,e)}async _fetchImage(e,s,c,t,n){var d,y,h,a;const l={responseType:e,signal:(d=n==null?void 0:n.signal)!=null?d:null,query:{...this.parsedUrl.query,...this.createExportImageParameters(s,c,t,n),f:"image",...this.refreshParameters,...this.customParameters,token:this.apiKey}},m=this.parsedUrl.path+"/export";if(((y=l.query)==null?void 0:y.dynamicLayers)!=null&&!((a=(h=this.capabilities)==null?void 0:h.exportMap)!=null&&a.supportsDynamicLayers))throw new b("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:l.query});try{const{data:o}=await f(m,l);return{data:o,url:m}}catch(o){throw _(o)?o:new b("mapimagelayer:image-fetch-error",`Unable to load image: ${m}`,{error:o})}}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:s,ssl:c}=await f(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},signal:e});c&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=s,this.read(s,{origin:"service",url:this.parsedUrl})}};i([p({type:x})],r.prototype,"dateFieldsTimeReference",void 0),i([p({type:Boolean})],r.prototype,"datesInUnknownTimezone",void 0),i([p()],r.prototype,"dpi",void 0),i([p()],r.prototype,"gdbVersion",void 0),i([p()],r.prototype,"imageFormat",void 0),i([V("imageFormat",["supportedImageFormatTypes"])],r.prototype,"readImageFormat",null),i([p({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],r.prototype,"imageMaxHeight",void 0),i([p({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],r.prototype,"imageMaxWidth",void 0),i([p()],r.prototype,"imageTransparency",void 0),i([p({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],r.prototype,"isReference",void 0),i([p({json:{read:!1,write:!1}})],r.prototype,"labelsVisible",void 0),i([p({type:["ArcGISMapServiceLayer"]})],r.prototype,"operationalLayerType",void 0),i([p({json:{read:!1,write:!1}})],r.prototype,"popupEnabled",void 0),i([p({type:x})],r.prototype,"preferredTimeReference",void 0),i([p()],r.prototype,"sourceJSON",void 0),i([p({json:{write:{ignoreOrigin:!0}}})],r.prototype,"sublayers",void 0),i([z("sublayers",{layers:{type:[W]},visibleLayers:{type:[C]}})],r.prototype,"writeSublayers",null),i([p({type:["show","hide","hide-children"]})],r.prototype,"listMode",void 0),i([p({json:{read:!1},readOnly:!0,value:"map-image"})],r.prototype,"type",void 0),i([p(D)],r.prototype,"url",void 0),r=i([G("esri.layers.MapImageLayer")],r);const ne=r;export{ne as default};
