import{B as o,D as n,aN as p,aO as y,v as m,ek as u}from"./index.2901469c.js";import d from"./FeatureLayerView2D.801f2d29.js";import"./utils.4edbb65b.js";import"./Utils.1ad8c295.js";import"./enums.0295eb81.js";import"./enums.2d9e6f64.js";import"./Texture.5bef5d1e.js";import"./VertexElementDescriptor.1fdca6da.js";import"./MaterialKey.b21e8ccb.js";import"./LayerView.3a5d2eac.js";import"./schemaUtils.97e7c809.js";import"./visualVariablesUtils.c546f7fd.js";import"./createSymbolSchema.03065359.js";import"./ExpandedCIM.7023f1aa.js";import"./BidiEngine.d8bba3fc.js";import"./Rect.95b0fd2e.js";import"./GeometryUtils.4f19e772.js";import"./floatRGBA.20fe84c0.js";import"./util.dbbaba27.js";import"./floorFilterUtils.05eb8c6a.js";import"./popupUtils.1ffff7e0.js";import"./RefreshableLayerView.29441b41.js";function h(e,r){return!e.visible||e.minScale!==0&&r>e.minScale||e.maxScale!==0&&r<e.maxScale}let l=class extends d{initialize(){this.handles.add([p(()=>{var e;return(e=this.view)==null?void 0:e.viewpoint},()=>this._update(),y)])}_injectOverrides(e){let r=super._injectOverrides(e);const s=this.view.scale,t=this.layer.sublayers.filter(a=>h(a,s)).map(a=>a.subtypeCode);if(!t.length)return r;r=m(r)?r:new u().toJSON();const i=`NOT ${this.layer.subtypeField} IN (${t.join(",")})`;return r.where=r.where?`(${r.where}) AND (${i})`:i,r}_setLayersForFeature(e){const r=this.layer.fieldsIndex.get(this.layer.subtypeField),s=e.attributes[r.name],t=this.layer.sublayers.find(i=>i.subtypeCode===s);e.layer=t,e.sourceLayer=this.layer}_createSchemaConfig(){const e={subtypeField:this.layer.subtypeField,sublayers:Array.from(this.layer.sublayers).map(i=>({featureReduction:null,geometryType:this.layer.geometryType,labelingInfo:i.labelingInfo,labelsVisible:i.labelsVisible,renderer:i.renderer,subtypeCode:i.subtypeCode,orderBy:null}))},r=this.layer.sublayers.map(i=>i.subtypeCode).join(","),s=this.layer.sublayers.length?`${this.layer.subtypeField} IN (${r})`:"1=2";let t=this.layer.definitionExpression?this.layer.definitionExpression+" AND ":"";return t+=s,{...super._createSchemaConfig(),...e,definitionExpression:t}}};l=o([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],l);const V=l;export{V as default};
