import{as as l,at as h,eb as g,m as w,k as f,eA as u,eB as n,aB as d,aD as b}from"./vendor-f61b19da.js";import{y as S,u as V}from"./LayerView-db230c5b.js";import{i as v}from"./GraphicContainer-e4fd1e04.js";import{o as _}from"./BaseGraphicContainer-8fd74117.js";import"./utils-073a76a7.js";import"./enums-4ca4641f.js";import"./MaterialKey-6fc95429.js";import"./Utils-823f2fe9.js";import"./definitions-315e9606.js";import"./enums-64ab819c.js";import"./Texture-a45928bd.js";import"./VertexElementDescriptor-2925c6af.js";import"./ExpandedCIM-387e7205.js";import"./BidiEngine-836b7ef6.js";import"./Rect-ea14f53a.js";import"./GeometryUtils-eebff0a0.js";import"./floatRGBA-51b72951.js";import"./normalizeUtilsSync-20aebf4d.js";import"./projectionSupport-d522253e.js";import"./json-48e3ea08.js";import"./VertexArrayObject-336b55d9.js";import"./FeatureContainer-d2ba38b3.js";import"./TileContainer-ef5effe6.js";import"./WGLContainer-78c0e7a1.js";import"./pixelUtils-e7c1af11.js";import"./ProgramTemplate-0eca8760.js";import"./StyleDefinition-beb706e3.js";import"./config-1337d16e.js";import"./GeometryUtils-c093d234.js";import"./earcut-58237617.js";import"./visualVariablesUtils-69d25540.js";import"./visualVariablesUtils-9b7ef877.js";import"./Matcher-341f1577.js";import"./tileUtils-f4264142.js";import"./TileClipper-5d3dda2e.js";import"./Geometry-daada628.js";import"./devEnvironmentUtils-5002a058.js";import"./schemaUtils-bf9f517f.js";import"./createSymbolSchema-59778335.js";import"./rendererUtils-ca5f4ebc.js";import"./util-b2f998f9.js";import"./ComputedAttributeStorage-f8b84bd3.js";import"./FeatureSetReader-d42fce40.js";import"./centroid-7bcd4b03.js";import"./vec3f32-4322908d.js";let y=class extends S(V){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(e,r){if(!this.graphicsViews.length)return null;const o=this.layer;return this.graphicsViews.reverse().map(t=>{const i=this._popupTemplates.get(t),p=t.hitTest(e);for(const s of p)s.layer=o,s.sourceLayer=o,s.popupTemplate=i;return p}).flat().map(t=>({type:"graphic",graphic:t,layer:o,mapPoint:e}))}update(e){if(this.graphicsViews)for(const r of this.graphicsViews)r.processUpdate(e)}attach(){this.handles.add([l(()=>{var e;return(e=this.layer)==null?void 0:e.featureCollections},e=>{this._clear();for(const{popupInfo:r,featureSet:o,layerDefinition:t}of e){const i=g.fromJSON(o),p=new w(i.features),s=t.drawingInfo,c=r?f.fromJSON(r):null,a=u(s.renderer),m=new _({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:p,renderer:a,container:new v(this.view.featuresTilingScheme)});this._graphicsViewMap[i.geometryType]=m,this._popupTemplates.set(m,c),i.geometryType!=="polygon"||this.layer.polygonSymbol?i.geometryType!=="polyline"||this.layer.lineSymbol?i.geometryType!=="point"||this.layer.pointSymbol||(this.layer.pointSymbol=a.symbol):this.layer.lineSymbol=a.symbol:this.layer.polygonSymbol=a.symbol,this.graphicsViews.push(m),this.container.addChild(m.container)}},h),l(()=>{var e;return(e=this.layer)==null?void 0:e.polygonSymbol},e=>{this._graphicsViewMap.polygon.renderer=new n({symbol:e})},h),l(()=>{var e;return(e=this.layer)==null?void 0:e.lineSymbol},e=>{this._graphicsViewMap.polyline.renderer=new n({symbol:e})},h),l(()=>{var e;return(e=this.layer)==null?void 0:e.pointSymbol},e=>{this._graphicsViewMap.point.renderer=new n({symbol:e})},h)],"georsslayerview")}detach(){this.handles.remove("georsslayerview"),this._clear()}moveStart(){}moveEnd(){}viewChange(){for(const e of this.graphicsViews)e.viewChange()}_clear(){this.container.removeAllChildren();for(const e of this.graphicsViews)e.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};y=d([b("esri.views.2d.layers.GeoRSSLayerView2D")],y);const we=y;export{we as default};
