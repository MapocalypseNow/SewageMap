import{hW as g,hX as p,hV as y,gs as w,hY as I,cA as f,Q as h,q as _}from"./vendor-8855e047.js";class b{constructor(){this.code=null,this.description=null}}class v{constructor(t){this.error=new b,this.globalId=null,this.objectId=null,this.success=!1,this.uniqueId=null,this.error.description=t}}function d(e){return new v(e)}class q{constructor(t){this.globalId=null,this.success=!0,this.objectId=this.uniqueId=t}}function j(e){return new q(e)}const l=new Set;function A(e,t,i,m=!1,u){l.clear();for(const s in i){const n=e.get(s);if(!n)continue;const a=i[s],r=P(n,a);if(r!==a&&u&&u.push({name:"invalid-value-type",message:"attribute value was converted to match the field type",details:{field:n,originalValue:a,sanitizedValue:r}}),l.add(n.name),n&&(m||n.editable)){const c=g(n,r);if(c)return d(p(c,n,r));t[n.name]=r}}for(const s of(e==null?void 0:e.requiredFields)??[])if(!l.has(s.name))return d(`missing required field "${s.name}"`);return null}function P(e,t){let i=t;return typeof t=="string"&&y(e)?i=parseFloat(t):t!=null&&w(e)&&typeof t!="string"&&(i=String(t)),I(i)}let o;function F(e,t){if(!e||!f(t))return e;if("rings"in e||"paths"in e){if(h(o))throw new TypeError("geometry engine not loaded");return o.simplify(t,e)}return e}async function V(){return h(o)&&(o=await _(()=>import("./geometryEngineJSON-a45b7108.js"),["assets/geometryEngineJSON-a45b7108.js","assets/geometryEngineBase-3dd302e0.js","assets/geometryEngineJSON-45c195fe.js","assets/json-48e3ea08.js"])),o}async function G(e,t){!f(e)||t!=="esriGeometryPolygon"&&t!=="esriGeometryPolyline"||await V()}export{d as a,j as f,F as g,A as m,G as w};
