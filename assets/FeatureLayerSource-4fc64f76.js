import{e as F,y as R,n as z}from"./cast-4943406f.js";import"./geometry-da69b92c.js";import{g as W}from"./Graphic-13c64b79.js";import{S as ee,o as te,U as y,j as re,G as A,n as G}from"./request-9ab300ca.js";import{T as se}from"./TimeExtent-fd94e986.js";import{a as O}from"./Error-8814705f.js";import{h as v,o as ae}from"./string-cc430a78.js";import{s as B}from"./jsonMap-9318d50f.js";import{m as oe}from"./Loadable-8b974e55.js";import{r as c,t as q,e as ne}from"./typedArrayUtil-bd69bba0.js";import{y as ie,x as ue}from"./promiseUtils-ec14a623.js";import"./ensureType-9613b5f0.js";import{a as C,k as le}from"./Extent-d21a2637.js";import{c as de,v as ce}from"./jsonUtils-7333a4d1.js";import{o as pe}from"./clientSideDefaults-542574a3.js";import{_ as ye}from"./preload-helper-6c8d3039.js";import{x as L,K as Z}from"./Query-ca5b0d4c.js";import{b as me,a as he}from"./AttachmentInfo-fc5d4f91.js";import{p as fe,n as Fe}from"./Task-44399f92.js";import Q from"./FeatureSet-cf76d07f.js";import{f as S,v as ge}from"./normalizeUtils-758f8b63.js";import{t as U,x as be}from"./query-b278558e.js";import{c as Re,d as D}from"./RelationshipQuery-a6b246d9.js";import{n as Oe,s as Se}from"./executeForIds-2e345052.js";import{r as Ie}from"./queryZScale-38bff362.js";import{v as $}from"./TopFeaturesQuery-a641bf51.js";import{g as qe}from"./arcgisLayerUrl-32f60088.js";import{i as _e}from"./editsZScale-cfe55ac3.js";import"./nextTick-3ee5a785.js";import"./Polyline-98ddf509.js";import"./typeUtils-98cd71e2.js";import"./PopupTemplate-9e34fd80.js";import"./Clonable-7eedeb5c.js";import"./Collection-e1ec52f9.js";import"./Evented-28d49a6f.js";import"./SimpleObservable-b403cd38.js";import"./fieldUtils-605e1353.js";import"./arcadeOnDemand-5200ab6b.js";import"./enumeration-1740c98c.js";import"./number-d7fe9942.js";import"./locale-30120714.js";import"./Identifiable-28626f77.js";import"./symbols-26ff8002.js";import"./CIMSymbol-fc3b1809.js";import"./Symbol-f543a02b.js";import"./Color-ebbea628.js";import"./colorUtils-639f4d25.js";import"./mathUtils-daf59e84.js";import"./common-701a4199.js";import"./screenUtils-7afeb41c.js";import"./opacityUtils-dc8d0a85.js";import"./aaBoundingBox-58fec4c8.js";import"./persistableUrlUtils-d6987fba.js";import"./collectionUtils-28848f7d.js";import"./Portal-c85307b1.js";import"./PortalGroup-e30a1480.js";import"./PortalUser-6c405f61.js";import"./Promise-9613afa4.js";import"./QueryEngineCapabilities-42e44ded.js";import"./defaultsJSON-b087dd4d.js";import"./Field-27137e22.js";import"./fieldType-ff12d8db.js";import"./zscale-3fafe111.js";import"./unitUtils-bc71b997.js";import"./featureConversionUtils-e981d065.js";import"./OptimizedFeature-ec32193d.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./pbfQueryUtils-4074e0c2.js";import"./pbf-9c9087c4.js";var k;(function(t){t[t.PROJECT_VERTICES=1]="PROJECT_VERTICES"})(k||(k={}));function we(t){const e=t.toJSON();return e.attachmentTypes&&(e.attachmentTypes=e.attachmentTypes.join(",")),e.keywords&&(e.keywords=e.keywords.join(",")),e.globalIds&&(e.globalIds=e.globalIds.join(",")),e.objectIds&&(e.objectIds=e.objectIds.join(",")),e.size&&(e.size=e.size.join(",")),e}function X(t,e){const r={};for(const s of t){const{parentObjectId:a,parentGlobalId:n,attachmentInfos:i}=s;for(const o of i){const{id:u}=o,l=ee(te(`${e}/${a}/attachments/${u}`)),d=me.fromJSON(o);d.set({url:l,parentObjectId:a,parentGlobalId:n}),r[a]?r[a].push(d):r[a]=[d]}}return r}function je(t,e,r){let s={query:U({...t.query,f:"json",...we(e)})};return r&&(s={...r,...s,query:{...r.query,...s.query}}),y(t.path+"/queryAttachments",s)}async function Ee(t,e,r){const s=S(t);return je(s,Re.from(e),{...r}).then(a=>X(a.data.attachmentGroups,s.path))}async function xe(t,e,r){const s=S(t);return be(s,L.from(e),{...r}).then(a=>({count:a.data.count,extent:C.fromJSON(a.data.extent)}))}function Te(t,e){const r=t.toJSON();return r.objectIds&&(r.objectIds=r.objectIds.join(",")),r.orderByFields&&(r.orderByFields=r.orderByFields.join(",")),r.outFields&&!(e!=null&&e.returnCountOnly)?r.outFields.includes("*")?r.outFields="*":r.outFields=r.outFields.join(","):delete r.outFields,r.outSpatialReference&&(r.outSR=r.outSR.wkid||JSON.stringify(r.outSR.toJSON()),delete r.outSpatialReference),r.dynamicDataSource&&(r.layer=JSON.stringify({source:r.dynamicDataSource}),delete r.dynamicDataSource),r}async function De(t,e,r){const s=await Y(t,e,r),a=s.data,n=a.geometryType,i=a.spatialReference,o={};for(const u of a.relatedRecordGroups){const l={fields:void 0,objectIdFieldName:void 0,geometryType:n,spatialReference:i,hasZ:!!a.hasZ,hasM:!!a.hasM,features:u.relatedRecords};if(u.objectId!=null)o[u.objectId]=l;else for(const d in u)u.hasOwnProperty(d)&&d!=="relatedRecords"&&(o[u[d]]=l)}return{...s,data:o}}async function $e(t,e,r){const s=await Y(t,e,r,{returnCountOnly:!0}),a=s.data,n={};for(const i of a.relatedRecordGroups)i.objectId!=null&&(n[i.objectId]=i.count);return{...s,data:n}}async function Y(t,e,r={},s){const a=U({...t.query,f:"json",...s,...Te(e,s)});return y(t.path+"/queryRelatedRecords",{...r,query:{...r.query,...a}})}async function Ne(t,e,r){e=D.from(e);const s=S(t);return De(s,e,r).then(a=>{const n=a.data,i={};return Object.keys(n).forEach(o=>i[o]=Q.fromJSON(n[o])),i})}async function Je(t,e,r){e=D.from(e);const s=S(t);return $e(s,e,{...r}).then(a=>a.data)}const M="Layer does not support extent calculation.";function Ae(t,e){var n,i;const r=t.geometry,s=t.toJSON(),a=s;if(c(r)&&(a.geometry=JSON.stringify(r),a.geometryType=de(r),a.inSR=r.spatialReference.wkid||JSON.stringify(r.spatialReference)),(n=s.topFilter)!=null&&n.groupByFields&&(a.topFilter.groupByFields=s.topFilter.groupByFields.join(",")),(i=s.topFilter)!=null&&i.orderByFields&&(a.topFilter.orderByFields=s.topFilter.orderByFields.join(",")),s.topFilter&&(a.topFilter=JSON.stringify(a.topFilter)),s.objectIds&&(a.objectIds=s.objectIds.join(",")),s.orderByFields&&(a.orderByFields=s.orderByFields.join(",")),s.outFields&&!(e!=null&&e.returnCountOnly||e!=null&&e.returnExtentOnly||e!=null&&e.returnIdsOnly)?s.outFields.includes("*")?a.outFields="*":a.outFields=s.outFields.join(","):delete a.outFields,s.outSR?a.outSR=s.outSR.wkid||JSON.stringify(s.outSR):r&&s.returnGeometry&&(a.outSR=a.inSR),s.returnGeometry&&delete s.returnGeometry,s.timeExtent){const o=s.timeExtent,{start:u,end:l}=o;u==null&&l==null||(a.time=u===l?u:`${u??"null"},${l??"null"}`),delete s.timeExtent}return a}async function ve(t,e,r,s){const a=await N(t,e,"json",s);return Ie(e,r,a.data),a}async function ke(t,e,r){return c(e.timeExtent)&&e.timeExtent.isEmpty?{data:{objectIds:[]}}:N(t,e,"json",r,{returnIdsOnly:!0})}async function Ce(t,e,r){return c(e.timeExtent)&&e.timeExtent.isEmpty?{data:{count:0,extent:null}}:N(t,e,"json",r,{returnExtentOnly:!0,returnCountOnly:!0}).then(s=>{const a=s.data;if(a.hasOwnProperty("extent"))return s;if(a.features)throw new Error(M);if(a.hasOwnProperty("count"))throw new Error(M);return s})}function Qe(t,e,r){return c(e.timeExtent)&&e.timeExtent.isEmpty?Promise.resolve({data:{count:0}}):N(t,e,"json",r,{returnIdsOnly:!0,returnCountOnly:!0})}function N(t,e,r,s={},a={}){const n=typeof t=="string"?re(t):t,i=e.geometry?[e.geometry]:[];return s.responseType=r==="pbf"?"array-buffer":"json",ge(i,null,s).then(o=>{const u=o&&o[0];c(u)&&((e=e.clone()).geometry=u);const l=U({...n.query,f:r,...a,...Ae(e,a)});return y(A(n.path,"queryTopFeatures"),{...s,query:{...l,...s.query}})})}async function Ue(t,e,r,s){const a=S(t),n={...s},{data:i}=await ve(a,$.from(e),r,n);return Q.fromJSON(i)}async function Ve(t,e,r){const s=S(t);return(await ke(s,$.from(e),{...r})).data.objectIds}async function Ge(t,e,r){const s=S(t),a=await Ce(s,$.from(e),{...r});return{count:a.data.count,extent:C.fromJSON(a.data.extent)}}async function Me(t,e,r){const s=S(t);return(await Qe(s,$.from(e),{...r})).data.count}let b=class extends fe{constructor(t){super(t),this.dynamicDataSource=null,this.fieldsIndex=null,this.format="json",this.gdbVersion=null,this.infoFor3D=null,this.sourceSpatialReference=null}async execute(t,e){const r=await this.executeJSON(t,e);return this.featureSetFromJSON(t,r,e)}async executeJSON(t,e){var u;const r={...this.requestOptions,...e},s=this._normalizeQuery(t),a=((u=t.outStatistics)==null?void 0:u[0])!=null,n=v("featurelayer-pbf-statistics"),i=!a||n;let o;if(this.format==="pbf"&&i)try{o=await Fe(this.url,s,r)}catch(l){if(l.name!=="query:parsing-pbf")throw l;this.format="json"}return this.format!=="json"&&i||(o=await he(this.url,s,r)),this._normalizeFields(o.fields),o}async featureSetFromJSON(t,e,r){if(!this._queryIs3DObjectFormat(t)||q(this.infoFor3D)||!e.assetMaps||!e.features||!e.features.length)return Q.fromJSON(e);const{meshFeatureSetFromJSON:s}=await ie(ye(()=>import("./meshFeatureSet-720ed76e.js").then(a=>a.a),["assets/meshFeatureSet-720ed76e.js","assets/Graphic-13c64b79.js","assets/cast-4943406f.js","assets/typedArrayUtil-bd69bba0.js","assets/string-cc430a78.js","assets/Error-8814705f.js","assets/ensureType-9613b5f0.js","assets/nextTick-3ee5a785.js","assets/promiseUtils-ec14a623.js","assets/geometry-da69b92c.js","assets/Extent-d21a2637.js","assets/Polyline-98ddf509.js","assets/typeUtils-98cd71e2.js","assets/jsonMap-9318d50f.js","assets/PopupTemplate-9e34fd80.js","assets/Clonable-7eedeb5c.js","assets/Collection-e1ec52f9.js","assets/Evented-28d49a6f.js","assets/SimpleObservable-b403cd38.js","assets/fieldUtils-605e1353.js","assets/preload-helper-6c8d3039.js","assets/arcadeOnDemand-5200ab6b.js","assets/enumeration-1740c98c.js","assets/number-d7fe9942.js","assets/locale-30120714.js","assets/Identifiable-28626f77.js","assets/symbols-26ff8002.js","assets/CIMSymbol-fc3b1809.js","assets/Symbol-f543a02b.js","assets/Color-ebbea628.js","assets/colorUtils-639f4d25.js","assets/mathUtils-daf59e84.js","assets/common-701a4199.js","assets/screenUtils-7afeb41c.js","assets/opacityUtils-dc8d0a85.js","assets/aaBoundingBox-58fec4c8.js","assets/request-9ab300ca.js","assets/persistableUrlUtils-d6987fba.js","assets/collectionUtils-28848f7d.js","assets/Portal-c85307b1.js","assets/Loadable-8b974e55.js","assets/Promise-9613afa4.js","assets/PortalGroup-e30a1480.js","assets/PortalUser-6c405f61.js","assets/jsonUtils-7333a4d1.js","assets/HandleOwner-46fb81da.js","assets/reactiveUtils-3389689f.js","assets/georeference-cd1f34ad.js","assets/unitUtils-bc71b997.js","assets/mat3f64-b33e332c.js","assets/mat4-62d5e6a4.js","assets/mat4f64-3d813481.js","assets/mat3-45e3f2eb.js","assets/projection-462aeb9f.js","assets/assets-2905a8db.js","assets/zscale-3fafe111.js","assets/quat-7867de93.js","assets/quatf64-7fd38d64.js","assets/BufferView-dfb97f8b.js","assets/vec2-f978aef8.js","assets/vec33-19f0d176.js","assets/imageUtils-c2d0d1ae.js","assets/earcut-58237617.js","assets/deduplicate-eb9d58da.js","assets/FeatureSet-cf76d07f.js","assets/Field-27137e22.js","assets/fieldType-ff12d8db.js"]),r);return s(t,this.infoFor3D,e)}executeForCount(t,e){const r={...this.requestOptions,...e},s=this._normalizeQuery(t);return Oe(this.url,s,r)}executeForExtent(t,e){const r={...this.requestOptions,...e},s=this._normalizeQuery(t);return xe(this.url,s,r)}executeForIds(t,e){const r={...this.requestOptions,...e},s=this._normalizeQuery(t);return Se(this.url,s,r)}executeRelationshipQuery(t,e){t=D.from(t);const r={...this.requestOptions,...e};return(this.gdbVersion||this.dynamicDataSource)&&((t=t.clone()).gdbVersion=t.gdbVersion||this.gdbVersion,t.dynamicDataSource=t.dynamicDataSource||this.dynamicDataSource),Ne(this.url,t,r)}executeRelationshipQueryForCount(t,e){t=D.from(t);const r={...this.requestOptions,...e};return(this.gdbVersion||this.dynamicDataSource)&&((t=t.clone()).gdbVersion=t.gdbVersion||this.gdbVersion,t.dynamicDataSource=t.dynamicDataSource||this.dynamicDataSource),Je(this.url,t,r)}executeAttachmentQuery(t,e){const r={...this.requestOptions,...e};return Ee(this.url,t,r)}executeTopFeaturesQuery(t,e){const r={...this.requestOptions,...e};return Ue(this.parsedUrl,t,this.sourceSpatialReference,r)}executeForTopIds(t,e){const r={...this.requestOptions,...e};return Ve(this.parsedUrl,t,r)}executeForTopExtents(t,e){const r={...this.requestOptions,...e};return Ge(this.parsedUrl,t,r)}executeForTopCount(t,e){const r={...this.requestOptions,...e};return Me(this.parsedUrl,t,r)}_normalizeQuery(t){let e=L.from(t);if(e.sourceSpatialReference=e.sourceSpatialReference||this.sourceSpatialReference,(this.gdbVersion||this.dynamicDataSource)&&(e=e===t?e.clone():e,e.gdbVersion=t.gdbVersion||this.gdbVersion,e.dynamicDataSource=t.dynamicDataSource?Z.from(t.dynamicDataSource):this.dynamicDataSource),c(this.infoFor3D)&&this._queryIs3DObjectFormat(t)){e=e===t?e.clone():e,e.formatOf3DObjects=null;for(const r of this.infoFor3D.queryFormats){if(r==="3D_glb"){e.formatOf3DObjects=r;break}r!=="3D_gltf"||e.formatOf3DObjects||(e.formatOf3DObjects=r)}if(!e.formatOf3DObjects)throw new O("query:unsupported-3d-query-formats","Could not find any supported 3D object query format. Only supported formats are 3D_glb and 3D_gltf");if(q(e.outFields)||!e.outFields.includes("*")){e=e===t?e.clone():e,q(e.outFields)&&(e.outFields=[]);const{originX:r,originY:s,originZ:a,translationX:n,translationY:i,translationZ:o,scaleX:u,scaleY:l,scaleZ:d,rotationX:g,rotationY:p,rotationZ:m,rotationDeg:f}=this.infoFor3D.transformFieldRoles;e.outFields.push(r,s,a,n,i,o,u,l,d,g,p,m,f)}}return e}_normalizeFields(t){if(c(this.fieldsIndex)&&c(t))for(const e of t){const r=this.fieldsIndex.get(e.name);r&&Object.assign(e,r.toJSON())}}_queryIs3DObjectFormat(t){return c(this.infoFor3D)&&t.returnGeometry&&t.multipatchOption!=="xyFootprint"&&!t.outStatistics}};F([R({type:Z})],b.prototype,"dynamicDataSource",void 0),F([R()],b.prototype,"fieldsIndex",void 0),F([R()],b.prototype,"format",void 0),F([R()],b.prototype,"gdbVersion",void 0),F([R()],b.prototype,"infoFor3D",void 0),F([R()],b.prototype,"sourceSpatialReference",void 0),b=F([z("esri.tasks.QueryTask")],b);const Pe=b,ze=new B({originalAndCurrentFeatures:"original-and-current-features",none:"none"});async function P(t){return typeof t=="string"?G(t)||{data:t}:new Promise((e,r)=>{const s=new FileReader;s.readAsDataURL(t),s.onload=()=>e(G(s.result)),s.onerror=a=>r(a)})}const Be=new Set(["Feature Layer","Table"]),Le=new B({Started:"published",Publishing:"publishing",Stopped:"unavailable"});let _=class extends oe{constructor(){super(...arguments),this.type="feature-layer",this.refresh=ue(async()=>{var r,s;await this.load();const t=(r=this.sourceJSON.editingInfo)==null?void 0:r.lastEditDate;if(t==null)return{dataChanged:!0,updates:{}};try{await this._fetchService(null)}catch{return{dataChanged:!0,updates:{}}}const e=t!==((s=this.sourceJSON.editingInfo)==null?void 0:s.lastEditDate);return{dataChanged:e,updates:e?{editingInfo:this.sourceJSON.editingInfo,extent:this.sourceJSON.extent}:null}})}load(t){const e=c(t)?t.signal:null;return this.addResolvingPromise(this._fetchService(this.layer.sourceJSON,e)),Promise.resolve(this)}get queryTask(){const{capabilities:{query:{supportsFormatPBF:t}},parsedUrl:e,dynamicDataSource:r,infoFor3D:s,gdbVersion:a,spatialReference:n,fieldsIndex:i}=this.layer,o=v("featurelayer-pbf")&&t&&q(s)?"pbf":"json";return new Pe({url:e.path,format:o,fieldsIndex:i,infoFor3D:s,dynamicDataSource:r,gdbVersion:a,sourceSpatialReference:n})}async addAttachment(t,e){await this.load();const r=t.attributes[this.layer.objectIdField],s=this.layer.parsedUrl.path+"/"+r+"/addAttachment",a=this._getLayerRequestOptions(),n=this._getFormDataForAttachment(e,a.query);try{const i=await y(s,{body:n});return this._createFeatureEditResult(i.data.addAttachmentResult)}catch(i){throw this._createAttachmentErrorResult(r,i)}}async updateAttachment(t,e,r){await this.load();const s=t.attributes[this.layer.objectIdField],a=this.layer.parsedUrl.path+"/"+s+"/updateAttachment",n=this._getLayerRequestOptions({query:{attachmentId:e}}),i=this._getFormDataForAttachment(r,n.query);try{const o=await y(a,{body:i});return this._createFeatureEditResult(o.data.updateAttachmentResult)}catch(o){throw this._createAttachmentErrorResult(s,o)}}async applyEdits(t,e){await this.load();const r=this.layer.infoFor3D,s=c(r),a=s||(e==null?void 0:e.globalIdUsed),n=t.addFeatures.map(h=>this._serializeFeature(h,r)),i=t.updateFeatures.map(h=>this._serializeFeature(h,r)),o=this._getFeatureIds(t.deleteFeatures,a);_e(n,i,this.layer.spatialReference);const u=[],l=[],d=[...t.deleteAttachments];for(const h of t.addAttachments)u.push(await this._serializeAttachment(h));for(const h of t.updateAttachments)l.push(await this._serializeAttachment(h));const g=u.length||l.length||d.length?{adds:u,updates:l,deletes:d}:null;let p,m=null;if(s){m=new Map;const h=[];for(const w of t.addAssets)h.push(this._serializeAssetMapEditAndUploadAssets(w,m));const E=await Promise.all(h);p=E.length?{adds:E,updates:[],deletes:[]}:void 0}const f={gdbVersion:(e==null?void 0:e.gdbVersion)||this.layer.gdbVersion,rollbackOnFailure:e==null?void 0:e.rollbackOnFailureEnabled,useGlobalIds:a,returnEditMoment:e==null?void 0:e.returnEditMoment,usePreviousEditMoment:e==null?void 0:e.usePreviousEditMoment,sessionId:e==null?void 0:e.sessionId};e!=null&&e.returnServiceEditsOption?(f.edits=JSON.stringify([{id:this.layer.layerId,adds:n,updates:i,deletes:o,attachments:g,assetMaps:ne(p)}]),f.returnServiceEditsOption=ze.toJSON(e==null?void 0:e.returnServiceEditsOption),f.returnServiceEditsInSourceSR=e==null?void 0:e.returnServiceEditsInSourceSR):(f.adds=n.length?JSON.stringify(n):null,f.updates=i.length?JSON.stringify(i):null,f.deletes=o.length?a?JSON.stringify(o):o.join(","):null,f.attachments=g&&JSON.stringify(g),f.assetMaps=c(p)?JSON.stringify(p):void 0);const H=this._getLayerRequestOptions({method:"post",query:f}),V=e!=null&&e.returnServiceEditsOption?this.layer.url:this.layer.parsedUrl.path,j=await y(V+"/applyEdits",H);if(s&&j.data!=null&&j.data.assetMaps!=null){const h=j.data,E=this.layer.objectIdField,w=[];for(const I of h.addResults)I.success&&w.push(I.objectId);for(const I of h.updateResults)I.success&&w.push(I.objectId);const K=this._createRequestQueryOptions(),x=await y(V+"/query",{...K,query:{f:"json",formatOf3DObjects:"3D_glb",where:`OBJECTID IN (${w.join(",")})`,outFields:`${E}`}});if(x&&x.data&&x.data.assetMaps&&c(m)){const I=x.data.assetMaps;for(const J of I){const T=m.get(J.parentGlobalId).geometry;c(T)&&T.type==="mesh"&&T.updateExternalSource({source:[{name:J.assetName,source:J.assetName}],extent:T.extent})}}}return this._createEditsResult(j)}async deleteAttachments(t,e){await this.load();const r=t.attributes[this.layer.objectIdField],s=this.layer.parsedUrl.path+"/"+r+"/deleteAttachments";try{return(await y(s,this._getLayerRequestOptions({query:{attachmentIds:e.join(",")},method:"post"}))).data.deleteAttachmentResults.map(this._createFeatureEditResult)}catch(a){throw this._createAttachmentErrorResult(r,a)}}fetchRecomputedExtents(t={}){const e=t.signal;return this.load({signal:e}).then(async()=>{const r=this._getLayerRequestOptions({...t,query:{returnUpdates:!0}}),{layerId:s,url:a}=this.layer,{data:n}=await y(`${a}/${s}`,r),{id:i,extent:o,fullExtent:u,timeExtent:l}=n,d=o||u;return{id:i,fullExtent:d&&C.fromJSON(d),timeExtent:l&&se.fromJSON({start:l[0],end:l[1]})}})}async queryAttachments(t,e={}){const{parsedUrl:r}=this.layer,s=r.path;await this.load();const a=this._getLayerRequestOptions(e);if(!this.layer.get("capabilities.operations.supportsQueryAttachments")){const{objectIds:n}=t,i=[];for(const o of n){const u=s+"/"+o+"/attachments";i.push(y(u,a))}return Promise.all(i).then(o=>n.map((u,l)=>({parentObjectId:u,attachmentInfos:o[l].data.attachmentInfos}))).then(o=>X(o,s))}return this.queryTask.executeAttachmentQuery(t,a)}async queryFeatures(t,e){return await this.load(),this.queryTask.execute(t,{...e,query:this._createRequestQueryOptions(e)})}async queryFeaturesJSON(t,e){return await this.load(),this.queryTask.executeJSON(t,{...e,query:this._createRequestQueryOptions(e)})}async queryObjectIds(t,e){return await this.load(),this.queryTask.executeForIds(t,{...e,query:this._createRequestQueryOptions(e)})}async queryFeatureCount(t,e){return await this.load(),this.queryTask.executeForCount(t,{...e,query:this._createRequestQueryOptions(e)})}async queryExtent(t,e){return await this.load(),this.queryTask.executeForExtent(t,{...e,query:this._createRequestQueryOptions(e)})}async queryRelatedFeatures(t,e){return await this.load(),this.queryTask.executeRelationshipQuery(t,{...e,query:this._createRequestQueryOptions(e)})}async queryRelatedFeaturesCount(t,e){return await this.load(),this.queryTask.executeRelationshipQueryForCount(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopFeatures(t,e){return await this.load(),this.queryTask.executeTopFeaturesQuery(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopObjectIds(t,e){return await this.load(),this.queryTask.executeForTopIds(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopExtents(t,e){return await this.load(),this.queryTask.executeForTopExtents(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopCount(t,e){return await this.load(),this.queryTask.executeForTopCount(t,{...e,query:this._createRequestQueryOptions(e)})}async fetchPublishingStatus(){if(!qe(this.layer.url))return"unavailable";const t=A(this.layer.url,"status"),e=await y(t,{query:{f:"json"}});return Le.fromJSON(e.data.status)}_createRequestQueryOptions(t){const e={...this.layer.customParameters,token:this.layer.apiKey,...t==null?void 0:t.query};return this.layer.datesInUnknownTimezone&&(e.timeReferenceUnknownClient=!0),e}async _fetchService(t,e){if(!t){const{data:s}=await y(this.layer.parsedUrl.path,this._getLayerRequestOptions({query:v("featurelayer-advanced-symbols")?{returnAdvancedSymbols:!0}:{},signal:e}));t=s}this.sourceJSON=this._patchServiceJSON(t);const r=t.type;if(!Be.has(r))throw new O("feature-layer-source:unsupported-type",`Source type "${r}" is not supported`)}_patchServiceJSON(t){var e;if(t.type!=="Table"&&t.geometryType&&!((e=t==null?void 0:t.drawingInfo)!=null&&e.renderer)&&!t.defaultSymbol){const r=pe(t.geometryType).renderer;ae("drawingInfo.renderer",r,t)}return t.geometryType==="esriGeometryMultiPatch"&&t.infoFor3D&&(t.geometryType="mesh"),t}_serializeFeature(t,e){const{geometry:r,attributes:s}=t;if(c(e)&&c(t.geometry)&&t.geometry.type==="mesh"){const a={...s},n=t.geometry,i=n.origin,o=n.transform;if(a[e.transformFieldRoles.originX]=i.x,a[e.transformFieldRoles.originY]=i.y,a[e.transformFieldRoles.originZ]=i.z,c(o)){const u=o.translation,l=o.scale,d=o.rotation;a[e.transformFieldRoles.translationX]=u[0],a[e.transformFieldRoles.translationY]=u[1],a[e.transformFieldRoles.translationZ]=u[2],a[e.transformFieldRoles.scaleX]=l[0],a[e.transformFieldRoles.scaleY]=l[1],a[e.transformFieldRoles.scaleZ]=l[2],a[e.transformFieldRoles.rotationX]=d[0],a[e.transformFieldRoles.rotationY]=d[1],a[e.transformFieldRoles.rotationZ]=d[2],a[e.transformFieldRoles.rotationDeg]=d[3]}return{geometry:null,attributes:a}}return q(r)?{attributes:s}:r.type==="mesh"||r.type==="extent"?null:{geometry:r.toJSON(),attributes:s}}async _serializeAttachment(t){const{feature:e,attachment:r}=t,{globalId:s,name:a,contentType:n,data:i,uploadId:o}=r,u={globalId:s,parentGlobalId:null,contentType:null,name:null,uploadId:null,data:null};if(e&&(u.parentGlobalId="attributes"in e?e.attributes&&e.attributes[this.layer.globalIdField]:e.globalId),o)u.uploadId=o;else if(i){const l=await P(i);u.contentType=l.mediaType,u.data=l.data,i instanceof File&&(u.name=i.name)}return a&&(u.name=a),n&&(u.contentType=n),u}async _serializeAssetMapEditAndUploadAssets(t,e){const r=this.layer.url;let s=null;try{const l=new Blob([t.data],{type:t.mimeType}),d=new FormData;d.append("f","json"),d.append("file",l,`${t.assetName}`);const g={body:d,method:"post",responseType:"json"},{data:p}=await y(`${r}/uploads/upload`,g);if(!p.success)throw new O("feature-layer-source:upload-failure","Expected upload to be successfull.");s={assetType:t.assetType,assetUploadId:p.item.itemID}}catch{s=null}if(q(s)){const l=await P(new Blob([t.data]));if(!l.isBase64)throw new O("feature-layer-source:uploadAssets-failure","Expected gltf data in base64 format after conversion.");s={assetType:t.assetType,assetData:l.data}}if(q(s))throw new O("feature-layer-source:uploadAssets-failure","Unable to prepare uploadAsset request options.");const a={method:"post",query:{f:"json",assets:JSON.stringify([s])},responseType:"json"},n=await y(A(this.layer.parsedUrl.path,"uploadAssets"),a);if(n.data.uploadResults.length!==1||!n.data.uploadResults[0].success)throw new O("feature-layer-source:uploadAssets-failure","Bad response.");const i=n.data.uploadResults[0].assetHash,o=[];t.flags&k.PROJECT_VERTICES&&o.push("PROJECT_VERTICES");const u={globalId:t.assetMapGlobalId,parentGlobalId:t.featureGlobalId,assetName:t.assetName,assetHash:i,flags:o};return e.set(t.featureGlobalId,t.feature),u}_getFeatureIds(t,e){const r=t[0];return r?this._canUseGlobalIds(e,t)?this._getGlobalIdsFromFeatureIdentifier(t):"objectId"in r?this._getObjectIdsFromFeatureIdentifier(t):this._getIdsFromFeatures(t):[]}_getIdsFromFeatures(t){const e=this.layer.objectIdField;return t.map(r=>r.attributes&&r.attributes[e])}_canUseGlobalIds(t,e){return t&&"globalId"in e[0]}_getObjectIdsFromFeatureIdentifier(t){return t.map(e=>e.objectId)}_getGlobalIdsFromFeatureIdentifier(t){return t.map(e=>e.globalId)}_createEditsResult(t){const e=t.data,{layerId:r}=this.layer,s=[];let a=null;if(Array.isArray(e))for(const o of e)s.push({id:o.id,editedFeatures:o.editedFeatures}),o.id===r&&(a={addResults:o.addResults,updateResults:o.updateResults,deleteResults:o.deleteResults,attachments:o.attachments,editMoment:o.editMoment});else a=e;const n=a==null?void 0:a.attachments,i={addFeatureResults:a.addResults?a.addResults.map(this._createFeatureEditResult,this):[],updateFeatureResults:a.updateResults?a.updateResults.map(this._createFeatureEditResult,this):[],deleteFeatureResults:a.deleteResults?a.deleteResults.map(this._createFeatureEditResult,this):[],addAttachmentResults:n&&n.addResults?n.addResults.map(this._createFeatureEditResult,this):[],updateAttachmentResults:n&&n.updateResults?n.updateResults.map(this._createFeatureEditResult,this):[],deleteAttachmentResults:n&&n.deleteResults?n.deleteResults.map(this._createFeatureEditResult,this):[]};if(a.editMoment&&(i.editMoment=a.editMoment),s.length>0){i.editedFeatureResults=[];for(const o of s){const{adds:u,updates:l,deletes:d,spatialReference:g}=o.editedFeatures,p=g?new le(g):null;i.editedFeatureResults.push({layerId:o.id,editedFeatures:{adds:(u==null?void 0:u.map(m=>this._createEditedFeature(m,p)))||[],updates:(l==null?void 0:l.map(m=>({original:this._createEditedFeature(m[0],p),current:this._createEditedFeature(m[1],p)})))||[],deletes:(d==null?void 0:d.map(m=>this._createEditedFeature(m,p)))||[],spatialReference:p}})}}return i}_createEditedFeature(t,e){return new W({attributes:t.attributes,geometry:ce({...t.geometry,spatialReference:e})})}_createFeatureEditResult(t){const e=t.success===!0?null:t.error||{code:void 0,description:void 0};return{objectId:t.objectId,globalId:t.globalId,error:e?new O("feature-layer-source:edit-failure",e.description,{code:e.code}):null}}_createAttachmentErrorResult(t,e){const r=e.details.messages&&e.details.messages[0]||e.message,s=e.details.httpStatus||e.details.messageCode;return{objectId:t,globalId:null,error:new O("feature-layer-source:attachment-failure",r,{code:s})}}_getFormDataForAttachment(t,e){const r=t instanceof FormData?t:t&&t.elements?new FormData(t):null;if(r)for(const s in e){const a=e[s];a!=null&&(r.set?r.set(s,a):r.append(s,a))}return r}_getLayerRequestOptions(t={}){const{parsedUrl:e,gdbVersion:r,dynamicDataSource:s}=this.layer;return{...t,query:{gdbVersion:r,layer:s?JSON.stringify({source:s}):void 0,...e.query,f:"json",...this._createRequestQueryOptions(t)},responseType:"json"}}};F([R()],_.prototype,"type",void 0),F([R({constructOnly:!0})],_.prototype,"layer",void 0),F([R({readOnly:!0})],_.prototype,"queryTask",null),_=F([z("esri.layers.graphics.sources.FeatureLayerSource")],_);const lr=_;export{lr as default};
