import{f as q,y as J,dy as Rt,A as Lt,dJ as Nt,s as Et,r as R,k as H,a1 as jt,O as Z,n as ft,e as Ot,i as nt,ah as Gt,bX as Tt,be as qt,w as Wt,e$ as Xt}from"./index.js";class yt{constructor(e=null,n=null,l=null){this.minValue=e,this.maxValue=n,this.noDataValue=l}}const Jt=9999999e31,zt=2e-7,Ht={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34028234663852886e22,34028234663852886e22],f64:[-Number.MAX_VALUE,Number.MAX_VALUE]};function ut(t){var e;return(e=Ht[t])!=null?e:[-34028234663852886e22,34028234663852886e22]}function ye(t,e,n){var p,f,d,m;if(t.depthCount&&t.depthCount>1)return;const{pixels:l,statistics:o,pixelType:i}=t,r=l[0].length,a=(p=t.bandMasks)!=null?p:[],c=(f=t.mask)!=null?f:new Uint8Array(r).fill(255),h=i==="f32"||i==="f64",s=ut(i);let u=!1;for(let g=0;g<l.length;g++){const k=typeof e=="number"?e:e[g];if(k==null)continue;const M=(d=o==null?void 0:o[g].minValue)!=null?d:s[0],y=(m=o==null?void 0:o[g].maxValue)!=null?m:s[1];if(M>k+Number.EPSILON||y<k-Number.EPSILON)continue;const w=a[g]||new Uint8Array(r).fill(255),x=l[g],A=n==null?void 0:n.customFloatTolerance;if(h&&A!==0){let b=A;b||(b=Math.abs(k)>=Jt?zt*Math.abs(k):i==="f32"?2**-23:Number.EPSILON);for(let v=0;v<x.length;v++)w[v]&&Math.abs(x[v]-k)<b&&(x[v]=0,w[v]=0,c[v]=0,u=!0)}else for(let b=0;b<x.length;b++)w[b]&&x[b]===k&&(x[b]=0,w[b]=0,c[b]=0,u=!0);a[g]=w}u&&(t.bandMasks=a,t.mask=c),u&&"updateStatistics"in t&&t.updateStatistics()}var tt;let G=tt=class extends Nt{static createEmptyBand(t,e){return new(tt.getPixelArrayConstructor(t))(e)}static getPixelArrayConstructor(t){let e;switch(t){case"u1":case"u2":case"u4":case"u8":e=Uint8Array;break;case"u16":e=Uint16Array;break;case"u32":e=Uint32Array;break;case"s8":e=Int8Array;break;case"s16":e=Int16Array;break;case"s32":e=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":e=Float32Array;break;case"f64":e=Float64Array}return e}constructor(t){super(t),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.statistics=null,this.depthCount=1}castPixelType(t){if(!t)return"f32";let e=t.toLowerCase();return["u1","u2","u4"].includes(e)?e="u8":["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].includes(e)||(e="f32"),e}getPlaneCount(){var t;return(t=this.pixels)==null?void 0:t.length}addData(t){var e;if(!t.pixels||t.pixels.length!==this.width*this.height)throw new Et("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push((e=t.statistics)!=null?e:new yt)}getAsRGBA(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)}getAsRGBAFloat(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t}updateStatistics(){if(!this.pixels)return;this.statistics=this.pixels.map(n=>this._calculateBandStatistics(n,this.mask));const t=this.mask;let e=0;if(R(t))for(let n=0;n<t.length;n++)t[n]&&e++;else e=this.width*this.height;this.validPixelCount=e}clamp(t){if(!t||t==="f64"||t==="f32"||!this.pixels)return;const[e,n]=ut(t),l=this.pixels,o=this.width*this.height,i=l.length;let r,a,c;const h=[];for(let s=0;s<i;s++){c=tt.createEmptyBand(t,o),r=l[s];for(let u=0;u<o;u++)a=r[u],c[u]=a>n?n:a<e?e:a;h.push(c)}this.pixels=h,this.pixelType=t}extractBands(t){const{pixels:e,statistics:n}=this;if(H(t)||t.length===0||!e||e.length===0)return this;const l=e.length,o=t.some(r=>r>=e.length),i=l===t.length&&!t.some((r,a)=>r!==a);return o||i?this:new tt({pixelType:this.pixelType,width:this.width,height:this.height,mask:this.mask,validPixelCount:this.validPixelCount,maskIsAlpha:this.maskIsAlpha,pixels:t.map(r=>e[r]),statistics:n&&t.map(r=>n[r])})}clone(){const t=new tt({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let e;R(this.mask)&&(this.mask instanceof Uint8Array?t.mask=new Uint8Array(this.mask):t.mask=this.mask.slice(0));const n=tt.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const l=!!this.pixels[0].slice;for(e=0;e<this.pixels.length;e++)t.pixels[e]=l?this.pixels[e].slice(0,this.pixels[e].length):new n(this.pixels[e])}if(this.statistics)for(t.statistics=[],e=0;e<this.statistics.length;e++)t.statistics[e]=jt(this.statistics[e]);return t}_fillFrom8Bit(t){const{mask:e,maskIsAlpha:n,pixels:l}=this;if(!t||!l||!l.length)return void Z.getLogger(this.declaredClass).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let o,i,r,a;o=i=r=l[0],l.length>=3?(i=l[1],r=l[2]):l.length===2&&(i=l[1]);const c=new Uint32Array(t),h=this.width*this.height;if(o.length===h)if(R(e)&&e.length===h)if(n)for(a=0;a<h;a++)e[a]&&(c[a]=e[a]<<24|r[a]<<16|i[a]<<8|o[a]);else for(a=0;a<h;a++)e[a]&&(c[a]=255<<24|r[a]<<16|i[a]<<8|o[a]);else for(a=0;a<h;a++)c[a]=255<<24|r[a]<<16|i[a]<<8|o[a];else Z.getLogger(this.declaredClass).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(t){const{pixels:e,mask:n,statistics:l}=this;if(!t||!e||!e.length)return void Z.getLogger(this.declaredClass).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const o=this.pixelType;let i=1,r=0,a=1;if(l&&l.length>0){for(const m of l)if(m.minValue!=null&&(r=Math.min(r,m.minValue)),m.maxValue!=null&&m.minValue!=null){const g=m.maxValue-m.minValue;a=Math.max(a,g)}i=255/a}else{let m=255;o==="s8"?(r=-128,m=127):o==="u16"?m=65535:o==="s16"?(r=-32768,m=32767):o==="u32"?m=4294967295:o==="s32"?(r=-2147483648,m=2147483647):o==="f32"?(r=-34e38,m=34e38):o==="f64"&&(r=-Number.MAX_VALUE,m=Number.MAX_VALUE),i=255/(m-r)}const c=new Uint32Array(t),h=this.width*this.height;let s,u,p,f,d;if(s=u=p=e[0],s.length!==h)return Z.getLogger(this.declaredClass).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(e.length>=2)if(u=e[1],e.length>=3&&(p=e[2]),R(n)&&n.length===h)for(f=0;f<h;f++)n[f]&&(c[f]=255<<24|(p[f]-r)*i<<16|(u[f]-r)*i<<8|(s[f]-r)*i);else for(f=0;f<h;f++)c[f]=255<<24|(p[f]-r)*i<<16|(u[f]-r)*i<<8|(s[f]-r)*i;else if(R(n)&&n.length===h)for(f=0;f<h;f++)d=(s[f]-r)*i,n[f]&&(c[f]=255<<24|d<<16|d<<8|d);else for(f=0;f<h;f++)d=(s[f]-r)*i,c[f]=255<<24|d<<16|d<<8|d}_fillFrom32Bit(t){const{pixels:e,mask:n}=this;if(!t||!e||!e.length)return Z.getLogger(this.declaredClass).error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let l,o,i,r;l=o=i=e[0],e.length>=3?(o=e[1],i=e[2]):e.length===2&&(o=e[1]);const a=this.width*this.height;if(l.length!==a)return Z.getLogger(this.declaredClass).error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let c=0;if(R(n)&&n.length===a)for(r=0;r<a;r++)t[c++]=l[r],t[c++]=o[r],t[c++]=i[r],t[c++]=1&n[r];else for(r=0;r<a;r++)t[c++]=l[r],t[c++]=o[r],t[c++]=i[r],t[c++]=1}_calculateBandStatistics(t,e){let n=1/0,l=-1/0;const o=t.length;let i,r=0;if(R(e))for(i=0;i<o;i++)e[i]&&(r=t[i],n=r<n?r:n,l=r>l?r:l);else for(i=0;i<o;i++)r=t[i],n=r<n?r:n,l=r>l?r:l;return new yt(n,l)}};q([J({json:{write:!0}})],G.prototype,"width",void 0),q([J({json:{write:!0}})],G.prototype,"height",void 0),q([J({json:{write:!0}})],G.prototype,"pixelType",void 0),q([Rt("pixelType")],G.prototype,"castPixelType",null),q([J({json:{write:!0}})],G.prototype,"validPixelCount",void 0),q([J({json:{write:!0}})],G.prototype,"mask",void 0),q([J({json:{write:!0}})],G.prototype,"maskIsAlpha",void 0),q([J({json:{write:!0}})],G.prototype,"pixels",void 0),q([J({json:{write:!0}})],G.prototype,"statistics",void 0),q([J({json:{write:!0}})],G.prototype,"depthCount",void 0),q([J({json:{write:!0}})],G.prototype,"noDataValues",void 0),q([J({json:{write:!0}})],G.prototype,"bandMasks",void 0),G=tt=q([Lt("esri.layers.support.PixelBlock")],G);const _=G;var kt,Mt;(function(t){t[t.matchAny=0]="matchAny",t[t.matchAll=1]="matchAll"})(kt||(kt={})),function(t){t[t.bestMatch=0]="bestMatch",t[t.fail=1]="fail"}(Mt||(Mt={}));const ke=6;function L(t){return R(t)&&t.declaredClass==="esri.layers.support.PixelBlock"&&t.pixels&&t.pixels.length>0}function Me(t,e){if(!(e!=null&&e.length)||!L(t))return t;const n=t.pixels.length;return e&&e.some(l=>l>=n)||n===1&&e.length===1&&e[0]===0?t:n!==e.length||e.some((l,o)=>l!==o)?new _({pixelType:t.pixelType,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:e.map(l=>t.pixels[l]),statistics:t.statistics&&e.map(l=>t.statistics[l])}):t}function Ae(t){if(!(t!=null&&t.length)||t.some(s=>!L(s)))return null;if(t.length===1)return R(t[0])?t[0].clone():null;const e=t,{width:n,height:l,pixelType:o}=e[0];if(e.some(s=>s.width!==n||s.height!==l))return null;const i=e.map(({mask:s})=>s).filter(s=>s!=null);let r=null;i.length&&(r=new Uint8Array(n*l),r.set(i[0]),i.length>1&&St(i.slice(1),r));const a=[];e.forEach(({pixels:s})=>a.push(...s));const c=e.map(({statistics:s})=>s).filter(s=>s==null?void 0:s.length),h=[];return c.forEach(s=>h.push(...s)),new _({pixelType:o,width:n,height:l,mask:r,pixels:a,statistics:h.length?h:null})}function be(t){if(!t)return;const e=t.colormap;if(!e||e.length===0)return;const n=e.sort((u,p)=>u[0]-p[0]);let l=0;n[0][0]<0&&(l=n[0][0]);const o=Math.max(256,n[n.length-1][0]-l+1),i=new Uint8Array(4*o),r=[];let a,c=0,h=0;const s=n[0].length===5;if(o>65536)return n.forEach(u=>{r[u[0]-l]=s?u.slice(1):u.slice(1).concat([255])}),{indexed2DColormap:r,offset:l,alphaSpecified:s};if(t.fillUnspecified)for(a=n[h],c=a[0]-l;c<o;c++)i[4*c]=a[1],i[4*c+1]=a[2],i[4*c+2]=a[3],i[4*c+3]=s?a[4]:255,c===a[0]-l&&(a=h===n.length-1?a:n[++h]);else for(c=0;c<n.length;c++)a=n[c],h=4*(a[0]-l),i[h]=a[1],i[h+1]=a[2],i[h+2]=a[3],i[h+3]=s?a[4]:255;return{indexedColormap:i,offset:l,alphaSpecified:s}}function ve(t,e){if(!L(t)||!e||!e.indexedColormap&&!e.indexed2DColormap)return t;const n=t.clone(),l=n.pixels;let o=n.mask;const i=n.width*n.height;if(l.length!==1)return t;const{indexedColormap:r,indexed2DColormap:a,offset:c,alphaSpecified:h}=e;let s=0;const u=l[0],p=new Uint8Array(u.length),f=new Uint8Array(u.length),d=new Uint8Array(u.length);let m,g=0;if(r){const k=r.length-1;if(R(o))for(s=0;s<i;s++)o[s]&&(g=4*(u[s]-c),g<c||g>k?o[s]=0:(p[s]=r[g],f[s]=r[g+1],d[s]=r[g+2],o[s]=r[g+3]));else{for(o=new Uint8Array(i),s=0;s<i;s++)g=4*(u[s]-c),g<c||g>k?o[s]=0:(p[s]=r[g],f[s]=r[g+1],d[s]=r[g+2],o[s]=r[g+3]);n.mask=o}}else if(a)if(R(o))for(s=0;s<i;s++)o[s]&&(m=a[u[s]],p[s]=m[0],f[s]=m[1],d[s]=m[2],o[s]=m[3]);else{for(o=new Uint8Array(i),s=0;s<i;s++)m=a[u[s]],p[s]=m[0],f[s]=m[1],d[s]=m[2],o[s]=m[3];n.mask=o}return n.pixels=[p,f,d],n.statistics=null,n.pixelType="u8",n.maskIsAlpha=h,n}function Ue(t,e){if(!L(t))return null;const{pixels:n,mask:l}=t,o=n.length;let i=e.lut;const{offset:r}=e;i&&i[0].length===1&&(i=n.map(()=>i));const a=[],c=e.outputPixelType||"u8";for(let s=0;s<o;s++){const u=It(n[s],l,i[s],r||0,c);a.push(u)}const h=new _({width:t.width,height:t.height,pixels:a,mask:l,pixelType:c});return h.updateStatistics(),h}function It(t,e,n,l,o){const i=t.length,r=_.createEmptyBand(o,i);if(e)for(let a=0;a<i;a++)e[a]&&(r[a]=n[t[a]-l]);else for(let a=0;a<i;a++)r[a]=n[t[a]-l];return r}function Pe(t,e){if(!L(t))return null;const n=t.clone(),{pixels:l}=n,o=n.width*n.height,i=e.length,r=Math.floor(i/2),a=e[Math.floor(r)],c=l[0];let h,s,u,p,f,d,m=!1;const g=new Uint8Array(o),k=new Uint8Array(o),M=new Uint8Array(o);let y=n.mask;const w=e[0].mappedColor.length===4;for(y||(y=new Uint8Array(o),y.fill(w?255:1),n.mask=y),f=0;f<o;f++)if(y[f]){for(h=c[f],m=!1,d=r,s=a,u=0,p=i-1;p-u>1;){if(h===s.value){m=!0;break}h>s.value?u=d:p=d,d=Math.floor((u+p)/2),s=e[Math.floor(d)]}m||(h===e[u].value?(s=e[u],m=!0):h===e[p].value?(s=e[p],m=!0):h<e[u].value?(m=!1,s=null):h>e[u].value&&(h<e[p].value?(s=e[u],m=!0):p===i-1?(m=!1,s=null):(s=e[p],m=!0))),m?(g[f]=s.mappedColor[0],k[f]=s.mappedColor[1],M[f]=s.mappedColor[2],y[f]=s.mappedColor[3]):g[f]=k[f]=M[f]=y[f]=0}return n.pixels=[g,k,M],n.mask=y,n.pixelType="u8",n.maskIsAlpha=w,n}function $e(t,e){if(!L(t))return null;const{width:n,height:l}=t,{inputRanges:o,outputValues:i,outputPixelType:r,noDataRanges:a,allowUnmatched:c,isLastInputRangeInclusive:h}=e,s=t.pixels[0],u=_.createEmptyBand(r,s.length),p=t.mask,f=new Uint8Array(n*l);p?f.set(p):f.fill(255);const d=t.pixelType.startsWith("f")?1e-6:0,m=o.map(y=>y-d);m[0]=o[0],m[m.length-1]=o[o.length-1]+(h?1e-6:0);const g=o.length/2,[k,M]=ut(r);for(let y=0;y<l;y++)for(let w=0;w<n;w++){const x=y*n+w;if(f[x]){const A=s[x];let b=!1;for(let v=g-1;v>=0;v--)if(A===m[2*v]||A>m[2*v]&&A<m[2*v+1]){u[x]=i[v],b=!0;break}b||(c?u[x]=A>M?M:A<k?k:A:f[x]=0)}}if(a!=null&&a.length)for(let y=0;y<l;y++)for(let w=0;w<n;w++){const x=y*n+w;if(!p||p[x]){const A=s[x];for(let b=0;b<g;b+=2)if(A>=a[b]&&A<=a[b+1]){u[x]=0,f[x]=0;break}}}return new _({width:n,height:l,pixelType:r,pixels:[u],mask:f})}function At(t,e,n,l){const o=n!=null&&n.length>=2?new Set(n):null,i=(n==null?void 0:n.length)===1?n[0]:null,r=!!(e!=null&&e.length);for(let a=0;a<t.length;a++)if(l[a]){const c=t[a];if(r){let h=!1;for(let s=0;s<e.length;s+=2)if(c>=e[s]&&c<=e[s+1]){h=!0;break}h||(l[a]=0)}l[a]&&(c===i||(o==null?void 0:o.has(c)))&&(l[a]=0)}}function bt(t,e){const n=t[0].length;for(let l=0;l<n;l++)if(e[l]){let o=!1;for(let i=0;i<t.length;i++)if(t[i][l]){o=!0;break}o||(e[l]=0)}}function St(t,e){const n=t[0].length;for(let l=0;l<n;l++)if(e[l]){let o=!1;for(let i=0;i<t.length;i++)if(t[i][l]===0){o=!0;break}o&&(e[l]=0)}}function Te(t,e){if(!L(t))return null;const{width:n,height:l,pixels:o}=t,i=n*l,r=new Uint8Array(i);t.mask?r.set(t.mask):r.fill(255);const a=o.length,{includedRanges:c,noDataValues:h,outputPixelType:s,matchAll:u,lookups:p}=e;if(p){const f=[];for(let d=0;d<a;d++){const m=p[d],g=It(o[d],r,m.lut,m.offset||0,"u8");f.push(g)}f.length===1?r.set(f[0]):u?bt(f,r):St(f,r)}else if(u){const f=[];for(let d=0;d<a;d++){const m=new Uint8Array(i);m.set(r),At(o[d],c==null?void 0:c.slice(2*d,2*d+2),h==null?void 0:h[d],m),f.push(m)}f.length===1?r.set(f[0]):bt(f,r)}else for(let f=0;f<a;f++)At(o[f],c==null?void 0:c.slice(2*f,2*f+2),h==null?void 0:h[f],r);return new _({width:n,height:l,pixelType:s,pixels:o,mask:r})}function Ie(t){const{srcPixelType:e,inputRanges:n,outputValues:l,allowUnmatched:o,noDataRanges:i,isLastInputRangeInclusive:r,outputPixelType:a}=t;if(e!=="u8"&&e!=="s8"&&e!=="u16"&&e!=="s16")return null;const c=e.includes("16")?65536:256,h=e.includes("s")?-c/2:0,s=_.createEmptyBand(a,c),u=new Uint8Array(c);o&&u.fill(255);const[p,f]=ut(a);if((n==null?void 0:n.length)&&(l==null?void 0:l.length)){const m=n.map(g=>g-1e-6);m[0]=n[0],r&&(m[m.length-1]=n[n.length-1]);for(let g=0;g<m.length;g++){const k=l[g]>f?f:l[g]<p?p:l[g],M=Math.ceil(m[2*g]-h),y=Math.floor(m[2*g+1]-h);for(let w=M;w<=y;w++)s[w]=k,u[w]=255}}if(i!=null&&i.length)for(let d=0;d<i.length;d++){const m=Math.ceil(i[2*d]-h),g=Math.floor(i[2*d+1]-h);for(let k=m;k<=g;k++)u[k]=0}return{lut:s,offset:h,mask:u}}function Se(t,e,n){if(t!=="u8"&&t!=="s8"&&t!=="u16"&&t!=="s16")return null;const l=t.includes("16")?65536:256,o=t.includes("s")?-l/2:0,i=new Uint8Array(l);if(e)for(let r=0;r<e.length;r++){const a=Math.ceil(e[2*r]-o),c=Math.floor(e[2*r+1]-o);for(let h=a;h<=c;h++)i[h]=255}else i.fill(255);if(n)for(let r=0;r<n.length;r++)i[n[r]-o]=0;return{lut:i,offset:o}}function Kt(t,e,n,l,o,i,r,a){return{xmin:o<=n*t?0:o<n*t+t?o-n*t:t,ymin:i<=l*e?0:i<l*e+e?i-l*e:e,xmax:o+r<=n*t?0:o+r<n*t+t?o+r-n*t:t,ymax:i+a<=l*e?0:i+a<l*e+e?i+a-l*e:e}}function Be(t,e){if(!t||t.length===0)return null;const n=t.find(d=>d.pixelBlock);if(!n||H(n.pixelBlock))return null;const l=(n.extent.xmax-n.extent.xmin)/n.pixelBlock.width,o=(n.extent.ymax-n.extent.ymin)/n.pixelBlock.height,i=.01*Math.min(l,o),r=t.sort((d,m)=>Math.abs(d.extent.ymax-m.extent.ymax)>i?m.extent.ymax-d.extent.ymax:Math.abs(d.extent.xmin-m.extent.xmin)>i?d.extent.xmin-m.extent.xmin:0),a=Math.min.apply(null,r.map(d=>d.extent.xmin)),c=Math.min.apply(null,r.map(d=>d.extent.ymin)),h=Math.max.apply(null,r.map(d=>d.extent.xmax)),s=Math.max.apply(null,r.map(d=>d.extent.ymax)),u={x:Math.round((e.xmin-a)/l),y:Math.round((s-e.ymax)/o)},p={width:Math.round((h-a)/l),height:Math.round((s-c)/o)},f={width:Math.round((e.xmax-e.xmin)/l),height:Math.round((e.ymax-e.ymin)/o)};return Math.round(p.width/n.pixelBlock.width)*Math.round(p.height/n.pixelBlock.height)!==r.length||u.x<0||u.y<0||p.width<f.width||p.height<f.height?null:{extent:e,pixelBlock:Qt(r.map(d=>d.pixelBlock),p,{clipOffset:u,clipSize:f})}}function dt(t,e,n,l,o,i){var m;const{width:r,height:a}=n.block,{x:c,y:h}=n.offset,{width:s,height:u}=n.mosaic,p=Kt(r,a,l,o,c,h,s,u);let f=0,d=0;if(i){const g=i.hasGCSSShiftTransform?360:(m=i.halfWorldWidth)!=null?m:0,k=r*i.resolutionX,M=i.startX+l*k;M<g&&M+k>g?d=i.rightPadding:M>=g&&(f=i.leftMargin-i.rightPadding,d=0)}if(p.xmax-=d,typeof e!="number")for(let g=p.ymin;g<p.ymax;g++){const k=(o*a+g-h)*s+(l*r-c)+f,M=g*r;for(let y=p.xmin;y<p.xmax;y++)t[k+y]=e[M+y]}else for(let g=p.ymin;g<p.ymax;g++){const k=(o*a+g-h)*s+(l*r-c)+f;for(let M=p.xmin;M<p.xmax;M++)t[k+M]=e}}function Qt(t,e,n={}){const{clipOffset:l,clipSize:o,alignmentInfo:i,blockWidths:r}=n;if(r)return Yt(t,e,{blockWidths:r});const a=t.find(b=>L(b));if(H(a))return null;const c=o?o.width:e.width,h=o?o.height:e.height,s=a.width,u=a.height,p=e.width/s,f=e.height/u,d={offset:l||{x:0,y:0},mosaic:o||e,block:{width:s,height:u}},m=a.pixelType,g=_.getPixelArrayConstructor(m),k=a.pixels.length,M=[];let y,w;for(let b=0;b<k;b++){w=new g(c*h);for(let v=0;v<f;v++)for(let U=0;U<p;U++){const P=t[v*p+U];L(P)&&(y=P.pixels[b],dt(w,y,d,U,v,i))}M.push(w)}let x;if(t.some(b=>H(b)||R(b.mask)&&b.mask.length>0)){x=new Uint8Array(c*h);for(let b=0;b<f;b++)for(let v=0;v<p;v++){const U=t[b*p+v],P=R(U)?U.mask:null;R(P)?dt(x,P,d,v,b,i):dt(x,U?1:0,d,v,b,i)}}const A=new _({width:c,height:h,pixels:M,pixelType:m,mask:x});return A.updateStatistics(),A}function Yt(t,e,n){const l=t.find(f=>R(f));if(H(l))return null;const o=t.some(f=>!R(f)||!!f.mask),{width:i,height:r}=e,a=o?new Uint8Array(i*r):null,{blockWidths:c}=n,h=[],s=l.getPlaneCount(),u=_.getPixelArrayConstructor(l.pixelType);if(o)for(let f=0,d=0;f<t.length;d+=c[f],f++){const m=t[f];if(!L(m))continue;const g=ft(m.mask);for(let k=0;k<r;k++)for(let M=0;M<c[f];M++)a[k*i+M+d]=g==null?255:g[k*m.width+M]}for(let f=0;f<s;f++){const d=new u(i*r);for(let m=0,g=0;m<t.length;g+=c[m],m++){const k=t[m];if(!L(k))continue;const M=k.pixels[f];if(M!=null)for(let y=0;y<r;y++)for(let w=0;w<c[m];w++)d[y*i+w+g]=M[y*k.width+w]}h.push(d)}const p=new _({width:i,height:r,mask:a,pixels:h,pixelType:l.pixelType});return p.updateStatistics(),p}function Ce(t,e,n){if(!L(t))return null;const{width:l,height:o}=t,i=e.x,r=e.y,a=n.width+i,c=n.height+r;if(i<0||r<0||a>l||c>o||i===0&&r===0&&a===l&&c===o)return t;t.mask||(t.mask=new Uint8Array(l*o));const h=t.mask;for(let s=0;s<o;s++){const u=s*l;for(let p=0;p<l;p++)h[u+p]=s<r||s>=c||p<i||p>=a?0:1}return t.updateStatistics(),t}function Zt(t){if(!L(t))return null;const e=t.clone(),{width:n,height:l,pixels:o}=t,i=o[0],r=e.pixels[0],a=ft(t.mask);for(let c=2;c<l-1;c++){const h=new Map;for(let u=c-2;u<c+2;u++)for(let p=0;p<4;p++){const f=u*n+p;rt(h,i[f],a?a[f]:1)}r[c*n]=vt(h),r[c*n+1]=r[c*n+2]=r[c*n];let s=3;for(;s<n-1;s++){let u=(c-2)*n+s+1;rt(h,i[u],a?a[u]:1),u=(c-1)*n+s+1,rt(h,i[u],a?a[u]:1),u=c*n+s+1,rt(h,i[u],a?a[u]:1),u=(c+1)*n+s+1,rt(h,i[u],a?a[u]:1),u=(c-2)*n+s-3,at(h,i[u],a?a[u]:1),u=(c-1)*n+s-3,at(h,i[u],a?a[u]:1),u=c*n+s-3,at(h,i[u],a?a[u]:1),u=(c+1)*n+s-3,at(h,i[u],a?a[u]:1),r[c*n+s]=vt(h)}r[c*n+s+1]=r[c*n+s]}for(let c=0;c<n;c++)r[c]=r[n+c]=r[2*n+c],r[(l-1)*n+c]=r[(l-2)*n+c];return e.updateStatistics(),e}function vt(t){if(t.size===0)return 0;let e=0,n=-1,l=0;const o=t.keys();let i=o.next();for(;!i.done;)l=t.get(i.value),l>e&&(n=i.value,e=l),i=o.next();return n}function at(t,e,n){if(n===0)return;const l=t.get(e);l===1?t.delete(e):t.set(e,l-1)}function rt(t,e,n){n!==0&&t.set(e,t.has(e)?t.get(e)+1:1)}function te(t,e,n){let{x:l,y:o}=e;const{width:i,height:r}=n;if(l===0&&o===0&&r===t.height&&i===t.width)return t;const{width:a,height:c}=t,h=Math.max(0,o),s=Math.max(0,l),u=Math.min(l+i,a),p=Math.min(o+r,c);if(u<0||p<0||!L(t))return null;l=Math.max(0,-l),o=Math.max(0,-o);const{pixels:f}=t,d=i*r,m=f.length,g=[];for(let w=0;w<m;w++){const x=f[w],A=_.createEmptyBand(t.pixelType,d);for(let b=h;b<p;b++){const v=b*a;let U=(b+o-h)*i+l;for(let P=s;P<u;P++)A[U++]=x[v+P]}g.push(A)}const k=new Uint8Array(d),M=ft(t.mask);for(let w=h;w<p;w++){const x=w*a;let A=(w+o-h)*i+l;for(let b=s;b<u;b++)k[A++]=M?M[x+b]:1}const y=new _({width:n.width,height:n.height,pixelType:t.pixelType,pixels:g,mask:k});return y.updateStatistics(),y}function ee(t,e=!0){if(!L(t))return null;const{pixels:n,width:l,height:o,mask:i,pixelType:r}=t,a=[],c=Math.round(l/2),h=Math.round(o/2),s=o-1,u=l-1;for(let f=0;f<n.length;f++){const d=n[f],m=_.createEmptyBand(r,c*h);let g=0;for(let k=0;k<o;k+=2)for(let M=0;M<l;M+=2){const y=d[k*l+M];if(e){const w=M===u?y:d[k*l+M+1],x=k===s?y:d[k*l+M+l],A=M===u?x:k===s?w:d[k*l+M+l+1];m[g++]=(y+w+x+A)/4}else m[g++]=y}a.push(m)}let p=null;if(R(i)){p=new Uint8Array(c*h);let f=0;for(let d=0;d<o;d+=2)for(let m=0;m<l;m+=2){const g=i[d*l+m];if(e){const k=m===u?g:i[d*l+m+1],M=d===s?g:i[d*l+m+l],y=m===u?M:d===s?k:i[d*l+m+l+1];p[f++]=g*k*M*y?1:0}else p[f++]=g}}return new _({width:c,height:h,pixelType:r,pixels:a,mask:p})}function Fe(t,e,n){if(!L(t))return null;const{width:l,height:o}=e;let{width:i,height:r}=t;const a=new Map,c={x:0,y:0},h=n==null?1:1+n;let s=t;for(let u=0;u<h;u++){const p=Math.ceil(i/l),f=Math.ceil(r/o);for(let d=0;d<f;d++){c.y=d*o;for(let m=0;m<p;m++){c.x=m*l;const g=te(s,c,e);a.set(`${u}/${d}/${m}`,g)}}u<h-1&&(s=ee(s)),i=Math.round(i/2),r=Math.round(r/2)}return a}function Bt(t,e,n,l,o=.5){const{width:i,height:r}=t,{width:a,height:c}=e,h=l.cols,s=l.rows,u=Math.ceil(a/h-.1/h),p=Math.ceil(c/s-.1/s);let f,d,m,g,k,M,y;const w=u*h,x=w*p*s,A=new Float32Array(x),b=new Float32Array(x),v=new Uint32Array(x),U=new Uint32Array(x);let P,B,I=0;for(let S=0;S<p;S++)for(let F=0;F<u;F++){f=12*(S*u+F),d=n[f],m=n[f+1],g=n[f+2],k=n[f+3],M=n[f+4],y=n[f+5];for(let T=0;T<s;T++){I=(S*s+T)*w+F*h,B=(T+.5)/s;for(let $=0;$<T;$++)P=($+.5)/h,A[I+$]=(d*P+m*B+g)*i-o,b[I+$]=(k*P+M*B+y)*r-o,v[I+$]=Math.round(A[I+$]),U[I+$]=Math.round(b[I+$])}f+=6,d=n[f],m=n[f+1],g=n[f+2],k=n[f+3],M=n[f+4],y=n[f+5];for(let T=0;T<s;T++){I=(S*s+T)*w+F*h,B=(T+.5)/s;for(let $=T;$<h;$++)P=($+.5)/h,A[I+$]=(d*P+m*B+g)*i-o,b[I+$]=(k*P+M*B+y)*r-o,v[I+$]=Math.round(A[I+$]),U[I+$]=Math.round(b[I+$])}}return{offsets_x:A,offsets_y:b,offsets_xi:v,offsets_yi:U,gridWidth:w}}function Ve(t,e){const{coefficients:n,spacing:l}=e,{offsets_x:o,offsets_y:i,gridWidth:r}=Bt(t,t,n,{rows:l[0],cols:l[1]},.5),{width:a,height:c}=t,h=new Float32Array(a*c),s=180/Math.PI;for(let u=0;u<c;u++)for(let p=0;p<a;p++){const f=u*r+p,d=u===0?f:f-r,m=u===c-1?f:f+r,g=o[d]-o[m],k=i[m]-i[d];if(isNaN(g)||isNaN(k))h[u*a+p]=90;else{let M=Math.atan2(k,g)*s;M=(360+M)%360,h[u*a+p]=M}}return h}function _e(t,e,n,l,o="nearest"){if(!L(t))return null;o==="majority"&&(t=Zt(t));const{pixels:i,mask:r,pixelType:a}=t,c=t.width,h=t.height,s=_.getPixelArrayConstructor(a),u=i.length,{width:p,height:f}=e;let d=!1;for(let U=0;U<n.length;U+=3)n[U]===-1&&n[U+1]===-1&&n[U+2]===-1&&(d=!0);const{offsets_x:m,offsets_y:g,offsets_xi:k,offsets_yi:M,gridWidth:y}=Bt({width:c,height:h},e,n,l,o==="majority"?0:.5);let w;const x=(U,P,B)=>{const I=U instanceof Float32Array||U instanceof Float64Array?0:.5;for(let S=0;S<f;S++){w=S*y;for(let F=0;F<p;F++){if(m[w]<0||g[w]<0)U[S*p+F]=0;else if(B)U[S*p+F]=P[k[w]+M[w]*c];else{const T=Math.floor(m[w]),$=Math.floor(g[w]),C=Math.ceil(m[w]),V=Math.ceil(g[w]),j=m[w]-T,X=g[w]-$;if(!r||r[T+$*c]&&r[T+$*c]&&r[T+V*c]&&r[C+V*c]){const O=(1-j)*P[T+$*c]+j*P[C+$*c],W=(1-j)*P[T+V*c]+j*P[C+V*c];U[S*p+F]=(1-X)*O+X*W+I}else U[S*p+F]=P[k[w]+M[w]*c]}w++}}},A=[];let b;for(let U=0;U<u;U++)b=new s(p*f),x(b,i[U],o==="nearest"||o==="majority"),A.push(b);const v=new _({width:p,height:f,pixelType:a,pixels:A});if(R(r))v.mask=new Uint8Array(p*f),x(v.mask,r,!0);else if(d){v.mask=new Uint8Array(p*f);for(let U=0;U<p*f;U++)v.mask[U]=m[U]<0||g[U]<0?0:1}return v.updateStatistics(),v}const et=new Map;et.set("meter-per-second",1),et.set("kilometer-per-hour",.277778),et.set("knots",.514444),et.set("feet-per-second",.3048),et.set("mile-per-hour",.44704);const gt=180/Math.PI,xt=5,ct=new Ot({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function wt(t,e){return et.get(t)/et.get(e)||1}function Ct(t){return(450-t)%360}function Ft(t,e="geographic"){const[n,l]=t,o=Math.sqrt(n*n+l*l);let i=Math.atan2(l,n)*gt;return i=(360+i)%360,e==="geographic"&&(i=Ct(i)),[o,i]}function Vt(t,e="geographic"){let n=t[1];e==="geographic"&&(n=Ct(n)),n%=360;const l=t[0];return[l*Math.cos(n/gt),l*Math.sin(n/gt)]}function De(t,e,n,l="geographic"){if(!L(t)||H(n))return t;const o=e==="vector-magdir"?t.clone():ft(Ut(t,e)),i=o.pixels[1];for(let r=0;r<i.length;r++)i[r]=l==="geographic"?(i[r]+n[r]+270)%360:(i[r]+360-n[r])%360;return e==="vector-magdir"?o:Ut(o,"vector-magdir")}function Ut(t,e,n="geographic",l=1){if(!L(t))return t;const{pixels:o,width:i,height:r}=t,a=i*r,c=o[0],h=o[1],s=t.pixelType.startsWith("f")?t.pixelType:"f32",u=_.createEmptyBand(s,a),p=_.createEmptyBand(s,a);let f=0;for(let m=0;m<r;m++)for(let g=0;g<i;g++)e==="vector-uv"?([u[f],p[f]]=Ft([c[f],h[f]],n),u[f]*=l):([u[f],p[f]]=Vt([c[f],h[f]],n),u[f]*=l,p[f]*=l),f++;const d=new _({pixelType:s,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:[u,p]});return d.updateStatistics(),d}function Re(t,e,n=1){if(n===1||!L(t))return t;const l=t.clone(),{pixels:o,width:i,height:r}=l,a=o[0],c=o[1];let h=0;for(let s=0;s<r;s++)for(let u=0;u<i;u++)e==="vector-uv"?(a[h]*=n,c[h]*=n):a[h]*=n,h++;return l.updateStatistics(),l}function Le(t,e,n,l,o){if(H(o)||!o.spatialReference.equals(t.spatialReference))return{extent:t,width:Math.round(e/l),height:Math.round(n/l),resolution:t.width/e};const i=o.xmin,r=o.ymax,a=(t.xmax-t.xmin)/e*l,c=(t.ymax-t.ymin)/n*l,h=(a+c)/2;return t.xmin=i+Math.floor((t.xmin-i)/a)*a,t.xmax=i+Math.ceil((t.xmax-i)/a)*a,t.ymin=r+Math.floor((t.ymin-r)/c)*c,t.ymax=r+Math.ceil((t.ymax-r)/c)*c,{extent:t,width:Math.round(t.width/a),height:Math.round(t.height/c),resolution:h}}const ne=_t(0,0,0);function _t(t=0,e=0,n=Math.PI,l=!0){l&&(n=(2*Math.PI-n)%(2*Math.PI));const o=l?-1:1,i=13*o,r=-7*o,a=-2*o,c=-16*o,h=21.75,[s,u]=E(0,e+i,n,h),[p,f]=E(t-5.5,e+r,n,h),[d,m]=E(t+5.5,e+r,n,h),[g,k]=E(t-1.5,e+a,n,h),[M,y]=E(t+1.5,e+a,n,h),[w,x]=E(t-1.5,e+c,n,h),[A,b]=E(t+1.5,e+c,n,h);return[s,u,p,f,g,k,M,y,d,m,w,x,A,b]}function ie(t=0,e=Math.PI,n=!0){n&&(e=(2*Math.PI-e)%(2*Math.PI));const l=10,o=n?-1:1,i=5*o,r=20*o,a=25*o,c=45,h=0,s=0,u=2,p=0,f=u*o,d=n?1:-1,m=l/2*d;let[g,k]=[h+m,s-r],[M,y]=[g+u*d,k],[w,x]=[M-p*d,y+f],[A,b]=[h-m,s-a],[v,U]=[A+p*d,b-f],P=Math.ceil(t/xt),B=Math.floor(P/10);P-=8*B;const I=[],S=[];for(let K=0;K<P/2;K++,B--){B<=0&&P%2==1&&K===(P-1)/2&&(A=h,v=A+p*d,b=(b+k)/2,U=b-f);const[Q,ot]=E(A,b,e,c);if(B>0){const[it,st]=E(M,b,e,c),[lt,D]=E(g,k,e,c);I.push(it),I.push(st),I.push(Q),I.push(ot),I.push(lt),I.push(D)}else{const[it,st]=E(M,y,e,c),[lt,D]=E(w,x,e,c),[N,pt]=E(v,U,e,c);S.push(Q),S.push(ot),S.push(N),S.push(pt),S.push(lt),S.push(D),S.push(it),S.push(st)}b+=i,k+=i,y+=i,x+=i,U+=i}const[F,T]=E(h+m,s+r,e,c),$=(l/2+u)*d,[C,V]=E(h+$,s+r,e,c),[j,X]=E(h+m,s-a,e,c),[O,W]=E(h+$,s-a,e,c);return{pennants:I,barbs:S,shaft:[F,T,C,V,j,X,O,W]}}function E(t,e,n,l=1){const o=Math.sqrt(t*t+e*e)/l,i=(2*Math.PI+Math.atan2(e,t))%(2*Math.PI);return[o,(2*Math.PI+i-n)%(2*Math.PI)]}const ht=[0,1,3,6,10,16,21,27,33,40,47,55,63],se=[0,.5,1,1.5,2],le=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function Y(t,e,n,l){const o=wt(l||"knots",n);let i;for(i=1;i<e.length;i++)if(i===e.length-1){if(t<e[i]*o)break}else if(t<=e[i]*o)break;return Math.min(i-1,e.length-2)}function re(t,e,n,l,o){let i=0;switch(e){case"beaufort_kn":i=Y(t,ht,"knots",n);break;case"beaufort_km":i=Y(t,ht,"kilometer-per-hour",n);break;case"beaufort_ft":i=Y(t,ht,"feet-per-second",n);break;case"beaufort_m":i=Y(t,ht,"meter-per-second",n);break;case"classified_arrow":i=Y(t,o!=null?o:[],l,n);break;case"ocean_current_m":i=Y(t,se,"meter-per-second",n);break;case"ocean_current_kn":i=Y(t,le,"knots",n)}return i}function oe(t,e){const{style:n,inputUnit:l,outputUnit:o,breakValues:i}=e,r=ct.fromJSON(l),a=ct.fromJSON(o),c=7*6,h=15;let s=0,u=0;const{width:p,height:f,mask:d}=t,m=t.pixels[0],g=t.pixels[1],k=R(d)?d.filter(x=>x>0).length:p*f,M=new Float32Array(k*c),y=new Uint32Array(h*k),w=e.invertDirection?_t(0,0,0,!1):ne;for(let x=0;x<f;x++)for(let A=0;A<p;A++){const b=x*p+A;if(!d||d[x*p+A]){const v=(g[b]+360)%360/180*Math.PI,U=re(m[b],n,r,a,i);for(let B=0;B<w.length;B+=2)M[s++]=(A+.5)/p,M[s++]=(x+.5)/f,M[s++]=w[B],M[s++]=w[B+1]+v,M[s++]=U,M[s++]=m[b];const P=7*(s/c-1);y[u++]=P,y[u++]=P+1,y[u++]=P+2,y[u++]=P+0,y[u++]=P+4,y[u++]=P+3,y[u++]=P+0,y[u++]=P+2,y[u++]=P+3,y[u++]=P+2,y[u++]=P+5,y[u++]=P+3,y[u++]=P+5,y[u++]=P+6,y[u++]=P+3}}return{vertexData:M,indexData:y}}const mt=[];function ae(t,e){if(mt.length===0)for(let f=0;f<30;f++)mt.push(ie(5*f,0,!e.invertDirection));const n=wt(ct.fromJSON(e.inputUnit),"knots"),{width:l,height:o,mask:i}=t,r=t.pixels[0],a=t.pixels[1],c=6,h=[],s=[];let u=0,p=0;for(let f=0;f<o;f++)for(let d=0;d<l;d++){const m=f*l+d,g=r[m]*n;if((!i||i[f*l+d])&&g>=xt){const k=(a[m]+360)%360/180*Math.PI,{pennants:M,barbs:y,shaft:w}=mt[Math.min(Math.floor(g/5),29)];if(M.length+y.length===0)continue;let x=h.length/c;const A=(d+.5)/l,b=(f+.5)/o;for(let v=0;v<M.length;v+=2)h[u++]=A,h[u++]=b,h[u++]=M[v],h[u++]=M[v+1]+k,h[u++]=0,h[u++]=g;for(let v=0;v<y.length;v+=2)h[u++]=A,h[u++]=b,h[u++]=y[v],h[u++]=y[v+1]+k,h[u++]=0,h[u++]=g;for(let v=0;v<w.length;v+=2)h[u++]=A,h[u++]=b,h[u++]=w[v],h[u++]=w[v+1]+k,h[u++]=0,h[u++]=g;for(let v=0;v<M.length/6;v++)s[p++]=x,s[p++]=x+1,s[p++]=x+2,x+=3;for(let v=0;v<y.length/8;v++)s[p++]=x,s[p++]=x+1,s[p++]=x+2,s[p++]=x+1,s[p++]=x+2,s[p++]=x+3,x+=4;s[p++]=x+0,s[p++]=x+1,s[p++]=x+2,s[p++]=x+1,s[p++]=x+3,s[p++]=x+2,x+=4}}return{vertexData:new Float32Array(h),indexData:new Uint32Array(s)}}function he(t,e){let l=0,o=0;const{width:i,height:r,mask:a}=t,c=t.pixels[0],h=[],s=[],u=wt(ct.fromJSON(e.inputUnit),"knots"),p=e.style==="wind_speed"?xt:Number.MAX_VALUE;for(let f=0;f<r;f++)for(let d=0;d<i;d++){const m=c[f*i+d]*u;if((!a||a[f*i+d])&&m<p){for(let k=0;k<4;k++)h[l++]=(d+.5)/i,h[l++]=(f+.5)/r,h[l++]=k<2?-.5:.5,h[l++]=k%2==0?-.5:.5,h[l++]=0,h[l++]=m;const g=4*(l/24-1);s[o++]=g,s[o++]=g+1,s[o++]=g+2,s[o++]=g+1,s[o++]=g+2,s[o++]=g+3}}return{vertexData:new Float32Array(h),indexData:new Uint32Array(s)}}function Ne(t,e){return e.style==="simple_scalar"?he(t,e):e.style==="wind_speed"?ae(t,e):oe(t,e)}function Ee(t,e,n,l=[0,0],o=.5){const{width:i,height:r,mask:a}=t,[c,h]=t.pixels,[s,u]=l,p=Math.round((i-s)/n),f=Math.round((r-u)/n),d=p*f,m=new Float32Array(d),g=new Float32Array(d),k=new Uint8Array(d),M=e==="vector-uv";for(let w=0;w<f;w++)for(let x=0;x<p;x++){let A=0;const b=w*p+x,v=Math.max(0,w*n+u),U=Math.max(0,x*n+s),P=Math.min(r,v+n),B=Math.min(i,U+n);for(let I=v;I<P;I++)for(let S=U;S<B;S++){const F=I*i+S;if(!a||a[F]){A++;const T=M?[c[F],h[F]]:[c[F],(360+h[F])%360],[$,C]=M?T:Vt(T);m[b]+=$,g[b]+=C}}if(A>=(P-v)*(B-U)*(1-o)){k[b]=1;const[I,S]=Ft([m[b]/A,g[b]/A]);m[b]=I,g[b]=S}else k[b]=0,m[b]=0,g[b]=0}const y=new _({width:p,height:f,pixels:[m,g],mask:k});return y.updateStatistics(),y}const z=Z.getLogger("esri.views.2d.engine.flow.dataUtils"),ce=10;async function je(t,e,n,l){const o=performance.now(),i=fe(e,n),r=performance.now(),a=pe(e,i,n.width,n.height),c=performance.now(),h=me(a,!0),s=performance.now(),u=t==="Streamlines"?ge(h,ce):xe(h),p=performance.now();return nt("esri-2d-profiler")&&(z.info("I.1","_createFlowFieldFromData (ms)",Math.round(r-o)),z.info("I.2","_getStreamlines (ms)",Math.round(c-r)),z.info("I.3","createAnimatedLinesData (ms)",Math.round(s-c)),z.info("I.4","create{Streamlines|Particles}Mesh (ms)",Math.round(p-s)),z.info("I.5","createFlowMesh (ms)",Math.round(p-o)),z.info("I.6","Mesh size (bytes)",u.vertexData.buffer.byteLength+u.indexData.buffer.byteLength)),await Promise.resolve(),Gt(l),u}function fe(t,e){const n=de(e.data,e.width,e.height,t.smoothing);return t.interpolate?(l,o)=>{const i=Math.floor(l),r=Math.floor(o);if(i<0||i>=e.width)return[0,0];if(r<0||r>=e.height)return[0,0];const a=l-i,c=o-r,h=i,s=r,u=i<e.width-1?i+1:i,p=r<e.height-1?r+1:r,f=n[2*(s*e.width+h)],d=n[2*(s*e.width+u)],m=n[2*(p*e.width+h)],g=n[2*(p*e.width+u)],k=n[2*(s*e.width+h)+1],M=n[2*(s*e.width+u)+1];return[(f*(1-c)+m*c)*(1-a)+(d*(1-c)+g*c)*a,(k*(1-c)+n[2*(p*e.width+h)+1]*c)*(1-a)+(M*(1-c)+n[2*(p*e.width+u)+1]*c)*a]}:(l,o)=>{const i=Math.round(l),r=Math.round(o);return i<0||i>=e.width||r<0||r>=e.height?[0,0]:[n[2*(r*e.width+i)+0],n[2*(r*e.width+i)+1]]}}function ue(t,e,n,l,o,i,r,a,c){const h=[];let s=n,u=l,p=0,[f,d]=e(s,u);f*=t.velocityScale,d*=t.velocityScale;const m=Math.sqrt(f*f+d*d);let g,k;h.push({x:s,y:u,t:p,speed:m});for(let M=0;M<t.verticesPerLine;M++){let[y,w]=e(s,u);y*=t.velocityScale,w*=t.velocityScale;const x=Math.sqrt(y*y+w*w);if(x<t.minSpeedThreshold)return h;const A=y/x,b=w/x;if(s+=A*t.segmentLength,u+=b*t.segmentLength,p+=t.segmentLength/x,Math.acos(A*g+b*k)>t.maxTurnAngle)return h;if(t.collisions){const v=Math.round(s*c),U=Math.round(u*c);if(v<0||v>r-1||U<0||U>a-1)return h;const P=i[U*r+v];if(P!==-1&&P!==o)return h;i[U*r+v]=o}h.push({x:s,y:u,t:p,speed:x}),g=A,k=b}return h}function pe(t,e,n,l){const o=[],i=new Tt,r=1/Math.max(t.lineCollisionWidth,1),a=Math.round(n*r),c=Math.round(l*r),h=new Int32Array(a*c);for(let u=0;u<h.length;u++)h[u]=-1;const s=[];for(let u=0;u<l;u+=t.lineSpacing)for(let p=0;p<n;p+=t.lineSpacing)s.push({x:p,y:u,sort:i.getFloat()});s.sort((u,p)=>u.sort-p.sort);for(const{x:u,y:p}of s)if(i.getFloat()<t.density){const f=ue(t,e,u,p,o.length,h,a,c,r);if(f.length<2)continue;o.push(f)}return o}function de(t,e,n,l){if(l===0)return t;const o=Math.round(3*l),i=new Array(2*o+1);let r=0;for(let h=-o;h<=o;h++){const s=Math.exp(-h*h/(l*l));i[h+o]=s,r+=s}for(let h=-o;h<=o;h++)i[h+o]/=r;const a=new Float32Array(t.length);for(let h=0;h<n;h++)for(let s=0;s<e;s++){let u=0,p=0;for(let f=-o;f<=o;f++){if(s+f<0||s+f>=e)continue;const d=i[f+o];u+=d*t[2*(h*e+(s+f))+0],p+=d*t[2*(h*e+(s+f))+1]}a[2*(h*e+s)+0]=u,a[2*(h*e+s)+1]=p}const c=new Float32Array(t.length);for(let h=0;h<e;h++)for(let s=0;s<n;s++){let u=0,p=0;for(let f=-o;f<=o;f++){if(s+f<0||s+f>=n)continue;const d=i[f+o];u+=d*a[2*((s+f)*e+h)+0],p+=d*a[2*((s+f)*e+h)+1]}c[2*(s*e+h)+0]=u,c[2*(s*e+h)+1]=p}return c}function me(t,e){const n=new Tt,l=t.reduce((c,h)=>c+h.length,0),o=new Float32Array(4*l),i=new Array(t.length);let r=0,a=0;for(const c of t){const h=r;for(const s of c)o[4*r+0]=s.x,o[4*r+1]=s.y,o[4*r+2]=s.t,o[4*r+3]=s.speed,r++;i[a++]={startVertex:h,numberOfVertices:c.length,totalTime:c[c.length-1].t,timeSeed:e?n.getFloat():0}}return{lineVertices:o,lineDescriptors:i}}function ge(t,e){const{lineVertices:l,lineDescriptors:o}=t;let i=0,r=0;for(const f of o)i+=2*f.numberOfVertices,r+=6*(f.numberOfVertices-1);const a=new Float32Array(i*9),c=new Uint32Array(r);let h=0,s=0;function u(){c[s++]=h-2,c[s++]=h,c[s++]=h-1,c[s++]=h,c[s++]=h+1,c[s++]=h-1}function p(f,d,m,g,k,M,y,w){const x=h*9;let A=0;a[x+A++]=f,a[x+A++]=d,a[x+A++]=1,a[x+A++]=m,a[x+A++]=M,a[x+A++]=y,a[x+A++]=g/2,a[x+A++]=k/2,a[x+A++]=w,h++,a[x+A++]=f,a[x+A++]=d,a[x+A++]=-1,a[x+A++]=m,a[x+A++]=M,a[x+A++]=y,a[x+A++]=-g/2,a[x+A++]=-k/2,a[x+A++]=w,h++}for(const f of o){const{totalTime:d,timeSeed:m}=f;let g=null,k=null,M=null,y=null,w=null,x=null;for(let A=0;A<f.numberOfVertices;A++){const b=l[4*(f.startVertex+A)+0],v=l[4*(f.startVertex+A)+1],U=l[4*(f.startVertex+A)+2],P=l[4*(f.startVertex+A)+3];let B=null,I=null,S=null,F=null;if(A>0){B=b-g,I=v-k;const T=Math.sqrt(B*B+I*I);if(B/=T,I/=T,A>1){let $=B+w,C=I+x;const V=Math.sqrt($*$+C*C);$/=V,C/=V;const j=Math.min(1/($*B+C*I),e);$*=j,C*=j,S=-C,F=$}else S=-I,F=B;S!==null&&F!==null&&(p(g,k,M,S,F,d,m,P),u())}g=b,k=v,M=U,w=B,x=I,y=P}p(g,k,M,-x,w,d,m,y)}return{vertexData:a,indexData:c}}function xe(t){const{lineVertices:o,lineDescriptors:i}=t;let r=0,a=0;for(const T of i){const $=T.numberOfVertices-1;r+=4*$*2,a+=6*$*2}const c=new Float32Array(r*16),h=new Uint32Array(a);let s,u,p,f,d,m,g,k,M,y,w,x,A,b,v=0,U=0;function P(){h[U++]=v-8,h[U++]=v-7,h[U++]=v-6,h[U++]=v-7,h[U++]=v-5,h[U++]=v-6,h[U++]=v-4,h[U++]=v-3,h[U++]=v-2,h[U++]=v-3,h[U++]=v-1,h[U++]=v-2}function B(T,$,C,V,j,X,O,W,K,Q,ot,it,st,lt){const D=v*16;let N=0;for(const pt of[1,2])for(const Dt of[1,2,3,4])c[D+N++]=T,c[D+N++]=$,c[D+N++]=C,c[D+N++]=V,c[D+N++]=O,c[D+N++]=W,c[D+N++]=K,c[D+N++]=Q,c[D+N++]=pt,c[D+N++]=Dt,c[D+N++]=st,c[D+N++]=lt,c[D+N++]=j/2,c[D+N++]=X/2,c[D+N++]=ot/2,c[D+N++]=it/2,v++}function I(T,$){let C=M+w,V=y+x;const j=Math.sqrt(C*C+V*V);C/=j,V/=j;const X=M*C+y*V;C/=X,V/=X;let O=w+A,W=x+b;const K=Math.sqrt(O*O+W*W);O/=K,W/=K;const Q=w*O+x*W;O/=Q,W/=Q,B(s,u,p,f,-V,C,d,m,g,k,-W,O,T,$),P()}function S(T,$,C,V,j,X){if(M=w,y=x,w=A,x=b,M==null&&y==null&&(M=w,y=x),d!=null&&m!=null){A=T-d,b=$-m;const O=Math.sqrt(A*A+b*b);A/=O,b/=O}M!=null&&y!=null&&I(j,X),s=d,u=m,p=g,f=k,d=T,m=$,g=C,k=V}function F(T,$){M=w,y=x,w=A,x=b,M==null&&y==null&&(M=w,y=x),M!=null&&y!=null&&I(T,$)}for(const T of i){s=null,u=null,p=null,f=null,d=null,m=null,g=null,k=null,M=null,y=null,w=null,x=null,A=null,b=null;const{totalTime:$,timeSeed:C}=T;for(let V=0;V<T.numberOfVertices;V++)S(o[4*(T.startVertex+V)+0],o[4*(T.startVertex+V)+1],o[4*(T.startVertex+V)+2],o[4*(T.startVertex+V)+3],$,C);F($,C)}return{vertexData:c,indexData:h}}function Pt(t,e){const n=e.pixels,{width:l,height:o}=e,i=new Float32Array(l*o*2),r=e.mask||new Uint8Array(l*o*2);if(e.mask||r.fill(255),t==="vector-uv")for(let a=0;a<l*o;a++)i[2*a+0]=n[0][a],i[2*a+1]=-n[1][a];else if(t==="vector-magdir")for(let a=0;a<l*o;a++){const c=n[0][a],h=Xt(n[1][a]),s=Math.cos(h-Math.PI/2),u=Math.sin(h-Math.PI/2);i[2*a+0]=s*c,i[2*a+1]=u*c}return{data:i,mask:r,width:l,height:o}}async function Oe(t,e,n,l,o,i){const r=performance.now(),a=qt(e.spatialReference);if(!a){const w=await $t(t,e,n,l,o,i);return nt("esri-2d-profiler")&&z.info("I.7","loadImagery, early exit (ms)",Math.round(performance.now()-r)),nt("esri-2d-profiler")&&z.info("I.9","Number of parts",1),w}const[c,h]=a.valid,s=h-c,u=Math.ceil(e.width/s),p=e.width/u,f=Math.round(n/u);let d=e.xmin;const m=[],g=performance.now();for(let w=0;w<u;w++){const x=new Wt({xmin:d,xmax:d+p,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference});m.push($t(t,x,f,l,o,i)),d+=p}const k=await Promise.all(m);nt("esri-2d-profiler")&&z.info("I.8","All calls to _fetchPart (ms)",Math.round(performance.now()-g)),nt("esri-2d-profiler")&&z.info("I.9","Number of parts",k.length);const M={data:new Float32Array(n*l*2),mask:new Uint8Array(n*l),width:n,height:l};let y=0;for(const w of k){for(let x=0;x<w.height;x++)for(let A=0;A<w.width;A++)y+A>=n||(M.data[2*(x*n+y+A)+0]=w.data[2*(x*w.width+A)+0],M.data[2*(x*n+y+A)+1]=w.data[2*(x*w.width+A)+1],M.mask[x*n+y+A]=w.mask[x*w.width+A]);y+=w.width}return nt("esri-2d-profiler")&&z.info("I.10","loadImagery, general exit (ms)",Math.round(performance.now()-r)),M}async function $t(t,e,n,l,o,i){const r={requestProjectedLocalDirections:!0,signal:i};if(R(o)&&(r.timeExtent=o),t.type==="imagery"){await t.load({signal:i});const h=t.rasterInfo.dataType,s=await t.fetchImage(e,n,l,r);return!s||H(s.pixelData)||H(s.pixelData.pixelBlock)?{data:new Float32Array(n*l*2),mask:new Uint8Array(n*l),width:n,height:l}:Pt(h,s.pixelData.pixelBlock)}await t.load({signal:i});const a=t.rasterInfo.dataType,c=await t.fetchPixels(e,n,l,r);return!c||H(c.pixelBlock)?{data:new Float32Array(n*l*2),mask:new Uint8Array(n*l),width:n,height:l}:Pt(a,c.pixelBlock)}export{Se as A,ct as B,wt as C,he as D,Re as E,Ne as F,Ie as M,Fe as R,Ce as S,Be as T,Oe as a,_ as b,Qt as c,Ut as d,_e as e,Ve as f,je as g,Me as h,L as i,Ee as j,ve as k,Pe as l,De as m,be as n,Ae as o,Ue as p,Mt as q,kt as r,ut as s,ke as t,ye as u,Te as v,It as w,Le as x,$e as y,Ft as z};
